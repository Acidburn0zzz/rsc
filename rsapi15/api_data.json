{
  "PlacementGroups": {
    "methods": {
      "create": {
        "status_code": "201 Created",
        "access_rules": [
          "actor"
        ],
        "parameters": {
          "placement_group[description]": {
            "class": "String",
            "non_blank": false,
            "description": "The description of the Placement Group to be created."
          },
          "placement_group[name]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The name of the Placement Group to be created."
          },
          "placement_group": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "placement_group[cloud_href]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The Href of the Cloud in which the PlacementGroup should be created. Note: This feature is not supported for all clouds."
          }
        },
        "route": "POST   /api/placement_groups(.:format)?         {:action=>\"create\", :controller=>\"placement_groups\"}",
        "description": "Creates a PlacementGroup."
      },
      "destroy": {
        "status_code": "204 No Content",
        "access_rules": [
          "actor"
        ],
        "parameters": {
        },
        "route": "DELETE /api/placement_groups/:id(.:format)?     {:action=>\"destroy\", :controller=>\"placement_groups\"}",
        "description": "Destroys a PlacementGroup."
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "filters": {
          "state": {
            "description": "State of the Placement Groups to filter on. Valid values are: [\"pending\", \"available\", \"terminating\"]."
          },
          "name": {
            "description": "Name of the Placement Groups to filter on.",
            "partial_match": true
          },
          "cloud_href": {
            "description": "Href of the Cloud to filter on."
          }
        },
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default"
            ]
          },
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "route": "GET    /api/placement_groups(.:format)?         {:action=>\"index\", :controller=>\"placement_groups\"}",
        "description": "Lists all PlacementGroups in an account.",
        "example_resource": {
          "actions": [

          ],
          "state": null,
          "created_at": "2015/01/13 00:02:48 +0000",
          "resource_uid": "RESOURCE_2665497505",
          "links": [
            {"rel":"self","href":"/api/placement_groups/ABC1680812507DEF"},
            {"rel":"cloud","href":"/api/clouds/888"}
          ],
          "description": "",
          "name": "NAME_291459004",
          "updated_at": "2015/01/13 00:02:48 +0000"
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default"
            ]
          }
        },
        "route": "GET    /api/placement_groups/:id(.:format)?     {:action=>\"show\", :controller=>\"placement_groups\"}",
        "description": "Shows information about a single PlacementGroup.",
        "example_resource": {
          "actions": [

          ],
          "state": null,
          "created_at": "2015/01/13 00:02:48 +0000",
          "resource_uid": "RESOURCE_2665497505",
          "links": [
            {"rel":"self","href":"/api/placement_groups/ABC1680812507DEF"},
            {"rel":"cloud","href":"/api/clouds/888"}
          ],
          "description": "",
          "name": "NAME_291459004",
          "updated_at": "2015/01/13 00:02:48 +0000"
        }
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself",
        "cloud": "Href of the Cloud that this PlacementGroup belongs to"
      },
      "attributes": {
        "actions": "",
        "state": "",
        "created_at": "",
        "resource_uid": "",
        "links": "",
        "description": "",
        "name": "",
        "updated_at": ""
      },
      "description": null,
      "content_types": [
        "application/vnd.rightscale.placement_group"
      ]
    },
    "description": null
  },
  "NetworkOptionGroups": {
    "methods": {
      "create": {
        "status_code": "201 Created",
        "access_rules": [
          "security_manager"
        ],
        "parameters": {
          "network_option_group[description]": {
            "class": "String",
            "non_blank": false,
            "description": "Description of this NetworkOptionGroup"
          },
          "network_option_group[options]": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "network_option_group[options][*]": {
            "class": "String",
            "non_blank": true,
            "description": "Key/Value separated options (ex: network_option_group[options][domain-name]='rightscale.com'"
          },
          "network_option_group": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "network_option_group[type]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "Type of this NetworkOptionGroup"
          },
          "network_option_group[cloud_href]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The Cloud to create this NetworkOptionGroup in"
          },
          "network_option_group[name]": {
            "class": "String",
            "non_blank": false,
            "description": "Name of this NetworkOptionGroup"
          }
        },
        "route": "POST   /api/network_option_groups(.:format)?    {:action=>\"create\", :controller=>\"network_option_groups\"}",
        "description": "Create a new NetworkOptionGroup."
      },
      "destroy": {
        "status_code": "204 No Content",
        "access_rules": [
          "security_manager"
        ],
        "parameters": {
        },
        "route": "DELETE /api/network_option_groups/:id(.:format)? {:action=>\"destroy\", :controller=>\"network_option_groups\"}",
        "description": "Delete an existing NetworkOptionGroup."
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "filters": {
          "name": {
            "partial_match": true,
            "description": "Returns NetworkOptionGroups containing the specified name"
          },
          "cloud_href": {
            "description": "Returns NetworkOptionGroups in the specified cloud"
          },
          "description": {
            "description": "Returns NetworkOptionGroups containing the specified description",
            "partial_match": true
          },
          "type": {
            "description": "Returns NetworkOptionGroups with the specified types",
            "column": "network_options_group_type"
          }
        },
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "route": "GET    /api/network_option_groups(.:format)?    {:action=>\"index\", :controller=>\"network_option_groups\"}",
        "description": "List NetworkOptionGroups available in this account.",
        "example_resource": {
          "type": "aws-dhcp-options",
          "options": {
            "dns_names": "xxx.com"
          },
          "created_at": "2015/01/13 00:03:03 +0000",
          "resource_uid": "RESOURCE_4263520164",
          "links": [
            {"rel":"self","href":"/api/network_option_groups/RESOURCE_4263520164;1134642119"},
            {"rel":"cloud","href":"/api/clouds/888"}
          ],
          "description": null,
          "name": "NAME_1451655768",
          "updated_at": "2015/01/13 00:03:03 +0000"
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
        },
        "route": "GET    /api/network_option_groups/:id(.:format)? {:action=>\"show\", :controller=>\"network_option_groups\"}",
        "description": "Show information about a single NetworkOptionGroup.",
        "example_resource": {
          "type": "aws-dhcp-options",
          "options": {
            "dns_names": "xxx.com"
          },
          "created_at": "2015/01/13 00:03:03 +0000",
          "resource_uid": "RESOURCE_4263520164",
          "links": [
            {"rel":"self","href":"/api/network_option_groups/RESOURCE_4263520164;1134642119"},
            {"rel":"cloud","href":"/api/clouds/888"}
          ],
          "description": null,
          "name": "NAME_1451655768",
          "updated_at": "2015/01/13 00:03:03 +0000"
        }
      },
      "update": {
        "status_code": "204 No Content",
        "access_rules": [
          "security_manager"
        ],
        "parameters": {
          "network_option_group[description]": {
            "class": "String",
            "non_blank": false,
            "mandatory": false,
            "description": "Update the description"
          },
          "network_option_group[options][*]": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "Add new or update existing key/value option pairs."
          },
          "network_option_group": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "network_option_group[name]": {
            "class": "String",
            "non_blank": false,
            "mandatory": false,
            "description": "Update the name"
          }
        },
        "route": "PUT    /api/network_option_groups/:id(.:format)? {:action=>\"update\", :controller=>\"network_option_groups\"}",
        "description": "Update an existing NetworkOptionGroup."
      }
    },
    "media_type": {
      "links": {
        "self": "This NetworkOptionGroup's href",
        "cloud": "Associated cloud."
      },
      "attributes": {
        "type": "",
        "actions": "",
        "options": "",
        "created_at": "",
        "resource_uid": "",
        "links": "",
        "description": "",
        "name": "",
        "updated_at": ""
      },
      "description": "A key/value pair hash containing options for configuring a Network.\n\nThe key/value pairs are stored in the \"options\" parameter.\n\nKeys correspond to the type of option to set, and values correspond\n  to the value of the particular option being set.\n\nOption keys that are supported vary depending on cloud -- please consult\n  your particular cloud's documentation for available option keys.",
      "content_types": [
        "application/vnd.rightscale.network_option_group"
      ]
    },
    "description": "A key/value pair hash containing options for configuring a Network.\n\nThe key/value pairs are stored in the \"options\" parameter.\n\nKeys correspond to the type of option to set, and values correspond\nto the value of the particular option being set.\n\nOption keys that are supported vary depending on cloud -- please consult\nyour particular cloud's documentation for available option keys."
  },
  "IdentityProviders": {
    "methods": {
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "admin"
        ],
        "filters": {
          "name": {
            "partial_match": true,
            "description": "The name of the identity provider to filter on.",
            "column": "friendly_name"
          }
        },
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default"
            ]
          },
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "route": "GET    /api/identity_providers(.:format)?       {:action=>\"index\", :controller=>\"identity_providers\"}",
        "description": "Lists the identity providers associated with this enterprise account."
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "admin"
        ],
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default"
            ]
          }
        },
        "route": "GET    /api/identity_providers/:id(.:format)?   {:action=>\"show\", :controller=>\"identity_providers\"}",
        "description": "Show the specified identity provider, if associated with this enterprise account."
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself"
      },
      "attributes": {
        "actions": "",
        "discovery_hint": "",
        "created_at": "",
        "links": "",
        "name": "",
        "updated_at": ""
      },
      "description": "An Identity Provider represents a SAML identity provider (IdP) that is linked to your RightScale Enterprise account,\n  and is trusted by the RightScale dashboard to authenticate your enterprise's end users.\n  To register an Identity Provider, contact your account manager.\n\nOnce your provider is registered with RightScale and associated with your enterprise account,\n  you can use the provisioning API to query the IdentityProviders resource and discover your provider's API href.\n  You can use the href to create new users via provisioning API who are pre-linked to your SAML identity provider and\n  can perform single sign-on immediately, without accepting an invitation or choosing a password.",
      "content_types": [
        "application/vnd.rightscale.identity_provider"
      ]
    },
    "description": "An Identity Provider represents a SAML identity provider (IdP) that is linked to your RightScale Enterprise account,\nand is trusted by the RightScale dashboard to authenticate your enterprise's end users.\nTo register an Identity Provider, contact your account manager."
  },
  "CookbookAttachments": {
    "methods": {
      "create": {
        "status_code": "201 Created",
        "access_rules": [
          "designer"
        ],
        "parameters": {
          "cookbook_attachment[server_template_href]": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "The href of the server template to attach the cookbook to."
          },
          "cookbook_attachment[cookbook_href]": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "The href of the cookbook to attach."
          },
          "cookbook_attachment": {
            "class": "Hash",
            "non_blank": true
          }
        },
        "route": "POST   /api/cookbooks/:cookbook_id/cookbook_attachments(.:format)? {:action=>\"create\", :controller=>\"cookbook_attachments\"}POST   /api/server_templates/:server_template_id/cookbook_attachments(.:format)? {:action=>\"create\", :controller=>\"cookbook_attachments\"}POST   /api/cookbook_attachments(.:format)?     {:action=>\"create\", :controller=>\"cookbook_attachments\"}",
        "description": "Attach a cookbook to a given resource."
      },
      "multi_attach": {
        "status_code": "204 No Content",
        "access_rules": [
          "designer"
        ],
        "parameters": {
          "cookbook_attachments": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "cookbook_attachments[server_template_href]": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "The href of the server template to attach the cookbooks to."
          },
          "cookbook_attachments[cookbook_hrefs]": {
            "class": "Array",
            "non_blank": true,
            "description": "The hrefs of the cookbooks to be attached"
          }
        },
        "route": "POST   /api/server_templates/:server_template_id/cookbook_attachments/multi_attach(.:format)? {:action=>\"multi_attach\", :controller=>\"cookbook_attachments\"}POST   /api/cookbook_attachments/multi_attach(.:format)? {:action=>\"multi_attach\", :controller=>\"cookbook_attachments\"}",
        "description": "Attach multiple cookbooks to a given resource."
      },
      "multi_detach": {
        "status_code": "204 No Content",
        "access_rules": [
          "designer"
        ],
        "parameters": {
          "cookbook_attachments[cookbook_attachment_hrefs]": {
            "class": "Array",
            "non_blank": true,
            "description": "The hrefs of the cookbook attachments to be detached"
          },
          "cookbook_attachments": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          }
        },
        "route": "POST   /api/server_templates/:server_template_id/cookbook_attachments/multi_detach(.:format)? {:action=>\"multi_detach\", :controller=>\"cookbook_attachments\"}POST   /api/cookbook_attachments/multi_detach(.:format)? {:action=>\"multi_detach\", :controller=>\"cookbook_attachments\"}",
        "description": "Detach multiple cookbooks from a given resource."
      },
      "destroy": {
        "status_code": "204 No Content",
        "access_rules": [
          "designer"
        ],
        "parameters": {
        },
        "route": "DELETE /api/cookbooks/:cookbook_id/cookbook_attachments/:id(.:format)? {:action=>\"destroy\", :controller=>\"cookbook_attachments\"}DELETE /api/server_templates/:server_template_id/cookbook_attachments/:id(.:format)? {:action=>\"destroy\", :controller=>\"cookbook_attachments\"}DELETE /api/cookbook_attachments/:id(.:format)? {:action=>\"destroy\", :controller=>\"cookbook_attachments\"}",
        "description": "Detach a cookbook from a given resource."
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "filters": {
        },
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default"
            ]
          }
        },
        "route": "GET    /api/cookbooks/:cookbook_id/cookbook_attachments(.:format)? {:action=>\"index\", :controller=>\"cookbook_attachments\"}GET    /api/server_templates/:server_template_id/cookbook_attachments(.:format)? {:action=>\"index\", :controller=>\"cookbook_attachments\"}GET    /api/cookbook_attachments(.:format)?     {:action=>\"index\", :controller=>\"cookbook_attachments\"}",
        "description": "Lists Cookbook Attachments.",
        "example_resource": {
          "actions": [

          ],
          "dependency": false,
          "links": [
            {"rel":"self","href":"/api/cookbook_attachments/3"},
            {"rel":"cookbook","href":"/api/cookbooks/3"},
            {"rel":"server_template","href":"/api/server_templates/9"}
          ],
          "id": "3"
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default"
            ]
          }
        },
        "route": "GET    /api/cookbooks/:cookbook_id/cookbook_attachments/:id(.:format)? {:action=>\"show\", :controller=>\"cookbook_attachments\"}GET    /api/server_templates/:server_template_id/cookbook_attachments/:id(.:format)? {:action=>\"show\", :controller=>\"cookbook_attachments\"}GET    /api/cookbook_attachments/:id(.:format)? {:action=>\"show\", :controller=>\"cookbook_attachments\"}",
        "description": "Displays information about a single cookbook attachment to a ServerTemplate.",
        "example_resource": {
          "actions": [

          ],
          "dependency": false,
          "links": [
            {"rel":"self","href":"/api/cookbook_attachments/3"},
            {"rel":"cookbook","href":"/api/cookbooks/3"},
            {"rel":"server_template","href":"/api/server_templates/9"}
          ],
          "id": "3"
        }
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself",
        "cookbook": "Href of the attached Cookbook",
        "server_template": "Href of ServerTemplate"
      },
      "attributes": {
        "actions": "",
        "dependency": "",
        "links": "",
        "id": ""
      },
      "description": "Cookbook Attachment is used to associate a particular cookbook with a ServerTemplate. A Cookbook Attachment must be in place before a recipe can be bound to a runlist using RunnableBinding.",
      "content_types": [
        "application/vnd.rightscale.cookbook_attachment"
      ]
    },
    "description": "Cookbook Attachment is used to associate a particular cookbook with a ServerTemplate. A Cookbook Attachment must be in place before a recipe can be bound to a runlist using RunnableBinding."
  },
  "AccountGroups": {
    "methods": {
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "publisher"
        ],
        "filters": {
        },
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default"
            ]
          },
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "route": "GET    /api/account_groups(.:format)?           {:action=>\"index\", :controller=>\"account_groups\"}",
        "description": "Lists the AccountGroups owned by this Account.",
        "example_resource": {
          "actions": [

          ],
          "created_at": 1421107368,
          "links": [
            {"rel":"self","href":"/api/account_groups/1"},
            {"rel":"account","href":"/api/accounts/367396534"}
          ],
          "description": "DESCRIPTION_3939168006",
          "name": "NAME_3136611440",
          "updated_at": 1421107368
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "publisher"
        ],
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default"
            ]
          }
        },
        "route": "GET    /api/account_groups/:id(.:format)?       {:action=>\"show\", :controller=>\"account_groups\"}",
        "description": "Show information about a single AccountGroup.",
        "example_resource": {
          "actions": [

          ],
          "created_at": 1421107368,
          "links": [
            {"rel":"self","href":"/api/account_groups/1"},
            {"rel":"account","href":"/api/accounts/367396534"}
          ],
          "description": "DESCRIPTION_3939168006",
          "name": "NAME_3136611440",
          "updated_at": 1421107368
        }
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself",
        "account": "Associated account"
      },
      "attributes": {
        "actions": "",
        "created_at": "",
        "links": "",
        "description": "",
        "name": "",
        "updated_at": ""
      },
      "description": "An Account Group specifies which RightScale accounts will have access to import a shared RightScale component (e.g. ServerTemplate, RightScript, etc.) from the MultiCloud Marketplace.",
      "content_types": [
        "application/vnd.rightscale.account_group"
      ]
    },
    "description": "An Account Group specifies which RightScale accounts will have access to import a shared RightScale component (e.g. ServerTemplate, RightScript, etc.) from the MultiCloud Marketplace."
  },
  "VolumeSnapshots": {
    "methods": {
      "create": {
        "status_code": "201 Created",
        "access_rules": [
          "actor||instance"
        ],
        "parameters": {
          "volume_snapshot[description]": {
            "class": "String",
            "non_blank": true,
            "description": "The description for the Volume Snapshot to be created."
          },
          "volume_snapshot[deployment_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the Deployment that owns this Volume Snapshot."
          },
          "volume_snapshot[name]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The name for the Volume Snapshot to be created."
          },
          "volume_snapshot[parent_volume_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the Volume from which the Volume Snapshot will be created."
          },
          "volume_snapshot": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          }
        },
        "route": "POST   /api/clouds/:cloud_id/volumes/:volume_id/volume_snapshots(.:format)? {:action=>\"create\", :controller=>\"volume_snapshots\"}POST   /api/clouds/:cloud_id/volume_snapshots(.:format)? {:action=>\"create\", :controller=>\"volume_snapshots\"}",
        "description": "Creates a new volume_snapshot."
      },
      "destroy": {
        "status_code": "204 No Content",
        "access_rules": [
          "actor||instance"
        ],
        "parameters": {
        },
        "route": "DELETE /api/clouds/:cloud_id/volumes/:volume_id/volume_snapshots/:id(.:format)? {:action=>\"destroy\", :controller=>\"volume_snapshots\"}DELETE /api/clouds/:cloud_id/volume_snapshots/:id(.:format)? {:action=>\"destroy\", :controller=>\"volume_snapshots\"}",
        "description": "Deletes a given volume_snapshot."
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer||instance"
        ],
        "filters": {
          "resource_uid": {
            "description": "Resource Unique IDentifier for the Volume Snapshot to filter on."
          },
          "state": {
            "description": "The current state of the snapshot"
          },
          "name": {
            "partial_match": true,
            "description": "The name of the Volume Snapshot to filter on."
          },
          "description": {
            "description": "The description of the Volume Snapshot to filter on."
          },
          "deployment_href": {
            "description": "Deployment href to filter on."
          },
          "parent_volume_href": {
            "description": "The href of the volume from which the Volume Snapshot was created.",
            "column": "volume_rsid"
          }
        },
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default"
            ]
          },
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "route": "GET    /api/clouds/:cloud_id/volumes/:volume_id/volume_snapshots(.:format)? {:action=>\"index\", :controller=>\"volume_snapshots\"}GET    /api/clouds/:cloud_id/volume_snapshots(.:format)? {:action=>\"index\", :controller=>\"volume_snapshots\"}",
        "description": "Lists all volume_snapshots.",
        "example_resource": {
          "actions": [

          ],
          "state": "available",
          "size": null,
          "resource_uid": "RESOURCE_3728221458",
          "created_at": null,
          "links": [
            {"rel":"self","href":"/api/clouds/888/volume_snapshots/RESOURCE_3728221458;1301333982"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"parent_volume","href":"/api/clouds/888/volumes/RESOURCE_3296092522;3736693868"},
            {"rel":"recurring_volume_attachments","href":"/api/clouds/888/volume_snapshots/RESOURCE_3728221458;1301333982/recurring_volume_attachments"}
          ],
          "description": "DESCRIPTION_438669144",
          "name": "NAME_2076595038",
          "updated_at": "2015/01/13 00:02:48 +0000"
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer||instance"
        ],
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default"
            ]
          }
        },
        "route": "GET    /api/clouds/:cloud_id/volumes/:volume_id/volume_snapshots/:id(.:format)? {:action=>\"show\", :controller=>\"volume_snapshots\"}GET    /api/clouds/:cloud_id/volume_snapshots/:id(.:format)? {:action=>\"show\", :controller=>\"volume_snapshots\"}",
        "description": "Displays information about a single volume_snapshot.",
        "example_resource": {
          "actions": [

          ],
          "state": "available",
          "size": null,
          "resource_uid": "RESOURCE_3728221458",
          "created_at": null,
          "links": [
            {"rel":"self","href":"/api/clouds/888/volume_snapshots/RESOURCE_3728221458;1301333982"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"parent_volume","href":"/api/clouds/888/volumes/RESOURCE_3296092522;3736693868"},
            {"rel":"recurring_volume_attachments","href":"/api/clouds/888/volume_snapshots/RESOURCE_3728221458;1301333982/recurring_volume_attachments"}
          ],
          "description": "DESCRIPTION_438669144",
          "name": "NAME_2076595038",
          "updated_at": "2015/01/13 00:02:48 +0000"
        }
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself",
        "deployment": "Containing Deployment",
        "cloud": "Associated cloud",
        "parent_volume": "The volume from which the snapshot was created.",
        "recurring_volume_attachments": "Associated recurring volume attachments"
      },
      "attributes": {
        "actions": "",
        "state": "",
        "created_at": "",
        "size": "",
        "resource_uid": "",
        "links": "",
        "progress": "",
        "description": "",
        "name": "",
        "updated_at": ""
      },
      "description": "A VolumeSnapshot represents a Cloud storage volume at a particular point in time. One can create a snapshot regardless of whether or not a volume is attached to an Instance. When a snapshot is created,\n  various meta data is retained such as a Created At timestamp, a unique Resource UID (e.g. vol-52EF05A9), the Volume Owner and Visibility (e.g. private or public).\n  Snapshots consist of a series of data blocks that are incrementally saved.",
      "content_types": [
        "application/vnd.rightscale.volume_snapshot"
      ]
    },
    "description": "A VolumeSnapshot represents a Cloud storage volume at a particular point in time. One can create a snapshot regardless of whether or not a volume is attached to an Instance. When a snapshot is created,\nvarious meta data is retained such as a Created At timestamp, a unique Resource UID (e.g. vol-52EF05A9), the Volume Owner and Visibility (e.g. private or public).\nSnapshots consist of a series of data blocks that are incrementally saved."
  },
  "SecurityGroups": {
    "methods": {
      "create": {
        "status_code": "201 Created",
        "access_rules": [
          "security_manager"
        ],
        "parameters": {
          "security_group": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "security_group[network_href]": {
            "class": "String",
            "non_blank": true
          },
          "security_group[description]": {
            "class": "String",
            "non_blank": true
          },
          "security_group[name]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true
          }
        },
        "route": "POST   /api/clouds/:cloud_id/security_groups(.:format)? {:action=>\"create\", :controller=>\"security_groups\"}",
        "description": "Create a security group."
      },
      "destroy": {
        "status_code": "204 No Content",
        "access_rules": [
          "security_manager"
        ],
        "parameters": {
        },
        "route": "DELETE /api/clouds/:cloud_id/security_groups/:id(.:format)? {:action=>\"destroy\", :controller=>\"security_groups\"}",
        "description": "Delete security group(s)"
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "filters": {
          "resource_uid": {
            "description": "Resource Unique IDentifier for the Security Group to filter on."
          },
          "network_href": {
            "description": "Network to filter on.",
            "column": "security_groups.network_rsid"
          },
          "name": {
            "partial_match": true,
            "description": "Name of the Security Group to filter on."
          }
        },
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default",
              "tiny"
            ]
          },
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "route": "GET    /api/clouds/:cloud_id/security_groups(.:format)? {:action=>\"index\", :controller=>\"security_groups\"}",
        "description": "Lists Security Groups.",
        "example_resource": {
          "actions": [

          ],
          "resource_uid": "RESOURCE_369474966",
          "links": [
            {"rel":"self","href":"/api/clouds/888/security_groups/ABC3991823359DEF"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"security_group_rules","href":"/api/clouds/888/security_groups/ABC3991823359DEF/security_group_rules"}
          ],
          "description": null,
          "name": "NAME_441469793"
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default",
              "tiny"
            ]
          }
        },
        "route": "GET    /api/clouds/:cloud_id/security_groups/:id(.:format)? {:action=>\"show\", :controller=>\"security_groups\"}",
        "description": "Displays information about a single Security Group.",
        "example_resource": {
          "actions": [

          ],
          "resource_uid": "RESOURCE_369474966",
          "links": [
            {"rel":"self","href":"/api/clouds/888/security_groups/ABC3991823359DEF"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"security_group_rules","href":"/api/clouds/888/security_groups/ABC3991823359DEF/security_group_rules"}
          ],
          "description": null,
          "name": "NAME_441469793"
        }
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself",
        "security_group_rules": "Associated security_group_rules",
        "network": "Associated network",
        "cloud": "Associated cloud"
      },
      "attributes": {
        "actions": "",
        "href": "",
        "resource_uid": "",
        "links": "",
        "description": "",
        "name": ""
      },
      "description": "Security Groups represent network security profiles that contain lists of firewall rules for different ports and source IP addresses, as well as\n  trust relationships amongst different security groups.",
      "content_types": [
        "application/vnd.rightscale.security_group"
      ]
    },
    "description": "Security Groups represent network security profiles that contain lists of firewall rules for different ports and source IP addresses, as well as\ntrust relationships amongst different security groups."
  },
  "Oauth2": {
    "methods": {
      "create": {
        "status_code": "200 OK",
        "access_rules": {
        },
        "parameters": {
          "refresh_token": {
            "class": "String",
            "non_blank": true,
            "description": "The refresh token obtained from OAuth grant.",
            "mandatory": false
          },
          "account_id": {
            "class": "Integer",
            "non_blank": true,
            "description": "The client's account ID (only needed for instance agent clients).",
            "mandatory": false
          },
          "right_link_version": {
            "regex": "/^\\d+\\.\\d+(\\.\\d+)*$/",
            "class": "String",
            "non_blank": true,
            "description": "The RightLink gem version the client conforms to (only needed for instance agent clients).",
            "mandatory": false
          },
          "grant_type": {
            "class": "String",
            "non_blank": true,
            "description": "Type of grant.",
            "mandatory": true,
            "valid_values": [
              "refresh_token"
            ]
          },
          "client_secret": {
            "class": "String",
            "non_blank": true,
            "description": "The client secret (only needed for confidential clients).",
            "mandatory": false
          },
          "r_s_version": {
            "class": "Integer",
            "non_blank": true,
            "description": "The RightAgent protocol version the client conforms to (only needed for instance agent clients).",
            "mandatory": false
          },
          "client_id": {
            "class": "String",
            "non_blank": true,
            "description": "The client ID (only needed for confidential clients).",
            "mandatory": false
          }
        },
        "route": "POST   /api/oauth2/                             {:action=>\"create\", :controller=>\"oauth2\"}",
        "description": "Perform an OAuth 2.0 token_refresh operation to obtain an access token that\ncan be used in lieu of an API session cookie. (In other words, creates a\nsession using OAuth 2.0).\n\nNote that an API-Version header is required with your request, and that the server\nmay respond with a 301 Moved Permanently if you include an account_id parameter and\nyour account is hosted in another RightScale cluster.\n\nThe request parameters and response format are all as per the OAuth 2.0\nInternet Draft standard v23. In brief:\n\n\nSuccessful responses include an access token, an expires-in timestamp, and a token type\nThe token type is always \"bearer\"\nTo use a bearer token, include header \"Authorization: Bearer \" with your API requests\nThe client must refresh the access token before it expires\n\n\n\n# Example Request using Curl (with prettified response):\ncurl -i -H X-API-Version:1.5 -x POST https://my.rightscale.com/api/oauth2 -d \"grant_type=refresh_token\" -d \"refresh_token=abcd1234deadbeef\"\n\n{\n  \"access_token\": \"xyzzy\",\n  \"expires_in\":   3600,\n  \"token_type\":   \"bearer\"\n}\n"
      }
    },
    "media_type": null,
    "description": "\nNote that all API calls irrespective of the resource it is acting on, should pass a header\n\"X-Api-Version\" with the value \"1.5\".\n\n\nThis is an OAuth 2.0 token endpoint that can be used to perform token-refresh operations and obtain\na bearer access token, which can be used in lieu of a session cookie when interacting with API\nresources.\n\nThis is not an API resource; in order to maintain compatibility with OAuth 2.0, it does not conform\nto the conventions established by other RightScale API resources. However, an API-version header is\nstill required when interacting with the OAuth endpoint.\n\nOAuth 2.0 endpoints always use the POST verb, accept a www-urlencoded request body (similarly to a\nbrowser form submission) and the OAuth action is indicated by the \"grant_type\" parameter. This\nendpoint supports the following OAuth 2.0 operations:\n\n\nrefresh_token - for end-user login using a previously-negotiated OAuth grant\nclient_credentials - for instance login using API credentials transmitted via user-data\n\n\nRightScale's OAuth implementation has two proprietary aspects that you should be aware of:\n\n\nclients MUST transmit an X-Api-Version header with every OAuth request\nclients MAY transmit an account_id parameter as part of their POST form data\n\n\nIf you choose to post an account_id, then the API may respond with a 301 redirect if your account\nis hosted in another RightScale cluster. If you omit this parameter and your account is hosted\nelsewhere, then you will simply receive a 400 Bad Request (because your grant is not known to\nthis cluster).\n\nFor more information on how to use OAuth 2.0 with RightScale, refer to the following:\nhttp://support.rightscale.com/12-Guides/03-RightScale_API/OAuth\nhttp://tools.ietf.org/html/draft-ietf-oauth-v2-23"
  },
  "AuditEntries": {
    "methods": {
      "create": {
        "status_code": "201 Created",
        "access_rules": [
          "actor||instance"
        ],
        "parameters": {
          "notify": {
            "regex": "/^(None|Notification|Security|Error)$/",
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "The event notification category. Defaults to 'None'."
          },
          "user_email": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "The email of the user (who created/triggered the audit entry). Only usable with instance role."
          },
          "audit_entry[detail]": {
            "class": "String",
            "non_blank": false,
            "mandatory": false,
            "description": "The initial details of the audit entry to be created."
          },
          "audit_entry": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "audit_entry[summary]": {
            "regex": "/^(.{1,255})$/",
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The summary of the audit entry to be created, maximum length is 255 characters."
          },
          "audit_entry[auditee_href]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The href of the resource that this audit entry should be associated with (e.g. an instance's href)."
          }
        },
        "route": "POST   /api/audit_entries(.:format)?            {:action=>\"create\", :controller=>\"audit_entries\"}",
        "description": "Creates a new AuditEntry with the given parameters."
      },
      "append": {
        "status_code": "204 No Content",
        "access_rules": [
          "actor||instance"
        ],
        "parameters": {
          "notify": {
            "regex": "/^(None|Notification|Security|Error)$/",
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "The event notification category. Defaults to 'None'."
          },
          "summary": {
            "regex": "/^(.{1,255})$/",
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "The updated summary for the audit entry, maximum length is 255 characters."
          },
          "detail": {
            "class": "String",
            "non_blank": false,
            "mandatory": false,
            "description": "The details to be appended to the audit entry record."
          },
          "offset": {
            "class": "Integer",
            "non_blank": true,
            "mandatory": false,
            "description": "The offset where the new details should be appended to in the audit entry's existing details section. Also used in ordering of summary updates. Defaults to end."
          }
        },
        "route": "POST   /api/audit_entries/:id/append(.:format)? {:action=>\"append\", :controller=>\"audit_entries\"}",
        "description": "Updates the summary and appends more details to a given AuditEntry. Each audit entry detail is stored\nas one chunk, the offset determines the location of that chunk within the overall audit entry details section.\nFor example, if you create an AuditEntry and append \"DEF\" at offset 10, and later append\n\"ABC\" at offset 9, the overall audit entry details will be \"ABCDEF\". Use the \\n character to\nseparate details by new lines."
      },
      "detail": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
        },
        "route": "GET    /api/audit_entries/:id/detail(.:format)? {:action=>\"detail\", :controller=>\"audit_entries\"}",
        "description": "shows the details of a given AuditEntry.\nNote that the media type of the response is simply text."
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "filters": {
          "user_email": {
            "description": "The email of the user (who created/triggered the audit entry) to filter on."
          },
          "auditee_href": {
            "description": "The href of the auditee resource to filter on."
          }
        },
        "parameters": {
          "limit": {
            "regex": "/\\d+/",
            "description": "Limit the audit entries to this number. The limit should >= 1 and <= 1000",
            "mandatory": true
          },
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default"
            ]
          },
          "filter": {
            "class": "Array",
            "non_blank": true,
            "mandatory": false
          },
          "start_date": {
            "regex": "/^(\\d{4})\\/(\\d{2})\\/(\\d{2}) (\\d{2}):(\\d{2}):(\\d{2}) ([+-]\\d{4})$/",
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The start date for retrieving audit entries, the format must be YYYY/MM/DD HH:MM:SS [+/-]ZZZZ e.g., 2011/06/25 00:00:00 +0000"
          },
          "end_date": {
            "regex": "/^(\\d{4})\\/(\\d{2})\\/(\\d{2}) (\\d{2}):(\\d{2}):(\\d{2}) ([+-]\\d{4})$/",
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The end date for retrieving audit entries (the format must be the same as start date). The time period between start and end date must be less than 3 months (93 days)."
          }
        },
        "route": "GET    /api/audit_entries(.:format)?            {:action=>\"index\", :controller=>\"audit_entries\"}",
        "description": "Lists AuditEntries of the account. Due to the potentially large number of audit entries, a start and end date must\nbe provided during an index call to limit the search. The format of the dates must be YYYY/MM/DD HH:MM:SS [+/-]ZZZZ e.g.\n2011/07/11 00:00:00 +0000.\nA maximum of 1000 records will be returned by each index call.\n\nUsing the available filters, one can select or group which audit entries to retrieve.",
        "example_resource": {
          "actions": [
            {
              "rel": "append"
            }
          ],
          "detail_size": 17,
          "user_email": "owner_user@rightscale.com",
          "summary": "test summary",
          "links": [
            {"rel":"self","href":"/api/audit_entries/5"},
            {"rel":"auditee","href":"/api/clouds/888/instances/RESOURCE_1013526198;RAND"},
            {"rel":"detail","href":"/api/audit_entries/5/detail"}
          ],
          "updated_at": "2015/01/13 00:03:05 +0000"
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default"
            ]
          }
        },
        "route": "GET    /api/audit_entries/:id(.:format)?        {:action=>\"show\", :controller=>\"audit_entries\"}",
        "description": "Lists the attributes of a given audit entry.",
        "example_resource": {
          "actions": [
            {
              "rel": "append"
            }
          ],
          "detail_size": 17,
          "user_email": "owner_user@rightscale.com",
          "summary": "test summary",
          "links": [
            {"rel":"self","href":"/api/audit_entries/5"},
            {"rel":"auditee","href":"/api/clouds/888/instances/RESOURCE_1013526198;RAND"},
            {"rel":"detail","href":"/api/audit_entries/5/detail"}
          ],
          "updated_at": "2015/01/13 00:03:05 +0000"
        }
      },
      "update": {
        "status_code": "204 No Content",
        "access_rules": [
          "actor||instance"
        ],
        "parameters": {
          "notify": {
            "regex": "/^(None|Notification|Security|Error)$/",
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "The event notification category. Defaults to 'None'."
          },
          "audit_entry[offset]": {
            "class": "Integer",
            "non_blank": true,
            "mandatory": false,
            "description": "The offset where the next details will be appended. Used in ordering of summary updates."
          },
          "audit_entry": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "audit_entry[summary]": {
            "regex": "/^(.{1,255})$/",
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The updated summary for the audit entry, maximum length is 255 characters."
          }
        },
        "route": "PUT    /api/audit_entries/:id(.:format)?        {:action=>\"update\", :controller=>\"audit_entries\"}",
        "description": "Updates the summary of a given AuditEntry."
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself",
        "auditee": "Href of the resource that this Audit Entry relates to.",
        "detail": "Href where the Audit Entry detail is available from."
      },
      "attributes": {
        "actions": "",
        "detail_size": "",
        "user_email": "",
        "summary": "",
        "links": "",
        "updated_at": ""
      },
      "description": "An Audit Entry can be used to track various activities of a resource.",
      "content_types": [
        "application/vnd.rightscale.audit_entry"
      ]
    },
    "description": "An Audit Entry can be used to track various activities of a resource."
  },
  "Volumes": {
    "methods": {
      "create": {
        "status_code": "201 Created",
        "access_rules": [
          "actor||instance"
        ],
        "parameters": {
          "volume[size]": {
            "regex": "/^\\d+$/",
            "class": "String",
            "non_blank": true,
            "description": "The size of a Volume to be created in gigabytes (GB). Some Volume Types have predefined sizes and do not allow selecting a custom size on Volume creation."
          },
          "volume[description]": {
            "class": "String",
            "non_blank": true,
            "description": "The description of the Volume to be created."
          },
          "volume[iops]": {
            "regex": "/^\\d+$/",
            "class": "String",
            "non_blank": true,
            "description": "The number of IOPS (I/O Operations Per Second) this Volume should support. Only available on clouds supporting performance provisioning.",
            "mandatory": false
          },
          "volume[volume_type_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the volume type. A Name, Resource UID and optional Size is associated with a Volume Type."
          },
          "volume": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "volume[datacenter_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the Datacenter / Zone that the Volume will be in. This parameter is required for non-OpenStack clouds."
          },
          "volume[placement_group_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the Placement Group."
          },
          "volume[encrypted]": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "A flag indicating whether Volume should be encrypted. Only available on clouds supporting volume encryption.",
            "valid_values": [
              "true",
              "false"
            ]
          },
          "volume[deployment_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the Deployment that owns this Volume."
          },
          "volume[name]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The name for the Volume to be created."
          },
          "volume[parent_volume_snapshot_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the snapshot from which the volume will be created."
          }
        },
        "route": "POST   /api/clouds/:cloud_id/volumes(.:format)? {:action=>\"create\", :controller=>\"volumes\"}",
        "description": "Creates a new volume."
      },
      "destroy": {
        "status_code": "204 No Content",
        "access_rules": [
          "actor||instance"
        ],
        "parameters": {
        },
        "route": "DELETE /api/clouds/:cloud_id/volumes/:id(.:format)? {:action=>\"destroy\", :controller=>\"volumes\"}",
        "description": "Deletes a given volume."
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer||instance"
        ],
        "filters": {
          "resource_uid": {
            "description": "Resource Unique IDentifier for the Volume to filter on."
          },
          "datacenter_href": {
            "description": "The href of the Datacenter / Zone the Volume is in.",
            "column": "datacenter_rsid"
          },
          "name": {
            "partial_match": true,
            "description": "The name of the Volume to filter on."
          },
          "parent_volume_snapshot_href": {
            "description": "The href of the snapshot from which the volume was created.",
            "column": "volume_snapshot_rsid"
          },
          "description": {
            "partial_match": true,
            "description": "The description of the Volume to filter on."
          },
          "deployment_href": {
            "description": "Deployment href to filter on."
          }
        },
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default",
              "extended"
            ]
          },
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "route": "GET    /api/clouds/:cloud_id/volumes(.:format)? {:action=>\"index\", :controller=>\"volumes\"}",
        "description": "Lists volumes.",
        "example_resource": {
          "actions": [

          ],
          "status": "in-use",
          "size": 1,
          "resource_uid": "RESOURCE_3296092522",
          "created_at": null,
          "links": [
            {"rel":"self","href":"/api/clouds/888/volumes/RESOURCE_3296092522;3736693868"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"datacenter","href":"/api/clouds/888/datacenters/RESOURCE_510224572;RAND"},
            {"rel":"volume_snapshots","href":"/api/clouds/888/volumes/RESOURCE_3296092522;3736693868/volume_snapshots"},
            {"rel":"current_volume_attachment","href":"/api/clouds/888/volume_attachments/RESOURCE_814889091;2504739746"},
            {"rel":"recurring_volume_attachments","href":"/api/clouds/888/volumes/RESOURCE_3296092522;3736693868/recurring_volume_attachments"}
          ],
          "description": "DESCRIPTION_2914948897",
          "name": "NAME_722035879",
          "updated_at": "2015/01/13 00:02:48 +0000"
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer||instance"
        ],
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default",
              "extended"
            ]
          }
        },
        "route": "GET    /api/clouds/:cloud_id/volumes/:id(.:format)? {:action=>\"show\", :controller=>\"volumes\"}",
        "description": "Displays information about a single volume.",
        "example_resource": {
          "actions": [

          ],
          "status": "in-use",
          "size": 1,
          "resource_uid": "RESOURCE_3296092522",
          "created_at": null,
          "links": [
            {"rel":"self","href":"/api/clouds/888/volumes/RESOURCE_3296092522;3736693868"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"datacenter","href":"/api/clouds/888/datacenters/RESOURCE_510224572;RAND"},
            {"rel":"volume_snapshots","href":"/api/clouds/888/volumes/RESOURCE_3296092522;3736693868/volume_snapshots"},
            {"rel":"current_volume_attachment","href":"/api/clouds/888/volume_attachments/RESOURCE_814889091;2504739746"},
            {"rel":"recurring_volume_attachments","href":"/api/clouds/888/volumes/RESOURCE_3296092522;3736693868/recurring_volume_attachments"}
          ],
          "description": "DESCRIPTION_2914948897",
          "name": "NAME_722035879",
          "updated_at": "2015/01/13 00:02:48 +0000"
        }
      }
    },
    "media_type": {
      "links": {
        "volume_snapshots": "Associated volume snapshots",
        "self": "Href of itself",
        "deployment": "Containing Deployment",
        "volume_type": "Associated volume type",
        "cloud": "Associated cloud",
        "current_volume_attachment": "Associated volume attachment. Describes where the volume is attached to and the attachment parameters.",
        "datacenter": "Associated datacenter/Zone",
        "parent_volume_snapshot": "The volume snapshot from which the volume was created, if any",
        "recurring_volume_attachments": "Associated recurring volume attachments"
      },
      "attributes": {
        "iops": "",
        "actions": "",
        "status": "",
        "size": "",
        "resource_uid": "",
        "created_at": "",
        "links": "",
        "description": "",
        "name": "",
        "volume_type": "",
        "updated_at": ""
      },
      "description": "A Volume provides a highly reliable, efficient and persistent storage solution that can be mounted to a cloud instance (in the same datacenter / zone).",
      "content_types": [
        "application/vnd.rightscale.volume"
      ]
    },
    "description": "A Volume provides a highly reliable, efficient and persistent storage solution that can be mounted to a cloud instance (in the same datacenter / zone)."
  },
  "UserDatas": {
    "methods": {
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer||instance"
        ],
        "parameters": {
        },
        "route": "GET    /api/user_data/                          {:action=>\"show\", :controller=>\"user_datas\"}",
        "description": null
      }
    },
    "media_type": null,
    "description": null
  },
  "ServerArrays": {
    "methods": {
      "clone": {
        "status_code": "201 Created",
        "access_rules": [
          "actor"
        ],
        "parameters": {
        },
        "route": "POST   /api/server_arrays/:id/clone(.:format)?  {:action=>\"clone\", :controller=>\"server_arrays\"}",
        "description": "Clones a given server array."
      },
      "create": {
        "status_code": "201 Created",
        "access_rules": [
          "actor"
        ],
        "parameters": {
          "server_array[array_type]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The array type for the Server Array.",
            "valid_values": [
              "alert",
              "queue"
            ]
          },
          "server_array[elasticity_params][bounds][max_count]": {
            "regex": "/^\\d+$/",
            "class": "String",
            "non_blank": true,
            "description": "The maximum number of servers that can be operational at the same time in the server array."
          },
          "server_array[elasticity_params][pacing][resize_up_by]": {
            "regex": "/^\\d+$/",
            "class": "String",
            "non_blank": true,
            "description": "The number of servers to scale up by."
          },
          "server_array[elasticity_params][schedule]": {
            "class": "Array",
            "non_blank": true
          },
          "server_array[elasticity_params][queue_specific_params][queue_size]": {
            "class": "Hash",
            "non_blank": true
          },
          "server_array[instance][security_group_hrefs]": {
            "class": "Array",
            "non_blank": true,
            "description": "The hrefs of the Security Groups."
          },
          "server_array[instance][placement_group_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the Placement Group."
          },
          "server_array[instance][associate_public_ip_address]": {
            "class": "String",
            "non_blank": true,
            "description": "Specify whether or not you want a public IP assigned when this Instance is launched. Only applies to Network-enabled Instances. If this is not specified, it will default to true.",
            "mandatory": false,
            "valid_values": [
              "true",
              "false"
            ]
          },
          "server_array[datacenter_policy][][weight]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "Instance allocation (should total 100%)."
          },
          "server_array[elasticity_params][bounds]": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "server_array[elasticity_params][schedule][][time]": {
            "regex": "/^\\d\\d:\\d\\d$/",
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "Specifies the time when an alert-based array resizes."
          },
          "server_array[instance][user_data]": {
            "class": "String",
            "non_blank": true,
            "description": "User data that RightScale automatically passes to your instance at boot time."
          },
          "server_array[elasticity_params][schedule][][day]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "Specifies the day when an alert-based array resizes.",
            "valid_values": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ]
          },
          "server_array[instance][ssh_key_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the SSH Key to be used."
          },
          "server_array[instance][kernel_image_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the Kernel Image."
          },
          "server_array[elasticity_params][schedule][][min_count]": {
            "regex": "/^\\d+$/",
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The minimum number of servers that must be operational at all times in the server array. NOTE: Any changes that are made to the min/max count in the server array schedule will overwrite the array's default min/max count settings."
          },
          "server_array[elasticity_params][alert_specific_params][voters_tag_predicate]": {
            "class": "String",
            "non_blank": true,
            "description": "The Voters Tag that RightScale will use in order to determine when to scale up/down."
          },
          "server_array[elasticity_params][alert_specific_params][decision_threshold]": {
            "regex": "/^\\d+$/",
            "class": "String",
            "non_blank": true,
            "description": "The percentage of servers that must agree in order to trigger an alert before an action is taken."
          },
          "server_array[elasticity_params][queue_specific_params][collect_audit_entries]": {
            "class": "String",
            "non_blank": true,
            "description": "The audit SQS queue that will store audit entries."
          },
          "server_array[instance][inputs]": {
            "class": "Enumerable",
            "non_blank": true
          },
          "server_array[instance][cloud_specific_attributes][automatic_instance_store_mapping]": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "A flag indicating whether instance store mapping should be enabled. Not supported in all Clouds.",
            "valid_values": [
              "true",
              "false"
            ]
          },
          "server_array[elasticity_params]": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "server_array[elasticity_params][schedule][][max_count]": {
            "regex": "/^\\d+$/",
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The maximum number of servers that must be operational at all times in the server array. NOTE: Any changes that are made to the min/max count in the server array schedule will overwrite the array's default min/max count settings."
          },
          "server_array[elasticity_params][queue_specific_params][item_age]": {
            "class": "Hash",
            "non_blank": true
          },
          "server_array[elasticity_params][queue_specific_params][item_age][algorithm]": {
            "class": "String",
            "non_blank": true,
            "description": "The algorithm that defines how an item's age will be determined, either by the average age or max (oldest) age.",
            "valid_values": [
              "max_10",
              "avg_10"
            ]
          },
          "server_array[instance][server_template_href]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The ServerTemplate that will be used to create the worker instances in the server array."
          },
          "server_array[instance][inputs][][name]": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "The Input name."
          },
          "server_array[instance][cloud_specific_attributes][root_volume_size]": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "The size for root disk. Not supported in all Clouds."
          },
          "server_array[name]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The name for the Server Array."
          },
          "server_array[description]": {
            "class": "String",
            "non_blank": true,
            "description": "The description for the Server Array."
          },
          "server_array[deployment_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the deployment for the Server Array."
          },
          "server_array[elasticity_params][bounds][min_count]": {
            "regex": "/^\\d+$/",
            "class": "String",
            "non_blank": true,
            "description": "The minimum number of servers that must be operational at all times in the server array."
          },
          "server_array[elasticity_params][queue_specific_params][item_age][regexp]": {
            "class": "String",
            "non_blank": true,
            "description": "The regexp that helps the system determine an item's \"age\" in the queue. Example: created_at: (\\d\\d\\d\\d-\\d\\d-\\d\\d \\d\\d:\\d\\d:\\d\\d UTC)"
          },
          "server_array[instance][inputs][*]": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "The format used for passing 2.0-style Inputs. The key is the name of the Input, and the value is the value to assign to the Input. For more details on 2.0-style Inputs, please see Inputs#multi_update."
          },
          "server_array[instance][inputs][][value]": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "The value of that Input. Should be of the form 'text:my_value' or 'cred:MY_CRED' etc."
          },
          "server_array[optimized]": {
            "class": "String",
            "non_blank": true,
            "description": "A flag indicating whether Instances of this ServerArray should be optimized for high-performance volumes (e.g. Volumes supporting a specified number of IOPS). Not supported in all Clouds.",
            "valid_values": [
              "true",
              "false"
            ]
          },
          "server_array[elasticity_params][pacing][resize_down_by]": {
            "regex": "/^\\d+$/",
            "class": "String",
            "non_blank": true,
            "description": "The number of servers to scale down by."
          },
          "server_array[elasticity_params][queue_specific_params][queue_size][items_per_instance]": {
            "regex": "/^\\d+$/",
            "class": "String",
            "non_blank": true,
            "description": "Defines the ratio of worker instances per items in the queue. Example: If there are 50 items in the queue and \"Items per instance\" is set to 10, the server array will resize to 5 worker instances (50/10).  Default = 10"
          },
          "server_array[datacenter_policy][][max]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "Max instances (0 for unlimited)."
          },
          "server_array[instance][cloud_specific_attributes]": {
            "class": "Hash",
            "non_blank": true,
            "description": "Cloud specific attributes that have no generic rightscale abstraction"
          },
          "server_array[instance][cloud_specific_attributes][root_volume_type_uid]": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "The type of root volume for instance. Only available on clouds supporting root volume type."
          },
          "server_array[elasticity_params][pacing]": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "server_array[instance]": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "server_array[instance][image_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the Image to be used."
          },
          "server_array[elasticity_params][queue_specific_params]": {
            "class": "Hash",
            "non_blank": true
          },
          "server_array[instance][subnet_hrefs]": {
            "class": "Array",
            "non_blank": true,
            "description": "The hrefs of the updated Subnets."
          },
          "server_array[datacenter_policy]": {
            "class": "Array",
            "non_blank": true,
            "description": "The Server Allocation policy. For a single Datacenter, use 'instance[datacenter_href]' instead."
          },
          "server_array[state]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The status of the server array. If active, the server array is enabled for scaling actions.",
            "valid_values": [
              "enabled",
              "disabled"
            ]
          },
          "server_array[elasticity_params][alert_specific_params]": {
            "class": "Hash",
            "non_blank": true
          },
          "server_array[elasticity_params][queue_specific_params][item_age][max_age]": {
            "regex": "/^\\d+$/",
            "class": "String",
            "non_blank": true,
            "description": "The threshold (in seconds) before a resize action occurs on the server array."
          },
          "server_array[instance][multi_cloud_image_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the MultiCloudImage to be used."
          },
          "server_array[instance][ramdisk_image_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the Ramdisk Image."
          },
          "server_array[instance][datacenter_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the Datacenter / Zone. For multiple Datacenters, use 'datacenter_policy' instead."
          },
          "server_array[instance][ip_forwarding_enabled]": {
            "class": "String",
            "non_blank": true,
            "description": "Allows this Instance to send and receive network traffic when the source and destination IP addresses do not match the IP address of this Instance.",
            "mandatory": false,
            "valid_values": [
              "true",
              "false"
            ]
          },
          "server_array[instance][cloud_specific_attributes][root_volume_performance]": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "The number of IOPS (I/O Operations Per Second) this root volume should support. Only available on clouds supporting performance provisioning."
          },
          "server_array[instance][cloud_specific_attributes][iam_instance_profile]": {
            "class": "String",
            "non_blank": false,
            "mandatory": false,
            "description": "The name or ARN of the IAM Instance Profile (IIP) to associate with the instance (Amazon only)"
          },
          "server_array": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "server_array[elasticity_params][pacing][resize_calm_time]": {
            "regex": "/^\\d+$/",
            "class": "String",
            "non_blank": true,
            "description": "The time (in minutes) on how long you want to wait before you repeat another action."
          },
          "server_array[instance][cloud_href]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The href of the Cloud that the array will be associated with."
          },
          "server_array[instance][instance_type_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the Instance Type."
          },
          "server_array[datacenter_policy][][datacenter_href]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The href of the Datacenter / Zone."
          }
        },
        "route": "POST   /api/server_arrays(.:format)?            {:action=>\"create\", :controller=>\"server_arrays\"}POST   /api/deployments/:deployment_id/server_arrays(.:format)? {:action=>\"create\", :controller=>\"server_arrays\"}",
        "description": "Creates a new server array, and configures its corresponding \"next\" instance with the received parameters."
      },
      "current_instances": {
        "status_code": null,
        "access_rules": {
        },
        "parameters": {
        },
        "route": "",
        "description": "List the running instances belonging to the server array. See Instances#index for details.\nThis action is slightly different from invoking the index action on the Instances resource with the filter \"parent_href == /api/server_arrays/XX\" because the\nlatter will include 'next_instance' as well."
      },
      "multi_terminate": {
        "status_code": null,
        "access_rules": {
        },
        "parameters": {
        },
        "route": "",
        "description": "Terminate all instances of this array. This function is equivalent to invoking the \"multi_terminate\" action on the instances resource ( Instances#multi_terminate with\nthe filter \"parent_href == /api/server_arrays/XX\"). To terminate a subset of the instances of the array, provide additional filters. To terminate a single instance,\ninvoke the action \"terminate\" directly on the instance (see Instances#terminate)"
      },
      "multi_run_executable": {
        "status_code": null,
        "access_rules": {
        },
        "parameters": {
        },
        "route": "",
        "description": "Run an executable on all instances of this array. This function is equivalent to invoking the \"multi_run_executable\" action on the instances resource\n(Instances#multi_run_executable with the filter \"parent_href == /api/server_arrays/XX\"). To run an executable on a subset of the instances of the array, provide additional filters. To run an executable\na single instance, invoke the action \"run_executable\" directly on the instance (see Instances#run_executable)"
      },
      "launch": {
        "status_code": null,
        "access_rules": {
        },
        "parameters": {
        },
        "route": "",
        "description": "Launches a new instance in the server array with the configuration defined in the 'next_instance'. This function is equivalent to invoking the launch action on the\nURL of this server_array's next_instance. See Instances#launch for details."
      },
      "destroy": {
        "status_code": "204 No Content",
        "access_rules": [
          "actor"
        ],
        "parameters": {
        },
        "route": "DELETE /api/server_arrays/:id(.:format)?        {:action=>\"destroy\", :controller=>\"server_arrays\"}DELETE /api/deployments/:deployment_id/server_arrays/:id(.:format)? {:action=>\"destroy\", :controller=>\"server_arrays\"}",
        "description": "Deletes a given server array."
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "filters": {
          "name": {
            "partial_match": true,
            "description": "The name of the Server Array to filter on.",
            "column": "server_arrays.nickname"
          },
          "cloud_href": {
            "description": "The href of the Cloud to filter on."
          },
          "deployment_href": {
            "description": "The href of the Deployment to filter on."
          }
        },
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default",
              "instance_detail"
            ]
          },
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "route": "GET    /api/server_arrays(.:format)?            {:action=>\"index\", :controller=>\"server_arrays\"}GET    /api/deployments/:deployment_id/server_arrays(.:format)? {:action=>\"index\", :controller=>\"server_arrays\"}",
        "description": "Lists server arrays.\n\nBy using the available filters, it is possible to retrieve server arrays that have common characteristics.\nFor example, one can list:\n\n\narrays that have names that contain \"my_server_array\"\nall arrays of a given deployment\n",
        "example_resource": {
          "actions": [
            {
              "rel": "launch"
            },
            {
              "rel": "clone"
            }
          ],
          "state": "enabled",
          "array_type": "alert",
          "links": [
            {"rel":"self","href":"/api/server_arrays/3"},
            {"rel":"deployment","href":"/api/deployments/17"},
            {"rel":"current_instances","href":"/api/server_arrays/3/current_instances"},
            {"rel":"next_instance","href":"/api/clouds/888/instances/3DBN3MUGJL7EB"},
            {"rel":"alert_specs","href":"/api/server_arrays/3/alert_specs"},
            {"rel":"alerts","href":"/api/server_arrays/3/alerts"}
          ],
          "description": "DESCRIPTION_792276049",
          "name": "NICKNAME_3809485626",
          "elasticity_params": {
            "bounds": {
              "min_count": "2",
              "max_count": "3"
            },
            "pacing": {
              "resize_up_by": "10",
              "resize_down_by": "5",
              "resize_calm_time": "6"
            },
            "schedule_entries": [
              {
                "day": "Monday",
                "min_count": 5,
                "max_count": 10,
                "time": "02:30"
              },
              {
                "day": "Friday",
                "min_count": 6,
                "max_count": 11,
                "time": "14:00"
              }
            ],
            "alert_specific_params": {
              "voters_tag_predicate": "pred2745862900",
              "decision_threshold": "50"
            }
          },
          "instances_count": 0
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default",
              "instance_detail"
            ]
          }
        },
        "route": "GET    /api/server_arrays/:id(.:format)?        {:action=>\"show\", :controller=>\"server_arrays\"}GET    /api/deployments/:deployment_id/server_arrays/:id(.:format)? {:action=>\"show\", :controller=>\"server_arrays\"}",
        "description": "Shows the information of a single server array.",
        "example_resource": {
          "actions": [
            {
              "rel": "launch"
            },
            {
              "rel": "clone"
            }
          ],
          "state": "enabled",
          "array_type": "alert",
          "links": [
            {"rel":"self","href":"/api/server_arrays/3"},
            {"rel":"deployment","href":"/api/deployments/17"},
            {"rel":"current_instances","href":"/api/server_arrays/3/current_instances"},
            {"rel":"next_instance","href":"/api/clouds/888/instances/3DBN3MUGJL7EB"},
            {"rel":"alert_specs","href":"/api/server_arrays/3/alert_specs"},
            {"rel":"alerts","href":"/api/server_arrays/3/alerts"}
          ],
          "description": "DESCRIPTION_792276049",
          "name": "NICKNAME_3809485626",
          "elasticity_params": {
            "bounds": {
              "min_count": "2",
              "max_count": "3"
            },
            "pacing": {
              "resize_up_by": "10",
              "resize_down_by": "5",
              "resize_calm_time": "6"
            },
            "schedule_entries": [
              {
                "day": "Monday",
                "min_count": 5,
                "max_count": 10,
                "time": "02:30"
              },
              {
                "day": "Friday",
                "min_count": 6,
                "max_count": 11,
                "time": "14:00"
              }
            ],
            "alert_specific_params": {
              "voters_tag_predicate": "pred2745862900",
              "decision_threshold": "50"
            }
          },
          "instances_count": 0
        }
      },
      "update": {
        "status_code": "204 No Content",
        "access_rules": [
          "actor"
        ],
        "parameters": {
          "server_array[datacenter_policy][][weight]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "Instance allocation (should total 100%)."
          },
          "server_array[elasticity_params][queue_specific_params][queue_size]": {
            "class": "Hash",
            "non_blank": true
          },
          "server_array[elasticity_params][schedule]": {
            "class": "Array",
            "non_blank": true
          },
          "server_array[elasticity_params][pacing][resize_up_by]": {
            "regex": "/^\\d+$/",
            "class": "String",
            "non_blank": true,
            "description": "The updated number of servers to scale up by."
          },
          "server_array[elasticity_params][bounds][max_count]": {
            "regex": "/^\\d+$/",
            "class": "String",
            "non_blank": true,
            "description": "The updated maximum number of servers that can be operational at the same time in the server array."
          },
          "server_array[array_type]": {
            "class": "String",
            "non_blank": true,
            "description": "The updated array type for the Server Array.",
            "valid_values": [
              "alert",
              "queue"
            ]
          },
          "server_array[elasticity_params][schedule][][time]": {
            "regex": "/^\\d\\d:\\d\\d$/",
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The updated time when an alert-based array resizes."
          },
          "server_array[elasticity_params][bounds]": {
            "class": "Hash",
            "non_blank": true
          },
          "server_array[elasticity_params][schedule][][day]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The updated day when an alert-based array resizes.",
            "valid_values": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ]
          },
          "server_array[elasticity_params][queue_specific_params][collect_audit_entries]": {
            "class": "String",
            "non_blank": true,
            "description": "The updated audit SQS queue that will store audit entries."
          },
          "server_array[elasticity_params][alert_specific_params][decision_threshold]": {
            "regex": "/^\\d+$/",
            "class": "String",
            "non_blank": true,
            "description": "The updated percentage of servers that must agree in order to trigger an alert before an action is taken."
          },
          "server_array[elasticity_params][alert_specific_params][voters_tag_predicate]": {
            "class": "String",
            "non_blank": true,
            "description": "The updated Voters Tag that RightScale will use in order to determine when to scale up/down."
          },
          "server_array[elasticity_params][schedule][][min_count]": {
            "regex": "/^\\d+$/",
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The updated minimum number of servers that must be operational at all times in the server array. NOTE: Any changes that are made to the min/max count in the server array schedule will overwrite the array's default min/max count settings."
          },
          "server_array[elasticity_params][queue_specific_params][item_age][algorithm]": {
            "class": "String",
            "non_blank": true,
            "description": "The updated algorithm that defines how an item's age will be determined, either by the average age or max (oldest) age.",
            "valid_values": [
              "max_10",
              "avg_10"
            ]
          },
          "server_array[elasticity_params][queue_specific_params][item_age]": {
            "class": "Hash",
            "non_blank": true
          },
          "server_array[elasticity_params][schedule][][max_count]": {
            "regex": "/^\\d+$/",
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The updated maximum number of servers that must be operational at all times in the server array. NOTE: Any changes that are made to the min/max count in the server array schedule will overwrite the array's default min/max count settings."
          },
          "server_array[elasticity_params]": {
            "class": "Hash",
            "non_blank": true
          },
          "server_array[elasticity_params][queue_specific_params][item_age][regexp]": {
            "class": "String",
            "non_blank": true,
            "description": "The updated regexp that helps the system determine an item's \"age\" in the queue. Example: created_at: (\\d\\d\\d\\d-\\d\\d-\\d\\d \\d\\d:\\d\\d:\\d\\d UTC)"
          },
          "server_array[elasticity_params][bounds][min_count]": {
            "regex": "/^\\d+$/",
            "class": "String",
            "non_blank": true,
            "description": "The updated minimum number of servers that must be operational at all times in the server array."
          },
          "server_array[deployment_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The updated href of the deployment for the Server Array."
          },
          "server_array[description]": {
            "class": "String",
            "non_blank": true,
            "description": "The updated description for the Server Array."
          },
          "server_array[name]": {
            "class": "String",
            "non_blank": true,
            "description": "The updated name for the Server Array."
          },
          "server_array[datacenter_policy][][max]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "Max instances (0 for unlimited)."
          },
          "server_array[elasticity_params][queue_specific_params][queue_size][items_per_instance]": {
            "regex": "/^\\d+$/",
            "class": "String",
            "non_blank": true,
            "description": "Defines the ratio of worker instances per items in the queue. Example: If there are 50 items in the queue and \"Items per instance\" is set to 10, the server array will resize to 5 worker instances (50/10).  Default = 10"
          },
          "server_array[elasticity_params][pacing][resize_down_by]": {
            "regex": "/^\\d+$/",
            "class": "String",
            "non_blank": true,
            "description": "The updated number of servers to scale down by."
          },
          "server_array[optimized]": {
            "class": "String",
            "non_blank": true,
            "description": "A flag indicating whether Instances of this ServerArray should be optimized for high-performance volumes (e.g. Volumes supporting a specified number of IOPS). Not supported in all Clouds.",
            "valid_values": [
              "true",
              "false"
            ]
          },
          "server_array[elasticity_params][pacing]": {
            "class": "Hash",
            "non_blank": true
          },
          "server_array[datacenter_policy]": {
            "class": "Array",
            "non_blank": true,
            "description": "The Server Allocation policy. For a single Datacenter, use 'instance[datacenter_href]' instead."
          },
          "server_array[elasticity_params][queue_specific_params]": {
            "class": "Hash",
            "non_blank": true
          },
          "server_array[elasticity_params][queue_specific_params][item_age][max_age]": {
            "regex": "/^\\d+$/",
            "class": "String",
            "non_blank": true,
            "description": "The updated threshold (in seconds) before a resize action occurs on the server array."
          },
          "server_array[elasticity_params][alert_specific_params]": {
            "class": "Hash",
            "non_blank": true
          },
          "server_array[state]": {
            "class": "String",
            "non_blank": true,
            "description": "The updated status of the server array. If active, the server array is enabled for scaling actions.",
            "valid_values": [
              "enabled",
              "disabled"
            ]
          },
          "server_array[datacenter_policy][][datacenter_href]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The href of the Datacenter / Zone."
          },
          "server_array[elasticity_params][pacing][resize_calm_time]": {
            "regex": "/^\\d+$/",
            "class": "String",
            "non_blank": true,
            "description": "The updated time (in minutes) on how long you want to wait before you repeat another action."
          },
          "server_array": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          }
        },
        "route": "PUT    /api/server_arrays/:id(.:format)?        {:action=>\"update\", :controller=>\"server_arrays\"}PUT    /api/deployments/:deployment_id/server_arrays/:id(.:format)? {:action=>\"update\", :controller=>\"server_arrays\"}",
        "description": "Updates attributes of a single server array."
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself",
        "current_instances": "Associated current instances",
        "deployment": "Associated deployment",
        "next_instance": "Associated next instance",
        "alerts": "Associated Alerts",
        "alert_specs": "Associated AlertSpecs"
      },
      "attributes": {
        "datacenter_policy": "",
        "actions": "",
        "next_instance": "",
        "optimized": "",
        "state": "",
        "array_type": "",
        "links": "",
        "description": "",
        "name": "",
        "elasticity_params": "",
        "instances_count": "",
        "current_instances": ""
      },
      "description": "A server array represents a logical group of instances and allows to resize(grow/shrink) that group based on certain elasticity parameters.\n\nA server array just like a server always has a next_instance association, which will define the configuration to apply when a new instance is launched.\n  But unlike a server which has a current_instance relationship, the server array has a \n  current_instances relationship that gives the information about\n  all the running instances in the array. Changes to the next_instance association prepares the configuration for the next instance that is to be launched\n  in the array and will therefore not affect any of the currently running instances.",
      "content_types": [
        "application/vnd.rightscale.server_array"
      ]
    },
    "description": "A server array represents a logical group of instances and allows to resize(grow/shrink) that group based on certain elasticity parameters.\n\nA server array just like a server always has a next_instance association, which will define the configuration to apply when a new instance is launched.\nBut unlike a server which has a current_instance relationship, the server array has a\ncurrent_instances relationship that gives the information about\nall the running instances in the array. Changes to the next_instance association prepares the configuration for the next instance that is to be launched\nin the array and will therefore not affect any of the currently running instances."
  },
  "Repositories": {
    "methods": {
      "cookbook_import": {
        "status_code": "204 No Content",
        "access_rules": [
          "designer"
        ],
        "parameters": {
          "namespace": {
            "class": "String",
            "non_blank": true,
            "description": "The namespace to import into.",
            "valid_values": [
              "primary",
              "alternate"
            ]
          },
          "follow": {
            "class": "String",
            "non_blank": true,
            "description": "A flag indicating whether imported cookbooks should be followed.",
            "valid_values": [
              "true",
              "false"
            ]
          },
          "with_dependencies": {
            "class": "String",
            "non_blank": true,
            "description": "A flag indicating whether dependencies should automatically be imported.",
            "valid_values": [
              "true",
              "false"
            ]
          },
          "repository_commit_reference": {
            "class": "String",
            "non_blank": true,
            "description": "Optional commit reference indicating last succeeded commit. Must match the Repository's fetch_status.succeeded_commit attribute or the import will not be performed."
          },
          "asset_hrefs": {
            "class": "Array",
            "non_blank": true,
            "description": "Hrefs of the assets that should be imported.",
            "mandatory": true
          }
        },
        "route": "POST   /api/repositories/:id/cookbook_import(.:format)? {:action=>\"cookbook_import\", :controller=>\"repositories\"}",
        "description": "Performs a Cookbook import, which allows you to use the specified cookbooks in your design objects."
      },
      "create": {
        "status_code": "201 Created",
        "access_rules": [
          "designer"
        ],
        "parameters": {
          "repository[credentials][username]": {
            "regex": "/(cred:.+|text:.*)/",
            "class": "String",
            "non_blank": true,
            "description": "The user name, or credential, for the repository (only valid for svn or download repositories)."
          },
          "repository[source]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The URL for the repository."
          },
          "repository[credentials]": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": false
          },
          "repository[credentials][password]": {
            "regex": "/(cred:.+|text:.*)/",
            "class": "String",
            "non_blank": true,
            "description": "The password, or credential, for the repository (only valid for svn or download repositories)."
          },
          "repository[commit_reference]": {
            "class": "String",
            "non_blank": false,
            "description": "The revision for the repository"
          },
          "repository[source_type]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The source type for the repository.",
            "valid_values": [
              "git",
              "svn",
              "download"
            ]
          },
          "repository": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "repository[auto_import]": {
            "class": "String",
            "non_blank": true,
            "description": "Whether cookbooks should automatically be imported upon repository creation.",
            "valid_values": [
              "true",
              "false"
            ]
          },
          "repository[asset_paths]": {
            "class": "Hash",
            "non_blank": true
          },
          "repository[description]": {
            "class": "String",
            "non_blank": false,
            "description": "The description for the repository."
          },
          "repository[asset_paths][cookbooks]": {
            "class": "Array",
            "non_blank": false,
            "description": "The cookbook paths for the repository"
          },
          "repository[credentials][ssh_key]": {
            "regex": "/(cred:.+|text:.*)/",
            "class": "String",
            "non_blank": true,
            "description": "The SSH key, or credential, for the repository (only valid for git repositories)."
          },
          "repository[name]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The repository name."
          }
        },
        "route": "POST   /api/repositories(.:format)?             {:action=>\"create\", :controller=>\"repositories\"}",
        "description": "Creates a Repository.\n\nThe following types of inputs are supported for the credential fields:\n\n\n\nType\nFormat\nExample(s)\n\n\nText string\ntext:&lt;value&gt;\ntext:-----BEGIN RSA PRIVATE KEY-----text:secret\n\n\nCredential value\ncred:&lt;value&gt;\ncred:my ssh keycred:svn_1_password\n\n"
      },
      "refetch": {
        "status_code": "204 No Content",
        "access_rules": [
          "designer"
        ],
        "parameters": {
          "auto_import": {
            "class": "String",
            "non_blank": true,
            "description": "Whether cookbooks should automatically be imported after repositories are fetched.",
            "valid_values": [
              "true",
              "false"
            ]
          }
        },
        "route": "POST   /api/repositories/:id/refetch(.:format)? {:action=>\"refetch\", :controller=>\"repositories\"}",
        "description": "Refetches all RepositoryAssets associated with the Repository.\nNote that a refetch simply updates RightScale's view of the contents of the repository.\nYou must perform an import to use the assets in your design objects (or use the auto import parameter)."
      },
      "cookbook_import_preview": {
        "status_code": "200 OK",
        "access_rules": [
          "designer"
        ],
        "parameters": {
          "namespace": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The namespace to import into.",
            "valid_values": [
              "primary",
              "alternate"
            ]
          },
          "asset_hrefs": {
            "class": "Array",
            "non_blank": true,
            "description": "Hrefs of the assets that should be imported.",
            "mandatory": true
          }
        },
        "route": "POST   /api/repositories/:id/cookbook_import_preview(.:format)? {:action=>\"cookbook_import_preview\", :controller=>\"repositories\"}",
        "description": "Retrieves a preview of the effects of a Cookbook import.\n\nNOTE: This action is for RightScale internal use only. The response is\nfree-form JSON with no associated mediatype.\n\nDO NOT USE, THIS ACTION IS SUBJECT TO CHANGE AT ANYTIME."
      },
      "destroy": {
        "status_code": "204 No Content",
        "access_rules": [
          "designer"
        ],
        "parameters": {
        },
        "route": "DELETE /api/repositories/:id(.:format)?         {:action=>\"destroy\", :controller=>\"repositories\"}",
        "description": "Deletes the specified Repositories."
      },
      "resolve": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
          "imported_cookbook_name": {
            "class": "Array",
            "non_blank": true,
            "description": "A list of cookbook names that were imported by the repository."
          }
        },
        "route": "POST   /api/repositories/resolve(.:format)?     {:action=>\"resolve\", :controller=>\"repositories\"}",
        "description": "Show a list of repositories that have imported cookbooks with the given names.\n\nThis operation returns a list of repositories that would later satisfy a call\nto the swap_repository\naction on a ServerTemplate."
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "filters": {
          "name": {
            "partial_match": true,
            "description": "Name of the Repositories to filter on.",
            "column": "name"
          },
          "description": {
            "partial_match": true,
            "description": "Description of the Repositories to filter on.",
            "column": "description"
          }
        },
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default",
              "extended"
            ]
          },
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "route": "GET    /api/repositories(.:format)?             {:action=>\"index\", :controller=>\"repositories\"}",
        "description": "Lists all Repositories for this Account.",
        "example_resource": {
          "asset_paths": {
            "cookbooks": null
          },
          "actions": [
            {
              "rel": "cookbook_import_preview"
            },
            {
              "rel": "cookbook_import"
            },
            {
              "rel": "refetch"
            },
            {
              "rel": "resolve"
            }
          ],
          "source_type": "git",
          "credentials": {
            "ssh_key": null
          },
          "created_at": "2015/01/13 00:03:03 +0000",
          "name": "cookbook_repo_4086185807",
          "links": [
            {"rel":"self","href":"/api/repositories/3"},
            {"rel":"repository_assets","href":"/api/repositories/3/repository_assets"}
          ],
          "source": "git://host9635.com/repo45124.git",
          "id": "3",
          "read_only": false,
          "fetch_status": {
          },
          "updated_at": "2015/01/13 00:03:03 +0000"
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default",
              "extended"
            ]
          }
        },
        "route": "GET    /api/repositories/:id(.:format)?         {:action=>\"show\", :controller=>\"repositories\"}",
        "description": "Shows a specified Repository.",
        "example_resource": {
          "asset_paths": {
            "cookbooks": null
          },
          "actions": [
            {
              "rel": "cookbook_import_preview"
            },
            {
              "rel": "cookbook_import"
            },
            {
              "rel": "refetch"
            },
            {
              "rel": "resolve"
            }
          ],
          "source_type": "git",
          "credentials": {
            "ssh_key": null
          },
          "created_at": "2015/01/13 00:03:03 +0000",
          "name": "cookbook_repo_4086185807",
          "links": [
            {"rel":"self","href":"/api/repositories/3"},
            {"rel":"repository_assets","href":"/api/repositories/3/repository_assets"}
          ],
          "source": "git://host9635.com/repo45124.git",
          "id": "3",
          "read_only": false,
          "fetch_status": {
          },
          "updated_at": "2015/01/13 00:03:03 +0000"
        }
      },
      "update": {
        "status_code": "204 No Content",
        "access_rules": [
          "designer"
        ],
        "parameters": {
          "repository[credentials][username]": {
            "regex": "/(cred:.+|text:.*)/",
            "class": "String",
            "non_blank": true,
            "description": "The updated user name, or credential, for the repository (only valid for svn or download repositories)."
          },
          "repository[source]": {
            "class": "String",
            "non_blank": true,
            "description": "The updated URL for the repository."
          },
          "repository[credentials]": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": false
          },
          "repository[credentials][password]": {
            "regex": "/(cred:.+|text:.*)/",
            "class": "String",
            "non_blank": true,
            "description": "The updated password, or credential, for the repository (only valid for svn or download repositories)."
          },
          "repository[commit_reference]": {
            "class": "String",
            "non_blank": false,
            "description": "The updated commit reference (tag, branch, revision...) for the repository"
          },
          "repository[source_type]": {
            "class": "String",
            "non_blank": true,
            "description": "The updated source type for the repository.",
            "valid_values": [
              "git",
              "svn",
              "download"
            ]
          },
          "repository": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "repository[asset_paths]": {
            "class": "Hash",
            "non_blank": true
          },
          "repository[description]": {
            "class": "String",
            "non_blank": false,
            "description": "The updated description for the repository."
          },
          "repository[asset_paths][cookbooks]": {
            "class": "Array",
            "non_blank": false,
            "description": "The updated cookbook paths for the repository"
          },
          "repository[credentials][ssh_key]": {
            "regex": "/(cred:.+|text:.*)/",
            "class": "String",
            "non_blank": true,
            "description": "The updated SSH key for the repository (only valid for git repositories)."
          },
          "repository[name]": {
            "class": "String",
            "non_blank": true,
            "description": "The updated repository name."
          }
        },
        "route": "PUT    /api/repositories/:id(.:format)?         {:action=>\"update\", :controller=>\"repositories\"}",
        "description": "Updates a specified Repository.\n\nThe following types of inputs are supported for the credential fields:\n\n\n\nType\nFormat\nExample(s)\n\n\nText string\ntext:&lt;value&gt;\ntext:-----BEGIN RSA PRIVATE KEY-----text:secret\n\n\nCredential value\ncred:&lt;value&gt;\ncred:my ssh keycred:svn_1_password\n\n"
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself",
        "repository_assets": "Assets fetched from the repository"
      },
      "attributes": {
        "asset_paths": "",
        "asset_counts": "",
        "actions": "",
        "source_type": "",
        "credentials": "",
        "created_at": "",
        "links": "",
        "commit_reference": "",
        "description": "",
        "name": "",
        "source": "",
        "id": "",
        "read_only": "",
        "fetch_status": "",
        "updated_at": ""
      },
      "description": "A Repository is a location from which you can download and import design objects such as Chef cookbooks. Using this resource you can add and modify repository information and import assets discovered in the repository.\n\nRightScale currently supports the following types of repositores: git, svn, and URLs of compressed files (tar, tgz, gzip).",
      "content_types": [
        "application/vnd.rightscale.repository"
      ]
    },
    "description": "A Repository is a location from which you can download and import design objects such as Chef cookbooks. Using this resource you can add and modify repository information and import assets discovered in the repository.\n\nRightScale currently supports the following types of repositores: git, svn, and URLs of compressed files (tar, tgz, gzip)."
  },
  "Permissions": {
    "methods": {
      "create": {
        "status_code": "201 Created",
        "access_rules": [
          "admin"
        ],
        "parameters": {
          "permission[role_title]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true
          },
          "permission[user_href]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true
          },
          "permission": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          }
        },
        "route": "POST   /api/permissions(.:format)?              {:action=>\"create\", :controller=>\"permissions\"}",
        "description": "Create a permission, thereby granting some user a particular role\nwith respect to the current account.\n\nThe 'observer' role has a special status; it must be granted before\na user is eligible for any other permission in a given account. \n\nWhen provisioning users, always create the observer permission FIRST; \ncreating any other permission before it will result in an error.\n\nFor more information about the roles available and the privileges\nthey confer, please refer to the following page of the RightScale\nsupport portal:\n  http://support.rightscale.com/15-References/Lists/ListofUser_Roles"
      },
      "destroy": {
        "status_code": "204 No Content",
        "access_rules": [
          "admin"
        ],
        "parameters": {
        },
        "route": "DELETE /api/permissions/:id(.:format)?          {:action=>\"destroy\", :controller=>\"permissions\"}",
        "description": "Destroy a permission, thereby revoking a user's role with respect\nto the current account.\n\nThe 'observer' role has a special status; it cannot be revoked if\na user has any other roles, because other roles become useless without\nbeing able to read data pertaining to the account.\n\nWhen deprovisioning user, always destroy the observer permission LAST;\ndestroying it while the user has other permissions will result in an error."
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "admin"
        ],
        "filters": {
          "user_href": {
            "description": "Href of the user"
          }
        },
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "route": "GET    /api/permissions(.:format)?              {:action=>\"index\", :controller=>\"permissions\"}",
        "description": "List all permissions for all users of the current acount.",
        "example_resource": {
          "actions": [

          ],
          "created_at": "2015/01/13 00:02:48 +0000",
          "links": [
            {"rel":"self","href":"/api/permissions/368638401"},
            {"rel":"account","href":"/api/accounts/367396534"},
            {"rel":"user","href":"/api/users/888"}
          ],
          "role_title": "actor_4092868877"
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "admin"
        ],
        "parameters": {
        },
        "route": "GET    /api/permissions/:id(.:format)?          {:action=>\"show\", :controller=>\"permissions\"}",
        "description": "Show information about a single permission.",
        "example_resource": {
          "actions": [

          ],
          "created_at": "2015/01/13 00:02:48 +0000",
          "links": [
            {"rel":"self","href":"/api/permissions/368638401"},
            {"rel":"account","href":"/api/accounts/367396534"},
            {"rel":"user","href":"/api/users/888"}
          ],
          "role_title": "actor_4092868877"
        }
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself",
        "user": "Href of the user to which this permission belongs",
        "account": "Href of the account to which this permission belongs"
      },
      "attributes": {
        "actions": "",
        "created_at": "",
        "links": "",
        "role_title": ""
      },
      "description": null,
      "content_types": [
        "application/vnd.rightscale.permission"
      ]
    },
    "description": null
  },
  "MultiCloudImages": {
    "methods": {
      "clone": {
        "status_code": "201 Created",
        "access_rules": [
          "designer"
        ],
        "parameters": {
          "multi_cloud_image[name]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The name for the cloned MultiCloudImage."
          },
          "multi_cloud_image": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true,
            "description": ""
          },
          "multi_cloud_image[description]": {
            "class": "String",
            "non_blank": true,
            "description": "The description for the cloned MultiCloudImage."
          }
        },
        "route": "POST   /api/multi_cloud_images/:id/clone(.:format)? {:action=>\"clone\", :controller=>\"multi_cloud_images\"}",
        "description": "Clones a given MultiCloudImage."
      },
      "create": {
        "status_code": "201 Created",
        "access_rules": [
          "designer"
        ],
        "parameters": {
          "multi_cloud_image[name]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The name of the MultiCloudImage to be created."
          },
          "multi_cloud_image": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "multi_cloud_image[description]": {
            "class": "String",
            "non_blank": false,
            "description": "The description of the MultiCloudImage to be created."
          }
        },
        "route": "POST   /api/server_templates/:server_template_id/multi_cloud_images(.:format)? {:action=>\"create\", :controller=>\"multi_cloud_images\"}POST   /api/multi_cloud_images(.:format)?       {:action=>\"create\", :controller=>\"multi_cloud_images\"}",
        "description": "Creates a new MultiCloudImage with the given parameters."
      },
      "commit": {
        "status_code": "201 Created",
        "access_rules": [
          "designer"
        ],
        "parameters": {
          "commit_message": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The message associated with the commit."
          }
        },
        "route": "POST   /api/multi_cloud_images/:id/commit(.:format)? {:action=>\"commit\", :controller=>\"multi_cloud_images\"}",
        "description": "Commits a given MultiCloudImage. Only HEAD revisions can be committed."
      },
      "destroy": {
        "status_code": "204 No Content",
        "access_rules": [
          "designer"
        ],
        "parameters": {
        },
        "route": "DELETE /api/server_templates/:server_template_id/multi_cloud_images/:id(.:format)? {:action=>\"destroy\", :controller=>\"multi_cloud_images\"}DELETE /api/multi_cloud_images/:id(.:format)?   {:action=>\"destroy\", :controller=>\"multi_cloud_images\"}",
        "description": "Deletes a given MultiCloudImage."
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "filters": {
          "name": {
            "partial_match": true,
            "description": "The name of the MultiCloudImage to filter on."
          },
          "revision": {
            "description": "The version of the MultiCloudImage to filter on.",
            "column": "version"
          },
          "description": {
            "partial_match": true,
            "description": "The MultiCloudImage description to filter on."
          }
        },
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "route": "GET    /api/server_templates/:server_template_id/multi_cloud_images(.:format)? {:action=>\"index\", :controller=>\"multi_cloud_images\"}GET    /api/multi_cloud_images(.:format)?       {:action=>\"index\", :controller=>\"multi_cloud_images\"}",
        "description": "Lists the MultiCloudImages available to this account. HEAD revisions have a revision of 0.",
        "example_resource": {
          "revision": 0,
          "actions": [

          ],
          "links": [
            {"rel":"self","href":"/api/multi_cloud_images/4"},
            {"rel":"settings","href":"/api/multi_cloud_images/4/settings"}
          ],
          "description": "DESCRIPTION_1784251973",
          "name": "NAME_3293238637"
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
        },
        "route": "GET    /api/server_templates/:server_template_id/multi_cloud_images/:id(.:format)? {:action=>\"show\", :controller=>\"multi_cloud_images\"}GET    /api/multi_cloud_images/:id(.:format)?   {:action=>\"show\", :controller=>\"multi_cloud_images\"}",
        "description": "Show information about a single MultiCloudImage. HEAD revisions have a revision of 0.",
        "example_resource": {
          "revision": 0,
          "actions": [

          ],
          "links": [
            {"rel":"self","href":"/api/multi_cloud_images/4"},
            {"rel":"settings","href":"/api/multi_cloud_images/4/settings"}
          ],
          "description": "DESCRIPTION_1784251973",
          "name": "NAME_3293238637"
        }
      },
      "update": {
        "status_code": "204 No Content",
        "access_rules": [
          "designer"
        ],
        "parameters": {
          "multi_cloud_image[name]": {
            "class": "String",
            "non_blank": true,
            "description": "The updated name for the MultiCloudImage."
          },
          "multi_cloud_image": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true,
            "description": ""
          },
          "multi_cloud_image[description]": {
            "class": "String",
            "non_blank": false,
            "description": "The updated description for the MultiCloudImage."
          }
        },
        "route": "PUT    /api/server_templates/:server_template_id/multi_cloud_images/:id(.:format)? {:action=>\"update\", :controller=>\"multi_cloud_images\"}PUT    /api/multi_cloud_images/:id(.:format)?   {:action=>\"update\", :controller=>\"multi_cloud_images\"}",
        "description": "Updates attributes of a given MultiCloudImage. Only HEAD revisions can be updated (revision 0).\nCurrently, the attributes you can update are only the 'direct' attributes of a server template."
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself",
        "settings": "Associated multi cloud image settings"
      },
      "attributes": {
        "revision": "",
        "actions": "",
        "links": "",
        "description": "",
        "name": ""
      },
      "description": "A MultiCloudImage is a RightScale component that functions as a pointer to machine images in specific clouds\n (e.g. AWS US-East, Rackspace). Each ServerTemplate can reference many MultiCloudImages that defines which\n image should be used when a server is launched in a particular cloud.",
      "content_types": [
        "application/vnd.rightscale.multi_cloud_image"
      ]
    },
    "description": "A MultiCloudImage is a RightScale component that functions as a pointer to machine images in specific clouds\n(e.g. AWS US-East, Rackspace). Each ServerTemplate can reference many MultiCloudImages that defines which\nimage should be used when a server is launched in a particular cloud."
  },
  "Deployments": {
    "methods": {
      "clone": {
        "status_code": "201 Created",
        "access_rules": [
          "actor"
        ],
        "parameters": {
          "deployment": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": false
          },
          "deployment[description]": {
            "class": "String",
            "non_blank": false,
            "description": "The description for the cloned deployment."
          },
          "deployment[name]": {
            "class": "String",
            "non_blank": true,
            "description": "The name for the cloned deployment."
          },
          "deployment[server_tag_scope]": {
            "class": "String",
            "non_blank": false,
            "description": "The routing scope for tags for servers in the cloned deployment.",
            "valid_values": [
              "deployment",
              "account"
            ]
          }
        },
        "route": "POST   /api/deployments/:id/clone(.:format)?    {:action=>\"clone\", :controller=>\"deployments\"}",
        "description": "Clones a given deployment."
      },
      "create": {
        "status_code": "201 Created",
        "access_rules": [
          "actor"
        ],
        "parameters": {
          "deployment": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "deployment[description]": {
            "class": "String",
            "non_blank": false,
            "description": "The description of the deployment to be created."
          },
          "deployment[name]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The name of the deployment to be created."
          },
          "deployment[server_tag_scope]": {
            "class": "String",
            "non_blank": false,
            "description": "The routing scope for tags for servers in the deployment.",
            "valid_values": [
              "deployment",
              "account"
            ]
          }
        },
        "route": "POST   /api/deployments(.:format)?              {:action=>\"create\", :controller=>\"deployments\"}",
        "description": "Creates a new deployment with the given parameters."
      },
      "lock": {
        "status_code": "204 No Content",
        "access_rules": [
          "actor"
        ],
        "parameters": {
        },
        "route": "POST   /api/deployments/:id/lock(.:format)?     {:action=>\"lock\", :controller=>\"deployments\"}",
        "description": "Locks a given deployment. Idempotent.\nLocking prevents servers from being deleted or moved from the deployment.\nOther actions such as adding servers or renaming the deployment are still allowed."
      },
      "unlock": {
        "status_code": "204 No Content",
        "access_rules": [
          "actor"
        ],
        "parameters": {
        },
        "route": "POST   /api/deployments/:id/unlock(.:format)?   {:action=>\"unlock\", :controller=>\"deployments\"}",
        "description": "Unlocks a given deployment. Idempotent."
      },
      "servers": {
        "status_code": null,
        "access_rules": {
        },
        "parameters": {
        },
        "route": "",
        "description": "Lists the servers belonging to this deployment. This call is equivalent to servers#index call, where the servers returned will\nautomatically be filtered by this deployment. See servers#index for details on other options and parameters."
      },
      "destroy": {
        "status_code": "204 No Content",
        "access_rules": [
          "actor"
        ],
        "parameters": {
        },
        "route": "DELETE /api/deployments/:id(.:format)?          {:action=>\"destroy\", :controller=>\"deployments\"}",
        "description": "Deletes a given deployment."
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "filters": {
          "server_tag_scope": {
            "partial_match": true,
            "description": "The routing scope for tags for servers in the deployment."
          },
          "name": {
            "partial_match": true,
            "description": "The name of the deployment to filter on.",
            "column": "nickname"
          },
          "description": {
            "partial_match": true,
            "description": "The deployment description field to filter on."
          }
        },
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default",
              "inputs",
              "inputs_2_0"
            ]
          },
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "route": "GET    /api/deployments(.:format)?              {:action=>\"index\", :controller=>\"deployments\"}",
        "description": "Lists deployments of the account.\n\nUsing the available filters, one can select or group which deployments to retrieve.\nThe 'inputs_2_0' view is for retrieving inputs in 2.0 serialization (for more\ndetails please see Inputs#index.)",
        "example_resource": {
          "locked": false,
          "actions": [
            {
              "rel": "clone"
            },
            {
              "rel": "lock"
            },
            {
              "rel": "unlock"
            }
          ],
          "links": [
            {"rel":"inputs","href":"/api/deployments/16/inputs"},
            {"rel":"self","href":"/api/deployments/16"},
            {"rel":"servers","href":"/api/deployments/16/servers"},
            {"rel":"server_arrays","href":"/api/deployments/16/server_arrays"},
            {"rel":"alerts","href":"/api/deployments/16/alerts"}
          ],
          "server_tag_scope": "deployment",
          "description": null,
          "name": "TEST_NICKNAME-2525412890"
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default",
              "inputs",
              "inputs_2_0"
            ]
          }
        },
        "route": "GET    /api/deployments/:id(.:format)?          {:action=>\"show\", :controller=>\"deployments\"}",
        "description": "Lists the attributes of a given deployment.\n\nThe 'inputs_2_0' view is for retrieving inputs in 2.0 serialization (for more\ndetails please see Inputs#index.)",
        "example_resource": {
          "locked": false,
          "actions": [
            {
              "rel": "clone"
            },
            {
              "rel": "lock"
            },
            {
              "rel": "unlock"
            }
          ],
          "links": [
            {"rel":"inputs","href":"/api/deployments/16/inputs"},
            {"rel":"self","href":"/api/deployments/16"},
            {"rel":"servers","href":"/api/deployments/16/servers"},
            {"rel":"server_arrays","href":"/api/deployments/16/server_arrays"},
            {"rel":"alerts","href":"/api/deployments/16/alerts"}
          ],
          "server_tag_scope": "deployment",
          "description": null,
          "name": "TEST_NICKNAME-2525412890"
        }
      },
      "update": {
        "status_code": "204 No Content",
        "access_rules": [
          "actor"
        ],
        "parameters": {
          "deployment": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "deployment[description]": {
            "class": "String",
            "non_blank": false,
            "description": "The updated description for the deployment."
          },
          "deployment[name]": {
            "class": "String",
            "non_blank": true,
            "description": "The updated name for the deployment."
          },
          "deployment[server_tag_scope]": {
            "class": "String",
            "non_blank": false,
            "description": "The routing scope for tags for servers in the deployment.",
            "valid_values": [
              "deployment",
              "account"
            ]
          }
        },
        "route": "PUT    /api/deployments/:id(.:format)?          {:action=>\"update\", :controller=>\"deployments\"}",
        "description": "Updates attributes of a given deployment."
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself",
        "inputs": "List of configuration inputs",
        "lock_user": "Href of the user who has locked this deployment",
        "servers": "Associated servers",
        "alerts": "Associated alerts",
        "server_arrays": "Associated server arrays"
      },
      "attributes": {
        "locked": "",
        "actions": "",
        "inputs": "",
        "links": "",
        "server_tag_scope": "",
        "description": "",
        "name": ""
      },
      "description": "Deployments represent logical groupings of related assets such as servers, server arrays, default configuration settings...etc.",
      "content_types": [
        "application/vnd.rightscale.deployment"
      ]
    },
    "description": "Deployments represent logical groupings of related assets such as servers, server arrays, default configuration settings...etc."
  },
  "ChildAccounts": {
    "methods": {
      "create": {
        "status_code": "201 Created",
        "access_rules": [
          "enterprise_manager"
        ],
        "parameters": {
          "child_account[name]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true
          },
          "child_account[cluster_href]": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "The href of the cluster in which to create the account. If not specified, will default to the cluster of the parent account."
          },
          "child_account": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          }
        },
        "route": "POST   /api/child_accounts(.:format)?           {:action=>\"create\", :controller=>\"child_accounts\"}",
        "description": "Create an enterprise ChildAccount for this Account. The User will by default get an 'admin' role\non the ChildAccount to enable him/her to add, delete Users and Permissions.\n\nFor more information on the valid values for 'cluster_href', refer to the following:\n\n\nhttp://support.rightscale.com/12-Guides/RightScale_API_1.5/Examples/ChildAccounts/Create\n\n"
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "enterprise_manager"
        ],
        "filters": {
          "name": {
            "partial_match": true,
            "description": "The name of the account to filter on."
          }
        },
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "route": "GET    /api/child_accounts(.:format)?           {:action=>\"index\", :controller=>\"child_accounts\"}",
        "description": "Lists the enterprise ChildAccounts available for this Account.",
        "example_resource": {
          "created_at": "2015/01/13 00:02:47 +0000",
          "links": [
            {"rel":"self","href":"/api/accounts/367396534"},
            {"rel":"owner","href":"/api/users/888"},
            {"rel":"cluster","href":"/api/clusters/9"}
          ],
          "name": "SPEC_ACCOUNT",
          "updated_at": "2015/01/13 00:02:47 +0000"
        }
      },
      "update": {
        "status_code": "204 No Content",
        "access_rules": [
          "enterprise_manager"
        ],
        "parameters": {
          "child_account[name]": {
            "class": "String",
            "non_blank": true,
            "description": "The updated name for the account."
          },
          "child_account": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          }
        },
        "route": "PUT    /api/accounts/:id(.:format)?             {:action=>\"update\", :controller=>\"child_accounts\"}PUT    /api/child_accounts/:id(.:format)?       {:action=>\"update\", :controller=>\"child_accounts\"}",
        "description": "Update an enterprise ChildAccount for this Account."
      }
    },
    "media_type": null,
    "description": null
  },
  "VolumeAttachments": {
    "methods": {
      "create": {
        "status_code": "201 Created",
        "access_rules": [
          "actor||instance"
        ],
        "parameters": {
          "volume_attachment[volume_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the volume to be attached."
          },
          "volume_attachment[instance_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the instance to which the volume will be attached to."
          },
          "volume_attachment[device]": {
            "class": "String",
            "non_blank": true,
            "description": "The device location where the volume will be mounted. Value must be of format /dev/xvd[bcefghij]. This is not reliable and will be deprecated."
          },
          "volume_attachment": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          }
        },
        "route": "POST   /api/clouds/:cloud_id/instances/:instance_id/volume_attachments(.:format)? {:action=>\"create\", :controller=>\"volume_attachments\"}POST   /api/clouds/:cloud_id/volume_attachments(.:format)? {:action=>\"create\", :controller=>\"volume_attachments\"}POST   /api/clouds/:cloud_id/volumes/:volume_id/volume_attachments(.:format)? {:action=>\"create\", :controller=>\"volume_attachments\"}POST   /api/clouds/:cloud_id/volumes/:volume_id/volume_attachment(.:format)? {:action=>\"create\", :controller=>\"volume_attachments\"}",
        "description": "Creates a new volume attachment."
      },
      "destroy": {
        "status_code": "204 No Content",
        "access_rules": [
          "actor||instance"
        ],
        "parameters": {
          "force": {
            "class": "String",
            "non_blank": true,
            "description": "Specifies whether to force the detachment of a volume.",
            "valid_values": [
              "true",
              "false"
            ]
          }
        },
        "route": "DELETE /api/clouds/:cloud_id/instances/:instance_id/volume_attachments/:id(.:format)? {:action=>\"destroy\", :controller=>\"volume_attachments\"}DELETE /api/clouds/:cloud_id/volume_attachments/:id(.:format)? {:action=>\"destroy\", :controller=>\"volume_attachments\"}DELETE /api/clouds/:cloud_id/volumes/:volume_id/volume_attachments(.:format)? {:action=>\"destroy\", :controller=>\"volume_attachments\"}DELETE /api/clouds/:cloud_id/volumes/:volume_id/volume_attachment(.:format)? {:action=>\"destroy\", :controller=>\"volume_attachments\"}",
        "description": "Deletes a given volume attachment."
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer||instance"
        ],
        "filters": {
          "resource_uid": {
            "description": "Resource Unique IDentifier for the volume to filter on.",
            "column": "volume_attachments.resource_uid"
          },
          "volume_href": {
            "description": "The href of the volume to filter on.",
            "column": "volume_attachments.volume_rsid"
          },
          "instance_href": {
            "description": "The href of the instance to filter on.",
            "column": "volume_attachments.instance_rsid"
          }
        },
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default"
            ]
          },
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "route": "GET    /api/clouds/:cloud_id/instances/:instance_id/volume_attachments(.:format)? {:action=>\"index\", :controller=>\"volume_attachments\"}GET    /api/clouds/:cloud_id/volume_attachments(.:format)? {:action=>\"index\", :controller=>\"volume_attachments\"}",
        "description": "Lists all volume attachments.",
        "example_resource": {
          "actions": [

          ],
          "state": "attached",
          "device_id": "device_id:9",
          "resource_uid": "RESOURCE_814889091",
          "created_at": "2015/01/13 00:02:48 +0000",
          "links": [
            {"rel":"self","href":"/api/clouds/888/volume_attachments/RESOURCE_814889091;2504739746"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"volume","href":"/api/clouds/888/volumes/RESOURCE_3296092522;3736693868"},
            {"rel":"instance","href":"/api/clouds/888/instances/RESOURCE_1013526198;RAND"}
          ],
          "device": "/dev/xvdj",
          "updated_at": "2015/01/13 00:02:48 +0000"
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer||instance"
        ],
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default"
            ]
          }
        },
        "route": "GET    /api/clouds/:cloud_id/instances/:instance_id/volume_attachments/:id(.:format)? {:action=>\"show\", :controller=>\"volume_attachments\"}GET    /api/clouds/:cloud_id/volume_attachments/:id(.:format)? {:action=>\"show\", :controller=>\"volume_attachments\"}GET    /api/clouds/:cloud_id/volumes/:volume_id/volume_attachments(.:format)? {:action=>\"show\", :controller=>\"volume_attachments\"}GET    /api/clouds/:cloud_id/volumes/:volume_id/volume_attachment(.:format)? {:action=>\"show\", :controller=>\"volume_attachments\"}",
        "description": "Displays information about a single volume attachment.",
        "example_resource": {
          "actions": [

          ],
          "state": "attached",
          "device_id": "device_id:9",
          "resource_uid": "RESOURCE_814889091",
          "created_at": "2015/01/13 00:02:48 +0000",
          "links": [
            {"rel":"self","href":"/api/clouds/888/volume_attachments/RESOURCE_814889091;2504739746"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"volume","href":"/api/clouds/888/volumes/RESOURCE_3296092522;3736693868"},
            {"rel":"instance","href":"/api/clouds/888/instances/RESOURCE_1013526198;RAND"}
          ],
          "device": "/dev/xvdj",
          "updated_at": "2015/01/13 00:02:48 +0000"
        }
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself",
        "instance": "Associated instance",
        "volume": "Associated volume",
        "cloud": "Associated cloud"
      },
      "attributes": {
        "actions": "",
        "state": "",
        "device_id": "",
        "created_at": "",
        "resource_uid": "",
        "links": "",
        "device": "",
        "updated_at": ""
      },
      "description": "A VolumeAttachment represents a relationship between a volume and an instance.",
      "content_types": [
        "application/vnd.rightscale.volume_attachment"
      ]
    },
    "description": "A VolumeAttachment represents a relationship between a volume and an instance."
  },
  "Users": {
    "methods": {
      "create": {
        "status_code": "201 Created",
        "access_rules": [
          "admin"
        ],
        "parameters": {
          "user[timezone_name]": {
            "class": "String",
            "non_blank": true,
            "description": "This can be in the form of country/region or timezone name. For example 'America/Los_Angeles' or 'GB' or 'UTC'. A complete list of acceptable values is available in the Settings > User Settings > Preferences page."
          },
          "user[principal_uid]": {
            "class": "String",
            "non_blank": true,
            "description": "The principal identifier (SAML NameID or OpenID identity URL) of this user. Required to create an SSO-authenticated user."
          },
          "user[phone]": {
            "regex": "/^[\\.()\\s\\d+-]+$/",
            "class": "String",
            "non_blank": true,
            "mandatory": true
          },
          "user[password]": {
            "class": "String",
            "non_blank": true,
            "description": "The password of this user. Required to create a password-authenticated user."
          },
          "user": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "user[company]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true
          },
          "user[last_name]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true
          },
          "user[first_name]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true
          },
          "user[identity_provider_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The RightScale API href of the Identity Provider through which this user will login to RightScale. Required to create an SSO-authenticated user."
          },
          "user[email]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true
          }
        },
        "route": "POST   /api/users(.:format)?                    {:action=>\"create\", :controller=>\"users\"}",
        "description": "Create a user. If a user already exists with the same email, that user will be returned.\n\nCreating a user alone will not enable the user to access this account. You have to create\n'permissions' for that user before it can be used. Performing a 'show' on a new user\nwill fail unless you immediately create an 'observer' permission on the current account.\n\nNote that information about users and their permissions must be propagated globally across all\nRightScale clusters, and this can take some time (less than 60 seconds under normal circumstances)\nso the users you create may not be able to login for a minute or two after you create them. However,\nyou may create or destroy permissions for newly-created users with no delay.\n\nTo create a user that will login using password authentication, include the 'password' parameter\nwith your request.\n\nTo create an SSO-enabled user, you must specify the identity_provider that will be vouching for\nthis user's identity, as well as the principal_uid (SAML NameID or OpenID identity URL) that\nthe identity provider will assert for this user. Identity providers should be specified by\ntheir API href; you can obtain a list of the identity providers available to your account by\ninvoking the 'index' action of the identity_providers API resource."
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "filters": {
          "first_name": {
            "partial_match": true,
            "description": "First name of the user to filter on."
          },
          "email": {
            "description": "Email of the user to filter on."
          },
          "last_name": {
            "partial_match": true,
            "description": "Last name of the user to filter on."
          }
        },
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "route": "GET    /api/users(.:format)?                    {:action=>\"index\", :controller=>\"users\"}",
        "description": "List the users available to the account the user is logged in to. Therefore, to list the users of\na child account, the user has to login to the child account first.",
        "example_resource": {
          "first_name": "Fred",
          "actions": [

          ],
          "phone": "805-867-5309",
          "timezone_name": "America/Los_Angeles",
          "last_name": "Accountholder",
          "created_at": "2009/07/13 21:50:24 +0000",
          "links": [
            {"rel":"self","href":"/api/users/888"}
          ],
          "updated_at": "2008/11/06 19:56:51 +0000",
          "company": "Account That Likes to Publish Things",
          "email": "owner_user@rightscale.com"
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
        },
        "route": "GET    /api/users/:id(.:format)?                {:action=>\"show\", :controller=>\"users\"}",
        "description": "Show information about a single user.",
        "example_resource": {
          "first_name": "Fred",
          "actions": [

          ],
          "phone": "805-867-5309",
          "timezone_name": "America/Los_Angeles",
          "last_name": "Accountholder",
          "created_at": "2009/07/13 21:50:24 +0000",
          "links": [
            {"rel":"self","href":"/api/users/888"}
          ],
          "updated_at": "2008/11/06 19:56:51 +0000",
          "company": "Account That Likes to Publish Things",
          "email": "owner_user@rightscale.com"
        }
      },
      "update": {
        "status_code": "204 No Content",
        "access_rules": [
          "observer"
        ],
        "parameters": {
          "user[timezone_name]": {
            "class": "String",
            "non_blank": true,
            "description": "This can be in the form of country/region or timezone name. For example 'America/Los_Angeles' or 'GB' or 'UTC'. A complete list of acceptable values is available in the Settings > User Settings > Preferences page."
          },
          "user[principal_uid]": {
            "class": "String",
            "non_blank": true,
            "description": "The updated principal identifier (SAML NameID or OpenID identity URL) of this user."
          },
          "user[phone]": {
            "regex": "/^[\\.()\\s\\d+-]+$/",
            "class": "String",
            "non_blank": true
          },
          "user[current_password]": {
            "class": "String",
            "non_blank": true,
            "description": "The current password for the user."
          },
          "user": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "user[new_password]": {
            "class": "String",
            "non_blank": true,
            "description": "The new password for this user."
          },
          "user[company]": {
            "class": "String",
            "non_blank": true
          },
          "user[last_name]": {
            "class": "String",
            "non_blank": true
          },
          "user[first_name]": {
            "class": "String",
            "non_blank": true
          },
          "user[current_email]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The existing email of this user."
          },
          "user[identity_provider_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The updated RightScale API href of the associated Identity Provider."
          },
          "user[new_email]": {
            "class": "String",
            "non_blank": true,
            "description": "The updated email of this user."
          }
        },
        "route": "PUT    /api/users/:id(.:format)?                {:action=>\"update\", :controller=>\"users\"}",
        "description": "Update a user's contact information, change her password, or update SSO her settings. In order\nto update a user record, one of the following criteria must be met:\n\n\nYou're logged in AS the user being modified and you provide a valid current_password.\nYou're an admin and the user is linked to your enterprise SSO provider\nYou're an admin and the user's email matches the email_domain of your enterprise SSO provider\n\n\nIn other words: you can update yourself if you know your own password; you can update\nyourself or others if they're linked to your SSO providers, and you can update any user\nif her email address is known to belong to your organization.\n\nFor information about enabling canonical email domain ownership for your enterprise, please\ntalk to your RightScale account manager or contact our support team.\n\nTo update a user's contact information, simply pass the desired values for email, first_name,\nand so forth.\n\nTo update a user's password, provide a valid current_password and specify the desired\nnew_password.\n\nTo update a user's SSO information, you may provide a just a principal_uid (to maintain the\nuser's existing identity provider) or you may provide an identity_provider_href and a\nprincipal_uid (to switch identity providers as well as specify a new user identity).\n\nIn the context of SAML. principal_uid is equivalent to the SAML NameID or Subject claim;\nRightScale cannot predict or influence the NameID value that your SAML IdP will send to us for"
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself",
        "identity_provider": "Associated identity provider"
      },
      "attributes": {
        "first_name": "",
        "actions": "",
        "phone": "",
        "principal_uid": "",
        "timezone_name": "",
        "last_name": "",
        "created_at": "",
        "links": "",
        "updated_at": "",
        "company": "",
        "email": ""
      },
      "description": "A User represents an individual RightScale user. Users must be given access to RightScale accounts in order to \n  access RightScale resources.",
      "content_types": [
        "application/vnd.rightscale.user"
      ]
    },
    "description": "A User represents an individual RightScale user. Users must be given access to RightScale accounts in order to \naccess RightScale resources."
  },
  "Tags": {
    "methods": {
      "by_resource": {
        "status_code": "200 OK",
        "access_rules": [
          "observer||instance"
        ],
        "parameters": {
          "resource_hrefs": {
            "class": "Array",
            "non_blank": true,
            "mandatory": true,
            "description": "Hrefs of the resources for which tags are to be returned."
          }
        },
        "route": "POST   /api/tags/by_resource(.:format)?         {:action=>\"by_resource\", :controller=>\"tags\"}",
        "description": "Get tags for a list of resource hrefs.\nThe hrefs can belong to various resource types and the tags for a non-existent href will be empty."
      },
      "multi_delete": {
        "status_code": "204 No Content",
        "access_rules": [
          "actor||instance"
        ],
        "parameters": {
          "tags": {
            "class": "Array",
            "non_blank": true,
            "mandatory": true,
            "description": "Tags to be deleted."
          },
          "resource_hrefs": {
            "class": "Array",
            "non_blank": true,
            "mandatory": true,
            "description": "Hrefs of the resources for which tags are to be deleted."
          }
        },
        "route": "POST   /api/tags/multi_delete(.:format)?        {:action=>\"multi_delete\", :controller=>\"tags\"}",
        "description": "Delete a list of tags on a list of hrefs. The tags must be either plain_tags or machine_tags.\nThe hrefs can belong to various resource types. If a resource for a href could not be found, an\nerror is returned and no tags are deleted for any resource.\n\nNote that no error will be raised if the resource does not have the tag(s) you are trying to delete."
      },
      "by_tag": {
        "status_code": "200 OK",
        "access_rules": [
          "observer||instance"
        ],
        "parameters": {
          "tags": {
            "class": "Array",
            "non_blank": true,
            "mandatory": true,
            "description": "The tags which must be present on the resource."
          },
          "include_tags_with_prefix": {
            "class": "String",
            "non_blank": true,
            "description": "If included, all tags matching this prefix will be returned. If not included, no tags will be returned."
          },
          "match_all": {
            "class": "String",
            "non_blank": true,
            "description": "If set to 'true', resources having all the tags specified in the 'tags' parameter are returned. Otherwise, resources having any of the tags are returned.",
            "valid_values": [
              "true",
              "false"
            ]
          },
          "with_deleted": {
            "class": "String",
            "non_blank": true,
            "description": "If set to 'true', tags for deleted resources will also be returned. Default value is 'false'.",
            "valid_values": [
              "true",
              "false"
            ]
          },
          "resource_type": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "Search among a single resource type.",
            "valid_values": [
              "servers",
              "instances",
              "volumes",
              "volume_snapshots",
              "deployments",
              "server_templates",
              "multi_cloud_images",
              "images",
              "server_arrays",
              "accounts"
            ]
          }
        },
        "route": "POST   /api/tags/by_tag(.:format)?              {:action=>\"by_tag\", :controller=>\"tags\"}",
        "description": "Search for resources having a list of tags in a specific resource_type.\n\nThe search criteria can contain plain tags (\"my_db_server\"), machine tags (\"server:db=true\"), or\nnamespace &amp; predicate wildcards (\"server:db=*\"). The result set includes links to the resources.\n\nIf match_all is \"true\", then the search is an \"AND\" operation -- only resources having all the\ntags are returned. If match_all has any other value or is missing, the search is performed\nas an \"OR\" operation.\n\nPLEASE NOTE the behavior of the include_tags_with_prefix parameter: if it is absent,\nor blank, then you will find resources that match your query but receive no information about\nthe tags that apply to those resources. (Your search will also complete much more quickly in\nthis case.)\n\nFor example, a search with tag[]=\"server:db=true\" and include_tags_with_prefix=\"backup:\"\nwill return resources that are tagged as a DB server, and also return all \"backup\" related tags\nfor every matching resource."
      },
      "multi_add": {
        "status_code": "204 No Content",
        "access_rules": [
          "actor||instance"
        ],
        "parameters": {
          "tags": {
            "class": "Array",
            "non_blank": true,
            "mandatory": true,
            "description": "Tags to be added."
          },
          "resource_hrefs": {
            "class": "Array",
            "non_blank": true,
            "mandatory": true,
            "description": "Hrefs of the resources for which the tags are to be added."
          }
        },
        "route": "POST   /api/tags/multi_add(.:format)?           {:action=>\"multi_add\", :controller=>\"tags\"}",
        "description": "Add a list of tags to a list of hrefs. The tags must be either plain_tags or machine_tags.\nThe hrefs can belong to various resource types. If a resource for a href could not be found, an\nerror is returned and no tags are added for any resource.\n\nNo error will be raised if the resource already has the tag(s) you are trying to add.\n\nNote: At this point, tags on 'next_instance' are not supported and one has to add tags to the 'server'."
      }
    },
    "media_type": null,
    "description": "A tag or machine tag is a useful way of attaching useful metadata to an object/resource.\nTags are commonly used as an extra label or identifier.\nFor example, you might want to add a tag to an EBS Snapshot or AMI so that you can find it more quickly."
  },
  "RepositoryAssets": {
    "methods": {
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "filters": {
        },
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default"
            ]
          }
        },
        "route": "GET    /api/repositories/:repository_id/repository_assets(.:format)? {:action=>\"index\", :controller=>\"repository_assets\"}",
        "description": "List a repository's current assets.\n\nRepository assests are the cookbook details that were scraped from a\ngiven repository.",
        "example_resource": {
          "actions": [

          ],
          "version": "1.2.3",
          "name": "pending_cookbook_1116780106",
          "links": [
            {"rel":"self","href":"/api/repositories/3/repository_assets/3"}
          ],
          "id": "3"
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default"
            ]
          }
        },
        "route": "GET    /api/repositories/:repository_id/repository_assets/:id(.:format)? {:action=>\"show\", :controller=>\"repository_assets\"}",
        "description": "Show information about a single asset.\n\nA repository assest are the cookbook details that were scraped from a\nrepository.",
        "example_resource": {
          "actions": [

          ],
          "version": "1.2.3",
          "name": "pending_cookbook_1116780106",
          "links": [
            {"rel":"self","href":"/api/repositories/3/repository_assets/3"}
          ],
          "id": "3"
        }
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself"
      },
      "attributes": {
        "actions": "",
        "version": "",
        "links": "",
        "description": "",
        "name": "",
        "id": ""
      },
      "description": "A RepositoryAsset represents an item discovered in a Repository. These assets represent only a view of the Repository\n  the last time it was scraped. In order to use these assets, you must import them into your account.",
      "content_types": [
        "application/vnd.rightscale.repository_asset"
      ]
    },
    "description": "A RepositoryAsset represents an item discovered in a Repository. These assets represent only a view of the Repository\nthe last time it was scraped. In order to use these assets, you must import them into your account."
  },
  "IpAddresses": {
    "methods": {
      "create": {
        "status_code": "201 Created",
        "access_rules": [
          "actor"
        ],
        "parameters": {
          "ip_address[network_href]": {
            "class": "String",
            "non_blank": true,
            "description": "(OpenStack Only) The href of the Network that the IpAddress will be associated to. This parameter is required for OpenStack with Neutron clouds."
          },
          "ip_address[name]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The name of the IpAddress to be created."
          },
          "ip_address[deployment_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the Deployment that owns this IpAddress."
          },
          "ip_address": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "ip_address[domain]": {
            "class": "String",
            "non_blank": true,
            "description": "(Amazon Only) Pass vpc to create this IP for EC2-VPC only environments. Pass ec2_classic to create this IP for EC2-Classic environments. Defaults to ec2_classic.",
            "valid_values": [
              "ec2_classic",
              "vpc"
            ]
          }
        },
        "route": "POST   /api/clouds/:cloud_id/ip_addresses(.:format)? {:action=>\"create\", :controller=>\"ip_addresses\"}",
        "description": "Creates a new IpAddress with the given parameters."
      },
      "destroy": {
        "status_code": "204 No Content",
        "access_rules": [
          "actor"
        ],
        "parameters": {
        },
        "route": "DELETE /api/clouds/:cloud_id/ip_addresses/:id(.:format)? {:action=>\"destroy\", :controller=>\"ip_addresses\"}",
        "description": "Deletes a given IpAddress."
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "filters": {
          "name": {
            "partial_match": true,
            "description": "Name of the IpAddress to filter on.",
            "column": "name"
          },
          "deployment_href": {
            "description": "Deployment href to filter on."
          }
        },
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "route": "GET    /api/clouds/:cloud_id/ip_addresses(.:format)? {:action=>\"index\", :controller=>\"ip_addresses\"}",
        "description": "Lists the IpAddresses available to this account.",
        "example_resource": {
          "address": "127.0.0.1",
          "created_at": "2015/01/13 00:02:49 +0000",
          "links": [
            {"rel":"self","href":"/api/clouds/888/ip_addresses/RESOURCE_66473176;RAND"},
            {"rel":"ip_address_bindings","href":"/api/clouds/888/ip_addresses/RESOURCE_66473176;RAND/ip_address_bindings"}
          ],
          "name": "NAME_4001024942",
          "updated_at": "2015/01/13 00:02:49 +0000"
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
        },
        "route": "GET    /api/clouds/:cloud_id/ip_addresses/:id(.:format)? {:action=>\"show\", :controller=>\"ip_addresses\"}",
        "description": "Show information about a single IpAddress.",
        "example_resource": {
          "address": "127.0.0.1",
          "created_at": "2015/01/13 00:02:49 +0000",
          "links": [
            {"rel":"self","href":"/api/clouds/888/ip_addresses/RESOURCE_66473176;RAND"},
            {"rel":"ip_address_bindings","href":"/api/clouds/888/ip_addresses/RESOURCE_66473176;RAND/ip_address_bindings"}
          ],
          "name": "NAME_4001024942",
          "updated_at": "2015/01/13 00:02:49 +0000"
        }
      },
      "update": {
        "status_code": "204 No Content",
        "access_rules": [
          "actor"
        ],
        "parameters": {
          "ip_address[name]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The updated name of the IpAddress."
          },
          "ip_address[deployment_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the Deployment that owns this IpAddress."
          },
          "ip_address": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          }
        },
        "route": "PUT    /api/clouds/:cloud_id/ip_addresses/:id(.:format)? {:action=>\"update\", :controller=>\"ip_addresses\"}",
        "description": "Updates attributes of a given IpAddress."
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself",
        "deployment": "Containing Deployment",
        "ip_address_bindings": "Associated ip address bindings",
        "network": "Associated network"
      },
      "attributes": {
        "address": "",
        "domain": "",
        "created_at": "",
        "links": "",
        "name": "",
        "updated_at": ""
      },
      "description": "An IpAddress provides an abstraction for IPv4 addresses bindable to Instance resources running in a Cloud.",
      "content_types": [
        "application/vnd.rightscale.ip_address"
      ]
    },
    "description": "An IpAddress provides an abstraction for IPv4 addresses bindable to Instance resources running in a Cloud."
  },
  "SecurityGroupRules": {
    "methods": {
      "create": {
        "status_code": "201 Created",
        "access_rules": [
          "security_manager"
        ],
        "parameters": {
          "security_group_rule[group_name]": {
            "class": "String",
            "non_blank": true,
            "description": "Name of source Security Group. Required if source_type is 'group'."
          },
          "security_group_rule[protocol_details][icmp_code]": {
            "class": "String",
            "non_blank": true,
            "description": "ICMP code. Required if protocol is 'icmp'."
          },
          "security_group_rule[protocol_details][start_port]": {
            "class": "String",
            "non_blank": true,
            "description": "Start of port range (inclusive). Required if protocol is 'tcp' or 'udp'."
          },
          "security_group_rule[source_type]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "Source type. May be a CIDR block or another Security Group.",
            "valid_values": [
              "cidr_ips",
              "group"
            ]
          },
          "security_group_rule[security_group_href]": {
            "class": "String",
            "non_blank": true,
            "description": "Security Group to add rule to."
          },
          "security_group_rule[direction]": {
            "class": "String",
            "non_blank": true,
            "description": "Direction of traffic.",
            "valid_values": [
              "ingress",
              "egress"
            ]
          },
          "security_group_rule[protocol_details][icmp_type]": {
            "class": "String",
            "non_blank": true,
            "description": "ICMP type. Required if protocol is 'icmp'."
          },
          "security_group_rule[protocol_details][end_port]": {
            "class": "String",
            "non_blank": true,
            "description": "End of port range (inclusive). Required if protocol is 'tcp' or 'udp'."
          },
          "security_group_rule[group_owner]": {
            "class": "String",
            "non_blank": true,
            "description": "Owner of source Security Group. Required if source_type is 'group'."
          },
          "security_group_rule": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "security_group_rule[protocol_details]": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": false
          },
          "security_group_rule[cidr_ips]": {
            "class": "String",
            "non_blank": true,
            "description": "An IP address range in CIDR notation. Required if source_type is 'cidr_ips'."
          },
          "security_group_rule[protocol]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "Protocol to filter on.",
            "valid_values": [
              "tcp",
              "udp",
              "icmp",
              "all"
            ]
          }
        },
        "route": "POST   /api/security_group_rules(.:format)?     {:action=>\"create\", :controller=>\"security_group_rules\"}POST   /api/clouds/:cloud_id/security_groups/:security_group_id/security_group_rules(.:format)? {:action=>\"create\", :controller=>\"security_group_rules\"}",
        "description": "Create a security group rule for a security group.\nThe following flavors are supported:\n\n\ngroup-based TCP/UDP\ngroup-based ICMP\nCIDR-based TCP/UDP\nCIDR-based ICMP\n"
      },
      "destroy": {
        "status_code": "204 No Content",
        "access_rules": [
          "security_manager"
        ],
        "parameters": {
        },
        "route": "DELETE /api/security_group_rules/:id(.:format)? {:action=>\"destroy\", :controller=>\"security_group_rules\"}DELETE /api/clouds/:cloud_id/security_groups/:security_group_id/security_group_rules/:id(.:format)? {:action=>\"destroy\", :controller=>\"security_group_rules\"}",
        "description": "Delete security group rule(s)"
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "filters": {
        },
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default"
            ]
          }
        },
        "route": "GET    /api/security_group_rules(.:format)?     {:action=>\"index\", :controller=>\"security_group_rules\"}GET    /api/clouds/:cloud_id/security_groups/:security_group_id/security_group_rules(.:format)? {:action=>\"index\", :controller=>\"security_group_rules\"}",
        "description": "Lists SecurityGroupRules.",
        "example_resource": {
          "start_port": "10",
          "actions": [

          ],
          "cidr_ips": "10.0.0.0/32",
          "source_type": "cidr",
          "end_port": "20",
          "description": "some description",
          "links": [
            {"rel":"self","href":"/api/security_group_rules/3"},
            {"rel":"security_group","href":"/api/clouds/888/security_groups/RESOURCE_633377704;RAND"}
          ],
          "protocol": "tcp",
          "direction": "egress"
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default"
            ]
          }
        },
        "route": "GET    /api/security_group_rules/:id(.:format)? {:action=>\"show\", :controller=>\"security_group_rules\"}GET    /api/clouds/:cloud_id/security_groups/:security_group_id/security_group_rules/:id(.:format)? {:action=>\"show\", :controller=>\"security_group_rules\"}",
        "description": "Displays information about a single SecurityGroupRule.",
        "example_resource": {
          "start_port": "10",
          "actions": [

          ],
          "cidr_ips": "10.0.0.0/32",
          "source_type": "cidr",
          "end_port": "20",
          "description": "some description",
          "links": [
            {"rel":"self","href":"/api/security_group_rules/3"},
            {"rel":"security_group","href":"/api/clouds/888/security_groups/RESOURCE_633377704;RAND"}
          ],
          "protocol": "tcp",
          "direction": "egress"
        }
      },
      "update": {
        "status_code": "204 No Content",
        "access_rules": [
          "security_manager"
        ],
        "parameters": {
          "security_group_rule": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "security_group_rule[description]": {
            "class": "String",
            "non_blank": true
          }
        },
        "route": "PUT    /api/security_group_rules/:id(.:format)? {:action=>\"update\", :controller=>\"security_group_rules\"}PUT    /api/clouds/:cloud_id/security_groups/:security_group_id/security_group_rules/:id(.:format)? {:action=>\"update\", :controller=>\"security_group_rules\"}",
        "description": ""
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself",
        "security_group": "Associated security group"
      },
      "attributes": {
        "actions": "",
        "start_port": "",
        "cidr_ips": "",
        "source_type": "",
        "end_port": "",
        "group_owner": "",
        "group_name": "",
        "href": "",
        "description": "",
        "links": "",
        "icmp_code": "",
        "protocol": "",
        "group_uid": "",
        "icmp_type": "",
        "direction": ""
      },
      "description": "Security Group Rules represent the ingress/egress rules that define a security group.",
      "content_types": [
        "application/vnd.rightscale.security_group_rule"
      ]
    },
    "description": null
  },
  "PublicationLineages": {
    "methods": {
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "publisher"
        ],
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default"
            ]
          }
        },
        "route": "GET    /api/publication_lineages/:id(.:format)? {:action=>\"show\", :controller=>\"publication_lineages\"}",
        "description": "Show information about a single publication lineage. Only non-HEAD revisions are possible.",
        "example_resource": {
          "actions": [

          ],
          "short_description": "SHORT_DESCRIPTION_779307315",
          "long_description": "LONG_DESCRIPTION_2998556810",
          "comments_enabled": true,
          "created_at": 1421107369,
          "links": [
            {"rel":"self","href":"/api/publication_lineages/1"}
          ],
          "comments_emailed": false,
          "name": "NAME_2231121710",
          "updated_at": 1421107369
        }
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself"
      },
      "attributes": {
        "actions": "",
        "short_description": "",
        "long_description": "",
        "comments_enabled": "",
        "created_at": "",
        "links": "",
        "comments_emailed": "",
        "name": "",
        "updated_at": ""
      },
      "description": "A Publication Lineage contains lineage information for a Publication in the MultiCloudMarketplace.\n  It is shared among all revisions of a Publication within the marketplace.\n  Publication Lineages are different than lineages that exist within an account.",
      "content_types": [
        "application/vnd.rightscale.publication_lineage"
      ]
    },
    "description": "A Publication Lineage contains lineage information for a Publication in the MultiCloudMarketplace.\nIt is shared among all revisions of a Publication within the marketplace.\nPublication Lineages are different than lineages that exist within an account."
  },
  "Images": {
    "methods": {
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "filters": {
          "resource_uid": {
            "description": "Resource Unique IDentifier for the Image to filter on."
          },
          "name": {
            "partial_match": true,
            "description": "Name of the Image to filter on."
          },
          "os_platform": {
            "partial_match": true,
            "description": "The image's operating system to filter on. Examples: Linux or Windows."
          },
          "cpu_architecture": {
            "partial_match": true,
            "description": "The CPU architecture of the Instance Type to filter on. Examples: x86 or 64-bit architecture."
          },
          "visibility": {
            "description": "The visibility of the Image in the cloud to filter on. Examples: private, public."
          },
          "description": {
            "partial_match": true,
            "description": "Description of the Image to filter on."
          },
          "image_type": {
            "partial_match": true,
            "description": "The Image Type to filter on. This will be either \"machine\", \"ramdisk\" or \"kernel\"."
          }
        },
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default"
            ]
          },
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "route": "GET    /api/clouds/:cloud_id/images(.:format)?  {:action=>\"index\", :controller=>\"images\"}",
        "description": "Lists all Images for the given Cloud.",
        "example_resource": {
          "visibility": "private",
          "actions": [

          ],
          "virtualization_type": null,
          "resource_uid": "resource_machine_3530126156",
          "links": [
            {"rel":"self","href":"/api/clouds/888/images/RS_ID_3221952765"},
            {"rel":"cloud","href":"/api/clouds/888"}
          ],
          "os_platform": null,
          "description": null,
          "name": "NAME_1471959517",
          "image_type": "machine",
          "cpu_architecture": null
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default"
            ]
          }
        },
        "route": "GET    /api/clouds/:cloud_id/images/:id(.:format)? {:action=>\"show\", :controller=>\"images\"}",
        "description": "Shows information about a single Image.",
        "example_resource": {
          "visibility": "private",
          "actions": [

          ],
          "virtualization_type": null,
          "resource_uid": "resource_machine_3530126156",
          "links": [
            {"rel":"self","href":"/api/clouds/888/images/RS_ID_3221952765"},
            {"rel":"cloud","href":"/api/clouds/888"}
          ],
          "os_platform": null,
          "description": null,
          "name": "NAME_1471959517",
          "image_type": "machine",
          "cpu_architecture": null
        }
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself",
        "cloud": "Associated cloud"
      },
      "attributes": {
        "visibility": "",
        "actions": "",
        "virtualization_type": "",
        "root_device_storage": "",
        "resource_uid": "",
        "links": "",
        "os_platform": "",
        "description": "",
        "name": "",
        "image_type": "",
        "cpu_architecture": ""
      },
      "description": "Images represent base VM image existing in a cloud. An image will define the initial Operating System and root disk contents \n  for a new Instance to have, and therefore it represents the basic starting point for creating a new one.",
      "content_types": [
        "application/vnd.rightscale.image"
      ]
    },
    "description": "Images represent base VM image existing in a cloud. An image will define the initial Operating System and root disk contents \nfor a new Instance to have, and therefore it represents the basic starting point for creating a new one."
  },
  "Clouds": {
    "methods": {
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "filters": {
          "name": {
            "partial_match": true,
            "description": "The name of the cloud to filter on."
          },
          "description": {
            "partial_match": true,
            "description": "The cloud description field to filter on."
          },
          "cloud_type": {
            "description": "The type of the cloud to filter on."
          }
        },
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default",
              "extended"
            ]
          },
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "route": "GET    /api/clouds(.:format)?                   {:action=>\"index\", :controller=>\"clouds\"}",
        "description": "Lists the clouds available to this account.",
        "example_resource": {
          "cloud_type": "eucalyptus",
          "display_name": "habuka01",
          "links": [
            {"rel":"self","href":"/api/clouds/888"},
            {"rel":"datacenters","href":"/api/clouds/888/datacenters"},
            {"rel":"instance_types","href":"/api/clouds/888/instance_types"},
            {"rel":"security_groups","href":"/api/clouds/888/security_groups"},
            {"rel":"instances","href":"/api/clouds/888/instances"},
            {"rel":"ssh_keys","href":"/api/clouds/888/ssh_keys"},
            {"rel":"images","href":"/api/clouds/888/images"},
            {"rel":"ip_addresses","href":"/api/clouds/888/ip_addresses"},
            {"rel":"ip_address_bindings","href":"/api/clouds/888/ip_address_bindings"},
            {"rel":"volume_attachments","href":"/api/clouds/888/volume_attachments"},
            {"rel":"recurring_volume_attachments","href":"/api/clouds/888/recurring_volume_attachments"},
            {"rel":"volume_snapshots","href":"/api/clouds/888/volume_snapshots"},
            {"rel":"volumes","href":"/api/clouds/888/volumes"}
          ],
          "description": "",
          "name": "habuka01"
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default",
              "extended"
            ]
          }
        },
        "route": "GET    /api/clouds/:id(.:format)?               {:action=>\"show\", :controller=>\"clouds\"}",
        "description": "Show information about a single cloud. ",
        "example_resource": {
          "cloud_type": "eucalyptus",
          "display_name": "habuka01",
          "links": [
            {"rel":"self","href":"/api/clouds/888"},
            {"rel":"datacenters","href":"/api/clouds/888/datacenters"},
            {"rel":"instance_types","href":"/api/clouds/888/instance_types"},
            {"rel":"security_groups","href":"/api/clouds/888/security_groups"},
            {"rel":"instances","href":"/api/clouds/888/instances"},
            {"rel":"ssh_keys","href":"/api/clouds/888/ssh_keys"},
            {"rel":"images","href":"/api/clouds/888/images"},
            {"rel":"ip_addresses","href":"/api/clouds/888/ip_addresses"},
            {"rel":"ip_address_bindings","href":"/api/clouds/888/ip_address_bindings"},
            {"rel":"volume_attachments","href":"/api/clouds/888/volume_attachments"},
            {"rel":"recurring_volume_attachments","href":"/api/clouds/888/recurring_volume_attachments"},
            {"rel":"volume_snapshots","href":"/api/clouds/888/volume_snapshots"},
            {"rel":"volumes","href":"/api/clouds/888/volumes"}
          ],
          "description": "",
          "name": "habuka01"
        }
      }
    },
    "media_type": {
      "links": {
        "volume_types": "Associated volume types",
        "volume_snapshots": "Associated volume snapshots",
        "images": "Associated images",
        "security_groups": "Associated security groups",
        "self": "Href of itself",
        "volumes": "Associated volumes",
        "subnets": "Associated subnets",
        "ip_address_bindings": "Associated IP Address Bindings",
        "ip_addresses": "Associated IP Addresses",
        "instances": "Associated instances",
        "instance_types": "Associated instance types",
        "volume_attachments": "Associated volume attachments",
        "datacenters": "Associated datacenters",
        "recurring_volume_attachments": "Associated recurring volume attachments",
        "ssh_keys": "Associated ssh keys"
      },
      "attributes": {
        "cloud_type": "",
        "display_name": "",
        "links": "",
        "description": "",
        "name": "",
        "capabilities": ""
      },
      "description": "Represents a Cloud (within the context of the account in the session).",
      "content_types": [
        "application/vnd.rightscale.cloud"
      ]
    },
    "description": "Represents a Cloud (within the context of the account in the session)."
  },
  "CloudAccounts": {
    "methods": {
      "create": {
        "status_code": "201 Created",
        "access_rules": [
          "admin"
        ],
        "parameters": {
          "cloud_account": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "cloud_account[creds]": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "cloud_account[token]": {
            "class": "String",
            "non_blank": true,
            "description": "The cloud token to identify a private cloud"
          },
          "cloud_account[cloud_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the cloud if it is known. For valid values see support portal link above."
          },
          "cloud_account[creds][*]": {
            "class": "String",
            "non_blank": true,
            "description": "The * denotes that the key could be anything,\n         limited to the required parameters for the respective cloud. See the description above."
          }
        },
        "route": "POST   /api/cloud_accounts(.:format)?           {:action=>\"create\", :controller=>\"cloud_accounts\"}",
        "description": "Create a CloudAccount by passing in the respective credentials for each cloud.\n\nFor more information on the specific parameters for each cloud, refer to the following:\n\n\nhttp://support.rightscale.com/12-Guides/RightScale_API_1.5/Examples/Cloud_Accounts/Create_Cloud_Accounts\n\n"
      },
      "destroy": {
        "status_code": "204 No Content",
        "access_rules": [
          "admin"
        ],
        "parameters": {
        },
        "route": "DELETE /api/cloud_accounts/:id(.:format)?       {:action=>\"destroy\", :controller=>\"cloud_accounts\"}",
        "description": "Delete a CloudAccount."
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "filters": {
        },
        "parameters": {
        },
        "route": "GET    /api/cloud_accounts(.:format)?           {:action=>\"index\", :controller=>\"cloud_accounts\"}",
        "description": "Lists the CloudAccounts (non-aws) available to this Account.",
        "example_resource": {
          "created_at": "2015/01/13 00:02:47 +0000",
          "links": [
            {"rel":"self","href":"/api/cloud_accounts/7774"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"account","href":"/api/accounts/367396534"}
          ],
          "updated_at": "2015/01/13 00:02:47 +0000"
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
        },
        "route": "GET    /api/cloud_accounts/:id(.:format)?       {:action=>\"show\", :controller=>\"cloud_accounts\"}",
        "description": "",
        "example_resource": {
          "created_at": "2015/01/13 00:02:47 +0000",
          "links": [
            {"rel":"self","href":"/api/cloud_accounts/7774"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"account","href":"/api/accounts/367396534"}
          ],
          "updated_at": "2015/01/13 00:02:47 +0000"
        }
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself",
        "cloud": "Associated cloud",
        "account": "Associated account"
      },
      "attributes": {
        "created_at": "",
        "links": "",
        "updated_at": ""
      },
      "description": "Represents a Cloud Account (An association between the account and a cloud).",
      "content_types": [
        "application/vnd.rightscale.cloud_account"
      ]
    },
    "description": "Represents a Cloud Account (An association between the account and a cloud)."
  },
  "Backups": {
    "methods": {
      "create": {
        "status_code": "201 Created",
        "access_rules": [
          "actor||instance"
        ],
        "parameters": {
          "backup[from_master]": {
            "class": "String",
            "non_blank": true,
            "description": "Setting this to 'true' will create a tag 'rs_backup:from_master=true' on the snapshots so that one can filter them later.",
            "valid_values": [
              "true",
              "false"
            ]
          },
          "backup[description]": {
            "class": "String",
            "non_blank": true,
            "description": "The description to be set on each of the volume snapshots"
          },
          "backup[name]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The name to be set on each of the volume snapshots."
          },
          "backup[lineage]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "A unique value to create backups belonging to a particular system.\n                                       This will be used to set the tag  e.g. 'rs_backup:lineage=prod_mysqldb'. "
          },
          "backup": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "backup[volume_attachment_hrefs]": {
            "class": "Array",
            "non_blank": true,
            "mandatory": true,
            "description": "List of volume attachment hrefs that are to be backed-up."
          }
        },
        "route": "POST   /api/backups(.:format)?                  {:action=>\"create\", :controller=>\"backups\"}",
        "description": "Takes in an array of volumeattachmenthrefs and takes a snapshot of each.\nThe volumeattachmenthrefs must belong to the same instance."
      },
      "restore": {
        "status_code": "202 Accepted",
        "access_rules": [
          "actor||instance"
        ],
        "parameters": {
          "backup[size]": {
            "regex": "/^\\d+$/",
            "class": "String",
            "non_blank": true,
            "description": "Each volume is created with this size in gigabytes (GB) instead of the volume snapshot's size (must be equal or larger). Some volume types have predefined sizes and do not allow selecting a custom size on volume creation."
          },
          "backup[description]": {
            "class": "String",
            "non_blank": true,
            "description": "Each volume is created with this description instead of the volume snapshot's description"
          },
          "backup[name]": {
            "class": "String",
            "non_blank": true,
            "description": "Each volume is created with this name instead of the volume snapshot's name"
          },
          "backup": {
            "class": "Hash",
            "non_blank": true
          },
          "backup[volume_type_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the volume type. Each volume is created with this volume type instead of the default volume type for the cloud. A Name, Resource UID and optional Size is associated with a volume type."
          },
          "instance_href": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The instance href that the backup will be restored to."
          },
          "backup[iops]": {
            "regex": "/^\\d+$/",
            "class": "String",
            "non_blank": true,
            "description": "The number of IOPS (I/O Operations Per Second) each volume should support. Only available on clouds supporting performance provisioning."
          }
        },
        "route": "POST   /api/backups/:id/restore(.:format)?      {:action=>\"restore\", :controller=>\"backups\"}",
        "description": "Restores the given Backup.\nThis call will:\n\n\ncreate the required number of Volumes from the volume_snapshots_hrefs in the given Backup,\nattach them to the given Instance at the device specified in the Snapshot. If the devices are already being used\n   on the Instance, the Task will denote that the restore has failed.\n"
      },
      "cleanup": {
        "status_code": "204 No Content",
        "access_rules": [
          "actor||instance"
        ],
        "parameters": {
          "monthlies": {
            "regex": "/^\\d+$/",
            "class": "String",
            "non_blank": true,
            "description": "The number of monthly backups(the latest one in each month) that should be kept."
          },
          "keep_last": {
            "regex": "/^\\d+$/",
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The number of backups that should be kept."
          },
          "weeklies": {
            "regex": "/^\\d+$/",
            "class": "String",
            "non_blank": true,
            "description": "The number of weekly backups(the latest one in each week) that should be kept."
          },
          "yearlies": {
            "regex": "/^\\d+$/",
            "class": "String",
            "non_blank": true,
            "description": "The number of yearly backups(the latest one in each year) that should be kept."
          },
          "dailies": {
            "regex": "/^\\d+$/",
            "class": "String",
            "non_blank": true,
            "description": "The number of daily backups(the latest one in each day) that should be kept."
          },
          "lineage": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The lineage of the backups that are to be cleaned-up."
          },
          "cloud_href": {
            "class": "String",
            "non_blank": true,
            "description": "Backups belonging to only this cloud are considered for cleanup. Otherwise, all backups in the account with the same lineage will be considered."
          }
        },
        "route": "POST   /api/backups/cleanup(.:format)?          {:action=>\"cleanup\", :controller=>\"backups\"}",
        "description": "Deletes old backups that meet the given criteria. For example, if a user calls cleanup with keep monthlies set to 12,\nthen the latest backup for each month, for 12 months, will be kept.\n\nAll backups belong to a particular 'lineage'. Backups are not constrained to a specific cloud or a specific deployment.\nA lineage is account-specific. Hence, backups having the same lineage but belonging to different clouds are still considered\nfor cleanup.\n\nIf backups specific to a single cloud should be cleaned up, see the cloud_href parameter.\n\n\nDefinitions:\nA snapshot is completed if its status is \"available\"\nA snapshot is committed if it has a tag \"rs_backup:committed=true\"\nA snapshot belongs to a backup \"X\" if it has a tag \"rs_backup:backup_id=X\"\nA snapshot is part of a backup with size \"Y\" if it has a tag \"rs_backup:count=Y\"\nA snapshot's position in a backup is \"Z\" if it has a tag \"rs_backup:position=Z\"\n\nBackups are of 3 types:\nPerfect backup: A backup which is completed (all the snapshots are completed) and committed (all the snapshots are committed) and the number of snapshots it found is equal to the number\nin the \"rs_backup:count=\" tag on each of the Snapshots.\nImperfect backup: A backup which is not committed or if the number of snapshots it found is not equal to the number in the \"rs_backup:count=\" tag on each of the snapshots.\nPartial Perfect backup: A snapshot which is neither perfect nor imperfect\n\nAn imperfect backup is picked up for cleanup only if there exists a perfect backup with a newer created_at timestamp.\nNo constraints will be applied on such imperfect backups and all of them will be destroyed.\n\nFor all the perfect backups, the constraints of keep_last and dailies etc. will be applied.\nThe algorithm for choosing the perfect backups to keep is simple. It is the union of those set of backups if each of those conditions are applied\nindependently. i.e backups_to_keep = backups_to_keep(keep_last) U backups_to_keep(dailies) U backups_to_keep(weeklies) U backups_to_keep(monthlies) U backups_to_keep(yearlies)\n\nHence, it is important to \"commit\" a backup to make it eligible for cleanup.\n"
      },
      "destroy": {
        "status_code": "204 No Content",
        "access_rules": [
          "actor||instance"
        ],
        "parameters": {
        },
        "route": "DELETE /api/backups/:id(.:format)?              {:action=>\"destroy\", :controller=>\"backups\"}",
        "description": "Deletes a given backup by deleting all of its snapshots, this call will succeed even if the backup has not completed."
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer||instance"
        ],
        "filters": {
          "committed": {
            "description": "Use to filter backups whose snapshots all have the tag 'rs_backup:committed=true'"
          },
          "completed": {
            "description": "Use to filter backups that are completed"
          },
          "from_master": {
            "description": "Use to filter backups whose snapshots all have the tag 'rs_backup:from_master=X'"
          },
          "latest_before": {
            "description": "Use to get the latest backup that is created before a certain date"
          },
          "cloud_href": {
            "description": "Use to filter backups belonging to a particular cloud."
          }
        },
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          },
          "lineage": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "Backups belonging to this lineage."
          }
        },
        "route": "GET    /api/backups(.:format)?                  {:action=>\"index\", :controller=>\"backups\"}",
        "description": "Lists all of the backups with the given lineage tag. Filters can be used to search for a particular backup. If the\n'latest_before' filter is set, only one backup is returned (the latest backup before the given timestamp).\n\nTo get the latest completed backup, the 'completed' filter should be set to 'true' and the 'latest_before' filter\nshould be set to the current timestamp. The format of the timestamp must be YYYY/MM/DD HH:MM:SS [+/-]ZZZZ e.g.\n2011/07/11 00:00:00 +0000.\n\nTo get the latest completed backup just before, say 25 June 2009, then the 'completed' filter\nshould be set to 'true' and the 'latest_before' filter should be set to 2009/06/25 00:00:00 +0000.",
        "example_resource": {
          "lineage": "lineage123",
          "actions": [
            {
              "rel": "restore"
            }
          ],
          "from_master": false,
          "committed": true,
          "created_at": "2015/01/13 00:02:48 +0000",
          "volume_snapshots": [
            {
              "committed": true,
              "state": "available",
              "position": "1",
              "size": null,
              "resource_uid": "RESOURCE_4251820157",
              "device": "/dev/sdk1",
              "links": [
                {
                  "rel": "self",
                  "href": "/api/clouds/888/volume_snapshots/RESOURCE_4251820157;113040141"
                }
              ]
            },
            {
              "committed": true,
              "state": "available",
              "position": "2",
              "size": null,
              "resource_uid": "RESOURCE_1617325494",
              "device": "/dev/sdk2",
              "links": [
                {
                  "rel": "self",
                  "href": "/api/clouds/888/volume_snapshots/RESOURCE_1617325494;2644527836"
                }
              ]
            }
          ],
          "links": [
            {"rel":"self","href":"/api/backups/82737598-9ab7-11e4-90a2-b8e856474d16"}
          ],
          "completed": true,
          "description": "backup description",
          "name": "test backup",
          "volume_snapshot_count": 2
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer||instance"
        ],
        "parameters": {
        },
        "route": "GET    /api/backups/:id(.:format)?              {:action=>\"show\", :controller=>\"backups\"}",
        "description": "Lists the attributes of a given backup",
        "example_resource": {
          "lineage": "lineage123",
          "actions": [
            {
              "rel": "restore"
            }
          ],
          "from_master": false,
          "committed": true,
          "created_at": "2015/01/13 00:02:48 +0000",
          "volume_snapshots": [
            {
              "committed": true,
              "state": "available",
              "position": "1",
              "size": null,
              "resource_uid": "RESOURCE_4251820157",
              "device": "/dev/sdk1",
              "links": [
                {
                  "rel": "self",
                  "href": "/api/clouds/888/volume_snapshots/RESOURCE_4251820157;113040141"
                }
              ]
            },
            {
              "committed": true,
              "state": "available",
              "position": "2",
              "size": null,
              "resource_uid": "RESOURCE_1617325494",
              "device": "/dev/sdk2",
              "links": [
                {
                  "rel": "self",
                  "href": "/api/clouds/888/volume_snapshots/RESOURCE_1617325494;2644527836"
                }
              ]
            }
          ],
          "links": [
            {"rel":"self","href":"/api/backups/82737598-9ab7-11e4-90a2-b8e856474d16"}
          ],
          "completed": true,
          "description": "backup description",
          "name": "test backup",
          "volume_snapshot_count": 2
        }
      },
      "update": {
        "status_code": "204 No Content",
        "access_rules": [
          "actor||instance"
        ],
        "parameters": {
          "backup": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "backup[committed]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "Setting this to 'true' will update the 'rs_backup:committed=false' tag to 'rs_backup:committed=true' on all the snapshots.",
            "valid_values": [
              "true",
              "false"
            ]
          }
        },
        "route": "PUT    /api/backups/:id(.:format)?              {:action=>\"update\", :controller=>\"backups\"}",
        "description": "Updates the committed tag for all of the VolumeSnapshots in the given Backup to the given value."
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself"
      },
      "attributes": {
        "lineage": "",
        "actions": "",
        "from_master": "",
        "committed": "",
        "created_at": "",
        "links": "",
        "volume_snapshots": "",
        "completed": "",
        "description": "",
        "name": "",
        "volume_snapshot_count": ""
      },
      "description": "A backup represents a set of volume snapshots.\n\nDefinitions:\n   A snapshot is completed if its status is \"available\".\n   A snapshot is committed if it has a tag \"rs_backup:committed=true\".\n   A snapshot belongs to a backup \"X\" if it has a tag \"rs_backup:backup_id=X\".\n   A snapshot is part of a backup with size \"Y\" if it has a tag \"rs_backup:count=Y\".\n   A snapshot's position in a backup is \"Z\" if it has a tag \"rs_backup:position=Z\".\n\nBackups are of 3 types:\n   Perfect backup:         A backup which is completed(all the snapshots are completed) and committed(all the snapshots are committed) and the number of snapshots it found is equal to the number\n                           in the \"rs_backup:count=\" tag on each of the snapshots.\n\nImperfect backup:       A backup which is not committed or if the number of snapshots it found is not equal to the number in the \"rs_backup:count=\" tag on each of the snapshots.\n\nPartial Perfect backup: A snapshot which is neither perfect nor imperfect.\n\nAn imperfect backup is picked up for cleanup only if there exists a perfect backup with a newer created_at timestamp.\n   No constraints will be applied on such imperfect backups and all of them will be destroyed.\n\nFor all the perfect backups, the constraints of keep_last and dailies etc. will be applied.\n   The algorithm for choosing the perfect backups to keep is simple. It is the union of those set of backups if each of those conditions are applied\n   independently. i.e backups_to_keep = backups_to_keep(keep_last) U backups_to_keep(dailies) U backups_to_keep(weeklies) U backups_to_keep(monthlies) U backups_to_keep(yearlies) \n\nHence, it is important to \"commit\" a backup to make it eligible for cleanup.",
      "content_types": [
        "application/vnd.rightscale.backup"
      ]
    },
    "description": null
  },
  "AlertSpecs": {
    "methods": {
      "create": {
        "status_code": "201 Created",
        "access_rules": [
          "designer||instance"
        ],
        "parameters": {
          "alert_spec[vote_type]": {
            "class": "String",
            "non_blank": true,
            "description": "Vote to grow or shrink a ServerArray when the alert is triggered. Must either escalate or vote.",
            "valid_values": [
              "grow",
              "shrink"
            ]
          },
          "alert_spec[escalation_name]": {
            "class": "String",
            "non_blank": true,
            "description": "Escalate to the named alert escalation when the alert is triggered. Must either escalate or vote."
          },
          "alert_spec[subject_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the resource that this AlertSpec should be associated with. The subject can be a ServerTemplate, Server, ServerArray, or Instance."
          },
          "alert_spec[description]": {
            "class": "String",
            "non_blank": true,
            "description": "The description of the AlertSpec."
          },
          "alert_spec[file]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The RRD path/file_name of the condition sentence."
          },
          "alert_spec[name]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The name of the AlertSpec."
          },
          "alert_spec": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "alert_spec[vote_tag]": {
            "class": "String",
            "non_blank": true,
            "description": "Should correspond to a vote tag on a ServerArray if vote to grow or shrink."
          },
          "alert_spec[condition]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The condition (operator) in the condition sentence.",
            "valid_values": [
              ">",
              ">=",
              "<",
              "<=",
              "==",
              "!="
            ]
          },
          "alert_spec[duration]": {
            "regex": "/^\\d+$/",
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The duration in minutes of the condition sentence."
          },
          "alert_spec[threshold]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The threshold of the condition sentence."
          },
          "alert_spec[variable]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The RRD variable of the condition sentence."
          }
        },
        "route": "POST   /api/servers/:server_id/alert_specs(.:format)? {:action=>\"create\", :controller=>\"alert_specs\"}POST   /api/server_arrays/:server_array_id/alert_specs(.:format)? {:action=>\"create\", :controller=>\"alert_specs\"}POST   /api/server_templates/:server_template_id/alert_specs(.:format)? {:action=>\"create\", :controller=>\"alert_specs\"}POST   /api/alert_specs(.:format)?              {:action=>\"create\", :controller=>\"alert_specs\"}",
        "description": "Creates a new AlertSpec with the given parameters."
      },
      "destroy": {
        "status_code": "204 No Content",
        "access_rules": [
          "designer||instance"
        ],
        "parameters": {
        },
        "route": "DELETE /api/servers/:server_id/alert_specs/:id(.:format)? {:action=>\"destroy\", :controller=>\"alert_specs\"}DELETE /api/server_arrays/:server_array_id/alert_specs/:id(.:format)? {:action=>\"destroy\", :controller=>\"alert_specs\"}DELETE /api/server_templates/:server_template_id/alert_specs/:id(.:format)? {:action=>\"destroy\", :controller=>\"alert_specs\"}DELETE /api/alert_specs/:id(.:format)?          {:action=>\"destroy\", :controller=>\"alert_specs\"}",
        "description": "Deletes a given AlertSpec."
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer||instance"
        ],
        "filters": {
          "subject_href": {
            "description": "The href of the subject to filter on. The subject can be a ServerTemplate, Server, ServerArray, or Instance."
          },
          "name": {
            "partial_match": true,
            "description": "The name of the alert spec to filter on."
          },
          "escalation_name": {
            "description": "The name of the alert escalation to filter on."
          },
          "description": {
            "partial_match": true,
            "description": "The alert spec description to filter on."
          }
        },
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default"
            ]
          },
          "with_inherited": {
            "class": "String",
            "non_blank": true,
            "description": "Flag indicating whether or not to include AlertSpecs from the ServerTemplate in the index.",
            "valid_values": [
              "true",
              "false"
            ]
          },
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "route": "GET    /api/servers/:server_id/alert_specs(.:format)? {:action=>\"index\", :controller=>\"alert_specs\"}GET    /api/server_arrays/:server_array_id/alert_specs(.:format)? {:action=>\"index\", :controller=>\"alert_specs\"}GET    /api/server_templates/:server_template_id/alert_specs(.:format)? {:action=>\"index\", :controller=>\"alert_specs\"}GET    /api/alert_specs(.:format)?              {:action=>\"index\", :controller=>\"alert_specs\"}",
        "description": null,
        "example_resource": {
          "threshold": "1",
          "escalation_name": "critical",
          "actions": [

          ],
          "variable": "state",
          "file": "path/file_name",
          "created_at": "2015/01/13 00:02:49 +0000",
          "links": [
            {"rel":"self","href":"/api/alert_specs/3"},
            {"rel":"subject","href":"/api/server_templates/10"}
          ],
          "condition": "==",
          "duration": 60,
          "description": "DESCRIPTION_1095377834",
          "name": "NAME_1957404449",
          "updated_at": "2015/01/13 00:02:49 +0000"
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer||instance"
        ],
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default"
            ]
          }
        },
        "route": "GET    /api/servers/:server_id/alert_specs/:id(.:format)? {:action=>\"show\", :controller=>\"alert_specs\"}GET    /api/server_arrays/:server_array_id/alert_specs/:id(.:format)? {:action=>\"show\", :controller=>\"alert_specs\"}GET    /api/server_templates/:server_template_id/alert_specs/:id(.:format)? {:action=>\"show\", :controller=>\"alert_specs\"}GET    /api/alert_specs/:id(.:format)?          {:action=>\"show\", :controller=>\"alert_specs\"}",
        "description": null,
        "example_resource": {
          "threshold": "1",
          "escalation_name": "critical",
          "actions": [

          ],
          "variable": "state",
          "file": "path/file_name",
          "created_at": "2015/01/13 00:02:49 +0000",
          "links": [
            {"rel":"self","href":"/api/alert_specs/3"},
            {"rel":"subject","href":"/api/server_templates/10"}
          ],
          "condition": "==",
          "duration": 60,
          "description": "DESCRIPTION_1095377834",
          "name": "NAME_1957404449",
          "updated_at": "2015/01/13 00:02:49 +0000"
        }
      },
      "update": {
        "status_code": "204 No Content",
        "access_rules": [
          "designer||instance"
        ],
        "parameters": {
          "alert_spec[vote_type]": {
            "class": "String",
            "non_blank": true,
            "description": "Vote to grow or shrink a ServerArray when the alert is triggered.",
            "valid_values": [
              "grow",
              "shrink"
            ]
          },
          "alert_spec[escalation_name]": {
            "class": "String",
            "non_blank": true,
            "description": "Escalate to the named alert escalation when the alert is triggered."
          },
          "alert_spec[description]": {
            "class": "String",
            "non_blank": true,
            "description": "The description of the AlertSpec."
          },
          "alert_spec[file]": {
            "class": "String",
            "non_blank": true,
            "description": "The RRD path/file_name of the condition sentence."
          },
          "alert_spec[name]": {
            "class": "String",
            "non_blank": true,
            "description": "The name of the AlertSpec."
          },
          "alert_spec": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "alert_spec[vote_tag]": {
            "class": "String",
            "non_blank": true,
            "description": "Should correspond to a vote tag on a ServerArray if vote to grow or shrink."
          },
          "alert_spec[condition]": {
            "class": "String",
            "non_blank": true,
            "description": "The condition (operator) in the condition sentence.",
            "valid_values": [
              ">",
              ">=",
              "<",
              "<=",
              "==",
              "!="
            ]
          },
          "alert_spec[duration]": {
            "regex": "/^\\d+$/",
            "class": "String",
            "non_blank": true,
            "description": "The duration in minutes of the condition sentence."
          },
          "alert_spec[threshold]": {
            "class": "String",
            "non_blank": true,
            "description": "The threshold of the condition sentence."
          },
          "alert_spec[variable]": {
            "class": "String",
            "non_blank": true,
            "description": "The RRD variable of the condition sentence."
          }
        },
        "route": "PUT    /api/servers/:server_id/alert_specs/:id(.:format)? {:action=>\"update\", :controller=>\"alert_specs\"}PUT    /api/server_arrays/:server_array_id/alert_specs/:id(.:format)? {:action=>\"update\", :controller=>\"alert_specs\"}PUT    /api/server_templates/:server_template_id/alert_specs/:id(.:format)? {:action=>\"update\", :controller=>\"alert_specs\"}PUT    /api/alert_specs/:id(.:format)?          {:action=>\"update\", :controller=>\"alert_specs\"}",
        "description": "Updates an AlertSpec with the given parameters."
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself",
        "subject": "Associated subject. The subject can be a ServerTemplate, Server, Server Array, or a running Instance."
      },
      "attributes": {
        "threshold": "",
        "actions": "",
        "escalation_name": "",
        "vote_type": "",
        "vote_tag": "",
        "variable": "",
        "file": "",
        "created_at": "",
        "links": "",
        "condition": "",
        "duration": "",
        "description": "",
        "name": "",
        "updated_at": ""
      },
      "description": "An AlertSpec defines the conditions under which an Alert is triggered and escalated.\n  Condition sentence: if &lt;file&gt;.&lt;variable&gt; &lt;condition&gt; '&lt;threshold&gt;' for &lt;duration&gt; min then escalate to '&lt;escalation_name&gt;'.",
      "content_types": [
        "application/vnd.rightscale.alert_spec"
      ]
    },
    "description": "An AlertSpec defines the conditions under which an Alert is triggered and escalated.\nCondition sentence: if &lt;file&gt;.&lt;variable&gt; &lt;condition&gt; '&lt;threshold&gt;' for &lt;duration&gt; min then escalate to '&lt;escalation_name&gt;'."
  },
  "VolumeTypes": {
    "methods": {
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer||instance"
        ],
        "filters": {
          "resource_uid": {
            "description": "Resource Unique IDentifier for the Volume Type to filter on."
          },
          "name": {
            "partial_match": true,
            "description": "The name of the Volume Type to filter on."
          }
        },
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default"
            ]
          },
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "route": "GET    /api/clouds/:cloud_id/volume_types(.:format)? {:action=>\"index\", :controller=>\"volume_types\"}",
        "description": "Lists Volume Types.",
        "example_resource": {
          "actions": [

          ],
          "size": "5",
          "resource_uid": "RESOURCE_2681513298",
          "created_at": "2015/01/13 00:02:48 +0000",
          "links": [
            {"rel":"self","href":"/api/clouds/888/volume_types/RESOURCE_2681513298;2263676305"},
            {"rel":"cloud","href":"/api/clouds/888"}
          ],
          "description": "Small Disk, 5 GB",
          "name": "small",
          "updated_at": "2015/01/13 00:02:48 +0000"
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer||instance"
        ],
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default"
            ]
          }
        },
        "route": "GET    /api/clouds/:cloud_id/volume_types/:id(.:format)? {:action=>\"show\", :controller=>\"volume_types\"}",
        "description": "Displays information about a single Volume Type.",
        "example_resource": {
          "actions": [

          ],
          "size": "5",
          "resource_uid": "RESOURCE_2681513298",
          "created_at": "2015/01/13 00:02:48 +0000",
          "links": [
            {"rel":"self","href":"/api/clouds/888/volume_types/RESOURCE_2681513298;2263676305"},
            {"rel":"cloud","href":"/api/clouds/888"}
          ],
          "description": "Small Disk, 5 GB",
          "name": "small",
          "updated_at": "2015/01/13 00:02:48 +0000"
        }
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself",
        "cloud": "Associated cloud"
      },
      "attributes": {
        "actions": "",
        "size": "",
        "resource_uid": "",
        "created_at": "",
        "links": "",
        "description": "",
        "name": "",
        "updated_at": ""
      },
      "description": "A VolumeType describes the type of volume, particularly the size.",
      "content_types": [
        "application/vnd.rightscale.volume_type"
      ]
    },
    "description": "A VolumeType describes the type of volume, particularly the size."
  },
  "Routes": {
    "methods": {
      "create": {
        "status_code": "201 Created",
        "access_rules": [
          "security_manager"
        ],
        "parameters": {
          "route[next_hop_ip]": {
            "regex": "/^(\\d{1,3}\\.){3}\\d{1,3}$/",
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "The IP Address of the Route's next hop. Required if route[next_hop_type] is 'ip_string'. Not allowed otherwise."
          },
          "route[route_table_href]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The RouteTable to create the Route in."
          },
          "route[description]": {
            "class": "String",
            "non_blank": false,
            "description": "The description to be set on the Route."
          },
          "route": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "route[destination_cidr_block]": {
            "regex": "/^(\\d{1,3}\\.){3}\\d{1,3}\\/\\d{1,2}$/",
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The destination (CIDR IP address) for the Route."
          },
          "route[next_hop_href]": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "The href of the Route's next hop.\n                         Required if route[next_hop_type] is 'instance', 'network_interface', or 'network_gateway'.\n                         Not allowed otherwise."
          },
          "route[next_hop_type]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The Route's next hop type.",
            "valid_values": [
              "instance",
              "network_interface",
              "network_gateway",
              "ip_string"
            ]
          }
        },
        "route": "POST   /api/routes(.:format)?                   {:action=>\"create\", :controller=>\"routes\"}POST   /api/route_tables/:route_table_id/routes(.:format)? {:action=>\"create\", :controller=>\"routes\"}",
        "description": "Create a new Route."
      },
      "destroy": {
        "status_code": "204 No Content",
        "access_rules": [
          "security_manager"
        ],
        "parameters": {
        },
        "route": "DELETE /api/routes/:id(.:format)?               {:action=>\"destroy\", :controller=>\"routes\"}DELETE /api/route_tables/:route_table_id/routes/:id(.:format)? {:action=>\"destroy\", :controller=>\"routes\"}",
        "description": "Delete an existing Route."
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "filters": {
          "state": {
            "description": "Returns Routes in the specified state",
            "column": "network_routes.state"
          },
          "route_table_href": {
            "description": "Returns Routes in the specified RouteTable",
            "column": "network_routes.network_route_table_rsid"
          },
          "next_hop_type": {
            "description": "Returns Routes with the specified next_hop_type"
          },
          "network_href": {
            "include": "network_route_table",
            "description": "Returns Routes in the specified Network",
            "column": "network_route_tables.network_rsid"
          },
          "cloud_href": {
            "description": "Returns Routes in the specified cloud",
            "column": "network_routes.cloud_id"
          },
          "description": {
            "partial_match": true,
            "description": "The description of the Route to filter on.",
            "column": "network_routes.description"
          },
          "next_hop_href": {
            "description": "Returns Routes with the specified next_hop_href"
          },
          "next_hop_ip": {
            "partial_match": true,
            "description": "Returns Routes with the specified next_hop_ip"
          }
        },
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "route": "GET    /api/routes(.:format)?                   {:action=>\"index\", :controller=>\"routes\"}GET    /api/route_tables/:route_table_id/routes(.:format)? {:action=>\"index\", :controller=>\"routes\"}",
        "description": "List Routes available in this account.",
        "example_resource": {
          "state": "available",
          "destination_cidr_block": "10.0.0.0/16",
          "next_hop_type": "instance",
          "created_at": "2015/01/13 00:03:03 +0000",
          "resource_uid": "RESOURCE_1817719855",
          "links": [
            {"rel":"self","href":"/api/routes/RESOURCE_1817719855;1739951361"},
            {"rel":"route_table","href":"/api/route_tables/RESOURCE_3526654001;3193583704"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"next_hop","href":"/api/clouds/888/instances/RESOURCE_1013526198;RAND"}
          ],
          "description": "DESCRIPTION_3279574527",
          "updated_at": "2015/01/13 00:03:03 +0000"
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
        },
        "route": "GET    /api/routes/:id(.:format)?               {:action=>\"show\", :controller=>\"routes\"}GET    /api/route_tables/:route_table_id/routes/:id(.:format)? {:action=>\"show\", :controller=>\"routes\"}",
        "description": "Show information about a single Route.",
        "example_resource": {
          "state": "available",
          "destination_cidr_block": "10.0.0.0/16",
          "next_hop_type": "instance",
          "created_at": "2015/01/13 00:03:03 +0000",
          "resource_uid": "RESOURCE_1817719855",
          "links": [
            {"rel":"self","href":"/api/routes/RESOURCE_1817719855;1739951361"},
            {"rel":"route_table","href":"/api/route_tables/RESOURCE_3526654001;3193583704"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"next_hop","href":"/api/clouds/888/instances/RESOURCE_1013526198;RAND"}
          ],
          "description": "DESCRIPTION_3279574527",
          "updated_at": "2015/01/13 00:03:03 +0000"
        }
      },
      "update": {
        "status_code": "204 No Content",
        "access_rules": [
          "security_manager"
        ],
        "parameters": {
          "route[next_hop_ip]": {
            "regex": "/^(\\d{1,3}\\.){3}\\d{1,3}$/",
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "The updated IP Address of the Route's next hop. Required if route[next_hop_type] is 'ip_string'. Not allowed otherwise."
          },
          "route[description]": {
            "class": "String",
            "non_blank": false,
            "mandatory": false,
            "description": "The updated description of the Route."
          },
          "route": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "route[destination_cidr_block]": {
            "regex": "/^(\\d{1,3}\\.){3}\\d{1,3}\\/\\d{1,2}$/",
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "The updated destination (CIDR IP address) for the Route."
          },
          "route[next_hop_href]": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "The updated href of the Route's next hop. Required if route[next_hop_type] is 'instance', 'network_interface', or 'network_gateway'. Not allowed otherwise."
          },
          "route[next_hop_type]": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "The updated Route's next hop type.",
            "valid_values": [
              "instance",
              "network_interface",
              "network_gateway",
              "ip_string"
            ]
          }
        },
        "route": "PUT    /api/routes/:id(.:format)?               {:action=>\"update\", :controller=>\"routes\"}PUT    /api/route_tables/:route_table_id/routes/:id(.:format)? {:action=>\"update\", :controller=>\"routes\"}",
        "description": "Update an existing Route."
      }
    },
    "media_type": {
      "links": {
        "next_hop": "Href of the next_hop (only if next_hop_type isn't ip_string)",
        "self": "Link to this Route.",
        "cloud": "The cloud that this Route is in.",
        "route_table": "The RouteTable that this Route belongs to."
      },
      "attributes": {
        "state": "",
        "destination_cidr_block": "",
        "next_hop_type": "",
        "resource_uid": "",
        "created_at": "",
        "next_hop_ip": "",
        "description": "",
        "links": "",
        "updated_at": ""
      },
      "description": "A Route defines how networking traffic should be routed from one\n  destination to another. See nexthoptype for available endpoint targets.",
      "content_types": [
        "application/vnd.rightscale.route"
      ]
    },
    "description": "A Route defines how networking traffic should be routed from one\ndestination to another. See nexthoptype for available endpoint targets."
  },
  "MonitoringMetrics": {
    "methods": {
      "data": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
          "start": {
            "regex": "/^(-\\d+)|0$/",
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "An integer number of seconds from current time. e.g. -300"
          },
          "end": {
            "regex": "/^(-\\d+)|0$/",
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "An integer number of seconds from current time. e.g. -150 or 0 "
          }
        },
        "route": "GET    /api/clouds/:cloud_id/instances/:instance_id/monitoring_metrics/:id/data(.:format)? {:action=>\"data\", :controller=>\"monitoring_metrics\"}",
        "description": "Gives the raw monitoring data for a particular metric. The response will include different variables\nassociated with that metric and the data points for each of those variables.\n\nTo get the data for a certain duration, for e.g. for the last 10 minutes(600 secs), provide the variables\nstart=\"-600\" and end=\"0\"."
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "filters": {
          "view": {
            "description": "The view to filter on."
          },
          "plugin": {
            "description": "The plugin to filter on."
          }
        },
        "parameters": {
          "tz": {
            "class": "String",
            "non_blank": true,
            "description": "The time zone in which the graph will be displayed. Default will be 'America/Los_Angeles'. For more zones, see User Settings -> Preferences. "
          },
          "filter": {
            "class": "Array",
            "non_blank": true
          },
          "title": {
            "class": "String",
            "non_blank": true,
            "description": "The title of the graph."
          },
          "size": {
            "class": "String",
            "non_blank": true,
            "description": "The size of the graph to be generated. Default is 'small'.",
            "valid_values": [
              "thumb",
              "tiny",
              "small",
              "large",
              "xlarge"
            ]
          },
          "period": {
            "class": "String",
            "non_blank": true,
            "description": "The time scale for which the graph is generated. Default is 'day'",
            "valid_values": [
              "now",
              "day",
              "yday",
              "week",
              "lweek",
              "month",
              "quarter",
              "year"
            ]
          }
        },
        "route": "GET    /api/clouds/:cloud_id/instances/:instance_id/monitoring_metrics(.:format)? {:action=>\"index\", :controller=>\"monitoring_metrics\"}",
        "description": "Lists the monitoring metrics available for the instance and their corresponding graph hrefs.\nMaking a request to the graph_href will return a png image corresponding to that monitoring metric.",
        "example_resource": {
          "actions": [

          ],
          "graph_href": "test.com/graph",
          "plugin": "cpu-0",
          "view": "cpu-idle",
          "links": [
            {"rel":"self","href":"/api/clouds/888/instances/RESOURCE_1013526198;RAND/monitoring_metrics/cpu-0:cpu-idle"},
            {"rel":"data","href":"/api/clouds/888/instances/RESOURCE_1013526198;RAND/monitoring_metrics/cpu-0:cpu-idle/data"}
          ]
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
          "tz": {
            "class": "String",
            "non_blank": true,
            "description": "The time zone in which the graph will be displayed. Default will be 'America/Los_Angeles'. For more zones, see User Settings -> Preferences. "
          },
          "title": {
            "class": "String",
            "non_blank": true,
            "description": "The title of the graph."
          },
          "size": {
            "class": "String",
            "non_blank": true,
            "description": "The size of the graph to be generated. Default is 'small'.",
            "valid_values": [
              "thumb",
              "tiny",
              "small",
              "large",
              "xlarge"
            ]
          },
          "period": {
            "class": "String",
            "non_blank": true,
            "description": "The time scale for which the graph is generated. Default is 'day'.",
            "valid_values": [
              "now",
              "day",
              "yday",
              "week",
              "lweek",
              "month",
              "quarter",
              "year"
            ]
          }
        },
        "route": "GET    /api/clouds/:cloud_id/instances/:instance_id/monitoring_metrics/:id(.:format)? {:action=>\"show\", :controller=>\"monitoring_metrics\"}",
        "description": "Shows attributes of a single monitoring metric.\nMaking a request to the graph_href will return a png image corresponding to that monitoring metric.",
        "example_resource": {
          "actions": [

          ],
          "graph_href": "test.com/graph",
          "plugin": "cpu-0",
          "view": "cpu-idle",
          "links": [
            {"rel":"self","href":"/api/clouds/888/instances/RESOURCE_1013526198;RAND/monitoring_metrics/cpu-0:cpu-idle"},
            {"rel":"data","href":"/api/clouds/888/instances/RESOURCE_1013526198;RAND/monitoring_metrics/cpu-0:cpu-idle/data"}
          ]
        }
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself",
        "data": "Href for getting raw monitoring data for the metric"
      },
      "attributes": {
        "actions": "",
        "graph_href": "",
        "plugin": "",
        "view": "",
        "links": ""
      },
      "description": "A monitoring metric is a stream of data that is captured in an instance. Metrics can be monitored, graphed and can be used as the basis for triggering alerts.",
      "content_types": [
        "application/vnd.rightscale.monitoring_metric"
      ]
    },
    "description": "A monitoring metric is a stream of data that is captured in an instance. Metrics can be monitored, graphed and can be used as the basis for triggering alerts."
  },
  "Cookbooks": {
    "methods": {
      "follow": {
        "status_code": "204 No Content",
        "access_rules": [
          "designer"
        ],
        "parameters": {
          "value": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "Indicates if this action should follow (true) or unfollow (false) a Cookbook.",
            "valid_values": [
              "true",
              "false"
            ]
          }
        },
        "route": "POST   /api/cookbooks/:id/follow(.:format)?     {:action=>\"follow\", :controller=>\"cookbooks\"}",
        "description": "Follows (or unfollows) a Cookbook. Only available for cookbooks that are in the Alternate namespace."
      },
      "obsolete": {
        "status_code": "204 No Content",
        "access_rules": [
          "designer"
        ],
        "parameters": {
          "value": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "Indicates if this action should obsolete (true) or un-obsolete (false) a Cookbook.",
            "valid_values": [
              "true",
              "false"
            ]
          }
        },
        "route": "POST   /api/cookbooks/:id/obsolete(.:format)?   {:action=>\"obsolete\", :controller=>\"cookbooks\"}",
        "description": "Marks a Cookbook as obsolete (or un-obsolete)."
      },
      "freeze": {
        "status_code": "204 No Content",
        "access_rules": [
          "designer"
        ],
        "parameters": {
          "value": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "Indicates if this action should freeze (true) or unfreeze (false) a Cookbook.",
            "valid_values": [
              "true",
              "false"
            ]
          }
        },
        "route": "POST   /api/cookbooks/:id/freeze(.:format)?     {:action=>\"freeze\", :controller=>\"cookbooks\"}",
        "description": "Freezes (or unfreezes) a Cookbook. Only available for cookbooks that are in the Primary namespace."
      },
      "destroy": {
        "status_code": "204 No Content",
        "access_rules": [
          "designer"
        ],
        "parameters": {
        },
        "route": "DELETE /api/cookbooks/:id(.:format)?            {:action=>\"destroy\", :controller=>\"cookbooks\"}",
        "description": "Destroys a Cookbook. Only available for cookbooks that have no Cookbook Attachments."
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "filters": {
          "namespace": {
            "partial_match": false,
            "description": "Namespace of the Cookbooks to filter on.",
            "column": "alternate_namespace"
          },
          "state": {
            "partial_match": false,
            "description": "Status of the Cookbooks to filter on.",
            "column": "state"
          },
          "name": {
            "partial_match": false,
            "description": "Name of the Cookbooks to filter on.",
            "column": "name"
          },
          "repository_href": {
            "description": "Repository href to filter on.",
            "column": "cookbook_repo_id"
          }
        },
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default",
              "extended",
              "extended_designer"
            ]
          },
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "route": "GET    /api/cookbooks(.:format)?                {:action=>\"index\", :controller=>\"cookbooks\"}",
        "description": "Lists the Cookbooks available to this account.\n\nThe extended_designer view is only available to accounts with the designer permission.",
        "example_resource": {
          "actions": [
            {
              "rel": "freeze"
            },
            {
              "rel": "follow"
            },
            {
              "rel": "obsolete"
            }
          ],
          "namespace": "alternate",
          "state": "followed",
          "version": "0.1.0",
          "created_at": "2015/01/13 00:03:03 +0000",
          "name": "cookbook_562762860",
          "links": [
            {"rel":"self","href":"/api/cookbooks/3"},
            {"rel":"repository","href":"/api/repositories/3"},
            {"rel":"cookbook_attachments","href":"/api/cookbooks/3/cookbook_attachments"}
          ],
          "id": 3,
          "updated_at": "2015/01/13 00:03:03 +0000"
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default",
              "extended",
              "extended_designer"
            ]
          }
        },
        "route": "GET    /api/cookbooks/:id(.:format)?            {:action=>\"show\", :controller=>\"cookbooks\"}",
        "description": "Show information about a single Cookbook.\n\nThe extended_designer view is only available to accounts with the designer permission.",
        "example_resource": {
          "actions": [
            {
              "rel": "freeze"
            },
            {
              "rel": "follow"
            },
            {
              "rel": "obsolete"
            }
          ],
          "namespace": "alternate",
          "state": "followed",
          "version": "0.1.0",
          "created_at": "2015/01/13 00:03:03 +0000",
          "name": "cookbook_562762860",
          "links": [
            {"rel":"self","href":"/api/cookbooks/3"},
            {"rel":"repository","href":"/api/repositories/3"},
            {"rel":"cookbook_attachments","href":"/api/cookbooks/3/cookbook_attachments"}
          ],
          "id": 3,
          "updated_at": "2015/01/13 00:03:03 +0000"
        }
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself",
        "cookbook_attachments": "Attachments for this Cookbook",
        "repository": "Href of associated Repository"
      },
      "attributes": {
        "metadata": "",
        "actions": "",
        "namespace": "Can be either 'primary' or 'alternate'",
        "source_info_summary": "",
        "state": "Can be one of 'normal', 'followed', 'frozen', or 'obsolete'",
        "version": "The version of the cookbook as specified in the metadata",
        "created_at": "",
        "links": "",
        "name": "",
        "id": "",
        "download_url": "A URL that links to the source code of this cookbook as stored in RightScale",
        "updated_at": ""
      },
      "description": "Represents a given instance of a single cookbook.",
      "content_types": [
        "application/vnd.rightscale.cookbook"
      ]
    },
    "description": "Represents a given instance of a single cookbook."
  },
  "ServerTemplateMultiCloudImages": {
    "methods": {
      "create": {
        "status_code": "201 Created",
        "access_rules": [
          "designer"
        ],
        "parameters": {
          "server_template_multi_cloud_image": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "server_template_multi_cloud_image[multi_cloud_image_href]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The href of the MultiCloud Image to be used."
          },
          "server_template_multi_cloud_image[server_template_href]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The href of the ServerTemplate to be used."
          }
        },
        "route": "POST   /api/server_template_multi_cloud_images(.:format)? {:action=>\"create\", :controller=>\"server_template_multi_cloud_images\"}",
        "description": "Creates a new ServerTemplateMultiCloudImage with the given parameters."
      },
      "make_default": {
        "status_code": "204 No Content",
        "access_rules": [
          "designer"
        ],
        "parameters": {
        },
        "route": "POST   /api/server_template_multi_cloud_images/:id/make_default(.:format)? {:action=>\"make_default\", :controller=>\"server_template_multi_cloud_images\"}",
        "description": "Makes a given ServerTemplateMultiCloudImage the default for the ServerTemplate."
      },
      "destroy": {
        "status_code": "204 No Content",
        "access_rules": [
          "designer"
        ],
        "parameters": {
        },
        "route": "DELETE /api/server_template_multi_cloud_images/:id(.:format)? {:action=>\"destroy\", :controller=>\"server_template_multi_cloud_images\"}",
        "description": "Deletes a given ServerTemplateMultiCloudImage."
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "filters": {
          "multi_cloud_image_href": {
            "description": "The href of the MultiCloud Image to filter on."
          },
          "server_template_href": {
            "description": "The href of the ServerTemplate to filter on."
          },
          "is_default": {
            "description": "The is_default attribute of the ServerTemplateMultiCloudImage to filter on. The value passed must be either 1 (true) or 0 (false)."
          }
        },
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default"
            ]
          },
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "route": "GET    /api/server_template_multi_cloud_images(.:format)? {:action=>\"index\", :controller=>\"server_template_multi_cloud_images\"}",
        "description": "Lists the ServerTemplateMultiCloudImages available to this account.",
        "example_resource": {
          "actions": [

          ],
          "is_default": true,
          "created_at": "2015/01/13 00:02:47 +0000",
          "links": [
            {"rel":"self","href":"/api/server_template_multi_cloud_images/3"},
            {"rel":"server_template","href":"/api/server_templates/9"},
            {"rel":"multi_cloud_image","href":"/api/multi_cloud_images/4"}
          ],
          "updated_at": "2015/01/13 00:02:47 +0000"
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default"
            ]
          }
        },
        "route": "GET    /api/server_template_multi_cloud_images/:id(.:format)? {:action=>\"show\", :controller=>\"server_template_multi_cloud_images\"}",
        "description": "Show information about a single ServerTemplateMultiCloudImage which represents an association between a ServerTemplate and a MultiCloudImage.",
        "example_resource": {
          "actions": [

          ],
          "is_default": true,
          "created_at": "2015/01/13 00:02:47 +0000",
          "links": [
            {"rel":"self","href":"/api/server_template_multi_cloud_images/3"},
            {"rel":"server_template","href":"/api/server_templates/9"},
            {"rel":"multi_cloud_image","href":"/api/multi_cloud_images/4"}
          ],
          "updated_at": "2015/01/13 00:02:47 +0000"
        }
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself",
        "multi_cloud_image": "Associated MultiCloud Image",
        "server_template": "Associated ServerTemplate"
      },
      "attributes": {
        "actions": "",
        "is_default": "",
        "created_at": "",
        "links": "",
        "updated_at": ""
      },
      "description": "This resource represents links between ServerTemplates and MultiCloud Images, it enables you to effectively\n add MultiCloud Images to ServerTemplates and make them the default one.",
      "content_types": [
        "application/vnd.rightscale.server_template_multi_cloud_image"
      ]
    },
    "description": "This resource represents links between ServerTemplates and MultiCloud Images and enables you to effectively\nadd/delete MultiCloudImages to ServerTemplates and make them the default one."
  },
  "NetworkOptionGroupAttachments": {
    "methods": {
      "create": {
        "status_code": "201 Created",
        "access_rules": [
          "security_manager"
        ],
        "parameters": {
          "network_option_group_attachment[network_href]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The Network to attach the specified NetworkOptionGroup to."
          },
          "network_option_group_attachment[network_option_group_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The NetworkOptionGroup to attach to the specified resource."
          },
          "network_option_group_attachment": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          }
        },
        "route": "POST   /api/network_option_group_attachments(.:format)? {:action=>\"create\", :controller=>\"network_option_group_attachments\"}",
        "description": "Create a new NetworkOptionGroupAttachment."
      },
      "destroy": {
        "status_code": "204 No Content",
        "access_rules": [
          "security_manager"
        ],
        "parameters": {
        },
        "route": "DELETE /api/network_option_group_attachments/:id(.:format)? {:action=>\"destroy\", :controller=>\"network_option_group_attachments\"}",
        "description": "Delete an existing NetworkOptionGroupAttachment."
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "filters": {
          "network_href": {
            "description": "Returns NetworkOptionGroupAttachments attached to the specified Network",
            "column": "network_rsid"
          },
          "network_option_group_href": {
            "description": "Returns NetworkOptionGroupAttachments attached with the specified NetworkOptionGroup",
            "column": "network_options_group_rsid"
          },
          "cloud_href": {
            "description": "Returns NetworkOptionGroupAttachments in the specified cloud"
          }
        },
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default",
              "extended"
            ]
          },
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "route": "GET    /api/network_option_group_attachments(.:format)? {:action=>\"index\", :controller=>\"network_option_group_attachments\"}",
        "description": "List NetworkOptionGroupAttachments in this account.",
        "example_resource": {
          "created_at": "2015/01/13 00:03:03 +0000",
          "resource_uid": "RESOURCE_2352347328",
          "links": [
            {"rel":"self","href":"/api/network_option_group_attachments/RESOURCE_2352347328;1565450974"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"network_option_group","href":"/api/network_option_groups/RESOURCE_4263520164;1134642119"},
            {"rel":"network","href":"/api/networks/RESOURCE_1500345408;3114453805"}
          ],
          "updated_at": "2015/01/13 00:03:03 +0000"
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default",
              "extended"
            ]
          }
        },
        "route": "GET    /api/network_option_group_attachments/:id(.:format)? {:action=>\"show\", :controller=>\"network_option_group_attachments\"}",
        "description": "Show information about a single NetworkOptionGroupAttachment.",
        "example_resource": {
          "created_at": "2015/01/13 00:03:03 +0000",
          "resource_uid": "RESOURCE_2352347328",
          "links": [
            {"rel":"self","href":"/api/network_option_group_attachments/RESOURCE_2352347328;1565450974"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"network_option_group","href":"/api/network_option_groups/RESOURCE_4263520164;1134642119"},
            {"rel":"network","href":"/api/networks/RESOURCE_1500345408;3114453805"}
          ],
          "updated_at": "2015/01/13 00:03:03 +0000"
        }
      },
      "update": {
        "status_code": "204 No Content",
        "access_rules": [
          "security_manager"
        ],
        "parameters": {
          "network_option_group_attachment[network_option_group_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The NetworkOptionGroup to attach to the specified resource."
          },
          "network_option_group_attachment": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          }
        },
        "route": "PUT    /api/network_option_group_attachments/:id(.:format)? {:action=>\"update\", :controller=>\"network_option_group_attachments\"}",
        "description": "Update an existing NetworkOptionGroupAttachment."
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself",
        "network": "Network being attached with the NetworkOptionGroup",
        "cloud": "Associated Cloud",
        "network_option_group": "NetworkOptionGroup being attached to a networking resource"
      },
      "attributes": {
        "actions": "",
        "network_option_group": "",
        "created_at": "",
        "resource_uid": "",
        "links": "",
        "updated_at": ""
      },
      "description": "Resource for attaching NetworkOptionGroups to Networks.\n\nA single NetworkOptionGroup can be attached to many Networks.\n  A Network/Subnet can have many NetworkOptionGroups attached, as long as the\n  NetworkOptionGroups each have different types.\n\nThis resource describes the attachment details between a particular\n  NetworkOptionGroup and Network.\n\nAmazon currently only supports attaching NetworkOptionGroups to Networks.\n  Other clouds in the future may support attaching to Subnets.",
      "content_types": [
        "application/vnd.rightscale.network_option_group_attachment"
      ]
    },
    "description": "Resource for attaching NetworkOptionGroups to Networks.\n\nA single NetworkOptionGroup can be attached to many Networks.\nA Network/Subnet can have many NetworkOptionGroups attached, as long as the\nNetworkOptionGroups each have different types.\n\nThis resource describes the attachment details between a particular\nNetworkOptionGroup and Network.\n\nAmazon currently only supports attaching NetworkOptionGroups to Networks.\nOther clouds in the future may support attaching to Subnets."
  },
  "NetworkGateways": {
    "methods": {
      "create": {
        "status_code": "201 Created",
        "access_rules": [
          "security_manager"
        ],
        "parameters": {
          "network_gateway[type]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The type of the NetworkGateway.",
            "valid_values": [
              "vpn",
              "internet"
            ]
          },
          "network_gateway[name]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The name to be set on the NetworkGateway."
          },
          "network_gateway[description]": {
            "class": "String",
            "non_blank": false,
            "description": "The description to be set on the NetworkGateway."
          },
          "network_gateway": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "network_gateway[cloud_href]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The cloud to create the NetworkGateway in."
          }
        },
        "route": "POST   /api/network_gateways(.:format)?         {:action=>\"create\", :controller=>\"network_gateways\"}",
        "description": "Create a new NetworkGateway."
      },
      "destroy": {
        "status_code": "204 No Content",
        "access_rules": [
          "security_manager"
        ],
        "parameters": {
        },
        "route": "DELETE /api/network_gateways/:id(.:format)?     {:action=>\"destroy\", :controller=>\"network_gateways\"}",
        "description": "Delete an existing NetworkGateway."
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "filters": {
          "network_href": {
            "description": "Returns NetworkGateways attached to the specified network",
            "column": "network_rsid"
          },
          "name": {
            "partial_match": true,
            "description": "The name of the NetworkGateway to filter on."
          },
          "cloud_href": {
            "description": "Returns NetworkGateways in the specified cloud"
          }
        },
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "route": "GET    /api/network_gateways(.:format)?         {:action=>\"index\", :controller=>\"network_gateways\"}",
        "description": "Lists the NetworkGateways available to this account.",
        "example_resource": {
          "type": "internet",
          "actions": [

          ],
          "state": "available",
          "created_at": "2015/01/13 00:03:03 +0000",
          "resource_uid": "RESOURCE_4246597145",
          "description": null,
          "name": "NAME_3731368178",
          "links": [
            {"rel":"self","href":"/api/network_gateways/RESOURCE_4246597145;4224404666"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"network","href":"/api/networks/RESOURCE_3059694261;930929001"}
          ],
          "updated_at": "2015/01/13 00:03:03 +0000"
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
        },
        "route": "GET    /api/network_gateways/:id(.:format)?     {:action=>\"show\", :controller=>\"network_gateways\"}",
        "description": "Show information about a single NetworkGateway.",
        "example_resource": {
          "type": "internet",
          "actions": [

          ],
          "state": "available",
          "created_at": "2015/01/13 00:03:03 +0000",
          "resource_uid": "RESOURCE_4246597145",
          "description": null,
          "name": "NAME_3731368178",
          "links": [
            {"rel":"self","href":"/api/network_gateways/RESOURCE_4246597145;4224404666"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"network","href":"/api/networks/RESOURCE_3059694261;930929001"}
          ],
          "updated_at": "2015/01/13 00:03:03 +0000"
        }
      },
      "update": {
        "status_code": "204 No Content",
        "access_rules": [
          "security_manager"
        ],
        "parameters": {
          "network_gateway[name]": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "The name to be set on the NetworkGateway."
          },
          "network_gateway[network_href]": {
            "class": "String",
            "non_blank": false,
            "mandatory": false,
            "description": "Pass a blank string to detach from the specified Network, or pass a valid Network href to attach to the specified network."
          },
          "network_gateway[description]": {
            "class": "String",
            "non_blank": false,
            "mandatory": false,
            "description": "The description to be set on the NetworkGateway."
          },
          "network_gateway": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          }
        },
        "route": "PUT    /api/network_gateways/:id(.:format)?     {:action=>\"update\", :controller=>\"network_gateways\"}",
        "description": "Update an existing NetworkGateway."
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself",
        "cloud": "The cloud the NetworkGateway is in",
        "network": "The href of the Network this NetworkGateway is attached to, if any"
      },
      "attributes": {
        "type": "",
        "actions": "",
        "state": "",
        "created_at": "",
        "resource_uid": "",
        "description": "",
        "name": "",
        "links": "",
        "updated_at": ""
      },
      "description": "A NetworkGateway is an interface that allows traffic to be routed between networks.",
      "content_types": [
        "application/vnd.rightscale.network_gateway"
      ]
    },
    "description": "A NetworkGateway is an interface that allows traffic to be routed between networks."
  },
  "IpAddressBindings": {
    "methods": {
      "create": {
        "status_code": "201 Created",
        "access_rules": [
          "actor"
        ],
        "parameters": {
          "ip_address_binding": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "ip_address_binding[instance_href]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The Instance to which this IpAddress should be bound."
          },
          "ip_address_binding[private_port]": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "Incoming network traffic will get forwarded to this port number on the specified Instance. If not specified, will use public port. Required unless public_ip_address_href is passed."
          },
          "ip_address_binding[protocol]": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "Transport layer protocol of traffic that may be forwarded from public port to private port on the Instance. Required unless public_ip_address_href is passed.",
            "valid_values": [
              "UDP",
              "TCP"
            ]
          },
          "ip_address_binding[public_ip_address_href]": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "The IpAddress to bind to the specified instance. Required unless port forwarding rule params are passed."
          },
          "ip_address_binding[public_port]": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "The incoming port for port forwarding. Incoming network traffic on this port will get forwarded (to the IP:Private Port of the specified Instance). Required unless public_ip_address_href is passed."
          }
        },
        "route": "POST   /api/clouds/:cloud_id/ip_addresses/:ip_address_id/ip_address_bindings(.:format)? {:action=>\"create\", :controller=>\"ip_address_bindings\"}POST   /api/clouds/:cloud_id/ip_address_bindings(.:format)? {:action=>\"create\", :controller=>\"ip_address_bindings\"}",
        "description": "Creates an ip address binding which attaches a specified IpAddress resource\nto a specified instance, and also allows for configuration of port forwarding\nrules. If the instance specified is a current (running) instance, a one-time\nIpAddressBinding will be created. If the instance is a next instance, then\na recurring IpAddressBinding is created, which will cause the IpAddress to\nbe bound each time the incarnator boots."
      },
      "destroy": {
        "status_code": "204 No Content",
        "access_rules": [
          "actor"
        ],
        "parameters": {
        },
        "route": "DELETE /api/clouds/:cloud_id/ip_addresses/:ip_address_id/ip_address_bindings/:id(.:format)? {:action=>\"destroy\", :controller=>\"ip_address_bindings\"}DELETE /api/clouds/:cloud_id/ip_address_bindings/:id(.:format)? {:action=>\"destroy\", :controller=>\"ip_address_bindings\"}",
        "description": null
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "filters": {
          "instance_href": {
            "description": "The href of the Instance to filter on.",
            "column": "instance_rsid"
          },
          "ip_address_href": {
            "description": "The href of the IpAddress to filter on.",
            "column": "ip_address_rsid"
          }
        },
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "route": "GET    /api/clouds/:cloud_id/ip_addresses/:ip_address_id/ip_address_bindings(.:format)? {:action=>\"index\", :controller=>\"ip_address_bindings\"}GET    /api/clouds/:cloud_id/ip_address_bindings(.:format)? {:action=>\"index\", :controller=>\"ip_address_bindings\"}",
        "description": "Lists the ip address bindings available to this account.",
        "example_resource": {
          "recurring": false,
          "created_at": "2015/01/13 00:03:02 +0000",
          "links": [
            {"rel":"self","href":"/api/clouds/369481597/ip_address_bindings/RESOURCE_3986857714;RAND"},
            {"rel":"instance","href":"/api/clouds/369481597/instances/RESOURCE_832993666;RAND"},
            {"rel":"ip_address","href":"/api/clouds/888/ip_addresses/RESOURCE_66473176;RAND"}
          ]
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
        },
        "route": "GET    /api/clouds/:cloud_id/ip_addresses/:ip_address_id/ip_address_bindings/:id(.:format)? {:action=>\"show\", :controller=>\"ip_address_bindings\"}GET    /api/clouds/:cloud_id/ip_address_bindings/:id(.:format)? {:action=>\"show\", :controller=>\"ip_address_bindings\"}",
        "description": "Show information about a single ip address binding.",
        "example_resource": {
          "recurring": false,
          "created_at": "2015/01/13 00:03:02 +0000",
          "links": [
            {"rel":"self","href":"/api/clouds/369481597/ip_address_bindings/RESOURCE_3986857714;RAND"},
            {"rel":"instance","href":"/api/clouds/369481597/instances/RESOURCE_832993666;RAND"},
            {"rel":"ip_address","href":"/api/clouds/888/ip_addresses/RESOURCE_66473176;RAND"}
          ]
        }
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself",
        "instance": "Href of the Instance to which the IpAddress is bound",
        "ip_address": "Href of the IpAddress bound to the Instance"
      },
      "attributes": {
        "public_port": "",
        "recurring": "",
        "created_at": "",
        "links": "",
        "protocol": "",
        "private_port": ""
      },
      "description": "An IpAddressBinding represents an abstraction for binding an IpAddress to an instance.\n  The IpAddress is bound immediately for a current instance, or on launch for a next instance.\n  It also allows specifying port forwarding rules for that particular IpAddress and Instance pair.",
      "content_types": [
        "application/vnd.rightscale.ip_address_binding"
      ]
    },
    "description": "An IpAddressBinding represents an abstraction for binding an IpAddress to an instance.\nThe IpAddress is bound immediately for a current instance, or on launch for a next instance.\nIt also allows specifying port forwarding rules for that particular IpAddress and Instance pair."
  },
  "Instances": {
    "methods": {
      "set_custom_lodgement": {
        "status_code": "204 No Content",
        "access_rules": [
          "actor||instance"
        ],
        "parameters": {
          "quantity[][name]": {
            "regex": "/^(\\w|\\/|\\ )+$/",
            "class": "String",
            "non_blank": true,
            "description": "The name of the quantity. A customer-specific string, e.g. \"MB/s\" or \"GB/Month\"."
          },
          "quantity[][value]": {
            "regex": "/^\\d+$/",
            "class": "String",
            "non_blank": true,
            "description": "The value of the quantity. Should be a positive integer."
          },
          "timeframe": {
            "regex": "/^\\d{4}\\/\\d{2}(\\/\\d{2})?$/",
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The timeframe (either a month or a single day) for which the quantity value is valid (currently for the PDT timezone only)."
          },
          "quantity": {
            "class": "Array",
            "non_blank": true,
            "description": "At least one name/value pair must be specified. Currently, a maximum of 2 name/value pairs is supported.",
            "mandatory": true
          }
        },
        "route": "POST   /api/clouds/:cloud_id/instances/:id/set_custom_lodgement(.:format)? {:action=>\"set_custom_lodgement\", :controller=>\"instances\"}",
        "description": "This method is deprecated.  Please use InstanceCustomLodgement."
      },
      "create": {
        "status_code": "201 Created",
        "access_rules": [
          "actor"
        ],
        "parameters": {
          "instance[cloud_specific_attributes][automatic_instance_store_mapping]": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "A flag indicating whether instance store mapping should be enabled. Not supported in all Clouds.",
            "valid_values": [
              "true",
              "false"
            ]
          },
          "instance[subnet_hrefs]": {
            "class": "Array",
            "non_blank": true,
            "description": "The hrefs of the updated subnets."
          },
          "instance[cloud_specific_attributes][root_volume_performance]": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "The number of IOPS (I/O Operations Per Second) this root volume should support. Only available on clouds supporting performance provisioning."
          },
          "instance[cloud_specific_attributes][iam_instance_profile]": {
            "class": "String",
            "non_blank": false,
            "mandatory": false,
            "description": "The name or ARN of the IAM Instance Profile (IIP) to associate with the instance (Amazon only)"
          },
          "instance[name]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The name of the instance."
          },
          "instance[placement_group_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The placement group to launch the instance in. Not supported by all clouds & instance types."
          },
          "instance[cloud_specific_attributes][root_volume_type_uid]": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "The type of root volume for instance. Only available on clouds supporting root volume type."
          },
          "instance": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "instance[security_group_hrefs]": {
            "class": "Array",
            "non_blank": true,
            "description": "The hrefs of the security groups."
          },
          "instance[user_data]": {
            "class": "String",
            "non_blank": true,
            "description": "User data that RightScale automatically passes to your instance at boot time."
          },
          "instance[cloud_specific_attributes]": {
            "class": "Hash",
            "non_blank": true,
            "description": "Cloud specific attributes that have no generic rightscale abstraction"
          },
          "instance[cloud_specific_attributes][root_volume_size]": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "The size for root disk. Not supported in all Clouds."
          },
          "instance[deployment_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the deployment to which the Instance will be added."
          },
          "instance[datacenter_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the Datacenter / Zone."
          },
          "instance[associate_public_ip_address]": {
            "class": "String",
            "non_blank": true,
            "description": "Specify whether or not you want a public IP assigned when this Instance is launched. Only applies to Network-enabled Instances. If this is not specified, it will default to true.",
            "mandatory": false,
            "valid_values": [
              "true",
              "false"
            ]
          },
          "instance[ramdisk_image_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the ramdisk image."
          },
          "instance[instance_type_href]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The href of the instance type."
          },
          "instance[cloud_specific_attributes][ebs_optimized]": {
            "class": "String",
            "non_blank": true,
            "description": "Whether the instance is able to connect to IOPS-enabled volumes.",
            "mandatory": false,
            "valid_values": [
              "true",
              "false"
            ]
          },
          "instance[image_href]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The href of the Image to use."
          },
          "instance[ssh_key_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the SSH key to use."
          },
          "instance[kernel_image_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the kernel image."
          }
        },
        "route": "POST   /api/clouds/:cloud_id/instances(.:format)? {:action=>\"create\", :controller=>\"instances\"}",
        "description": "Creates and launches a raw instance using the provided parameters."
      },
      "lock": {
        "status_code": "204 No Content",
        "access_rules": [
          "actor"
        ],
        "parameters": {
        },
        "route": "POST   /api/clouds/:cloud_id/instances/:id/lock(.:format)? {:action=>\"lock\", :controller=>\"instances\"}",
        "description": ""
      },
      "unlock": {
        "status_code": "204 No Content",
        "access_rules": [
          "actor"
        ],
        "parameters": {
        },
        "route": "POST   /api/clouds/:cloud_id/instances/:id/unlock(.:format)? {:action=>\"unlock\", :controller=>\"instances\"}",
        "description": ""
      },
      "stop": {
        "status_code": "204 No Content",
        "access_rules": [
          "actor"
        ],
        "parameters": {
        },
        "route": "POST   /api/clouds/:cloud_id/instances/:id/stop(.:format)? {:action=>\"stop\", :controller=>\"instances\"}",
        "description": "Stores the instance's current volume state to resume later using the 'start' action.\n\nAfter an instance is stopped, the reference to your instance will have a different id.\n\nThe new id can be found by performing an index query with the appropriate filters on the\nInstances resource, performing a show action on the Server resource for Server Instances, or performing a current_instances action on the ServerArray resource for ServerArray Instances."
      },
      "multi_terminate": {
        "status_code": "202 Accepted",
        "access_rules": [
          "actor"
        ],
        "parameters": {
          "terminate_all": {
            "class": "String",
            "non_blank": true,
            "description": "Specifies the ability to terminate all instances.",
            "valid_values": [
              "true",
              "false"
            ]
          },
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "route": "POST   /api/clouds/:cloud_id/instances/multi_terminate(.:format)? {:action=>\"multi_terminate\", :controller=>\"instances\"}POST   /api/server_arrays/:server_array_id/multi_terminate(.:format)? {:action=>\"multi_terminate\", :controller=>\"instances\"}",
        "description": "Terminates running instances.\nEither a filter or the parameter 'terminate_all' must be provided."
      },
      "multi_run_executable": {
        "status_code": "202 Accepted",
        "access_rules": [
          "actor"
        ],
        "parameters": {
          "inputs": {
            "class": "Enumerable",
            "non_blank": true
          },
          "recipe_name": {
            "class": "String",
            "non_blank": true,
            "description": "The name of the recipe to be run."
          },
          "right_script_href": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the RightScript to run. Should be of the form '/api/right_scripts/:id'."
          },
          "filter": {
            "class": "Array",
            "non_blank": true
          },
          "inputs[][value]": {
            "class": "String",
            "non_blank": true,
            "description": "The value of these inputs. Should be of the form 'text:my_value' or 'cred:MY_CRED' etc. This format is used for passing legacy 1.0-style Inputs. Will eventually be deprecated.",
            "mandatory": false
          },
          "inputs[][name]": {
            "class": "String",
            "non_blank": true,
            "description": "The name of inputs needed. This format is used for passing legacy 1.0-style Inputs. Will eventually be deprecated.",
            "mandatory": false
          },
          "inputs[*]": {
            "class": "String",
            "non_blank": true,
            "description": "The format used for passing 2.0-style Inputs. The key is the name of the input, and the value is the value to assign to the input. For more details on 2.0-style inputs, please see Inputs#multi_update.",
            "mandatory": false
          },
          "ignore_lock": {
            "class": "String",
            "non_blank": true,
            "description": "Specifies the ability to ignore the lock(s) on the Instance(s).",
            "valid_values": [
              "true",
              "false"
            ]
          }
        },
        "route": "POST   /api/clouds/:cloud_id/instances/multi_run_executable(.:format)? {:action=>\"multi_run_executable\", :controller=>\"instances\"}POST   /api/server_arrays/:server_array_id/multi_run_executable(.:format)? {:action=>\"multi_run_executable\", :controller=>\"instances\"}",
        "description": "Runs a script or a recipe in the running instances.\n\nThis is an asynchronous function, which returns immediately after queuing the executable for execution.\nStatus of the execution can be tracked at the URL returned in the \"Location\" header."
      },
      "launch": {
        "status_code": "201 Created",
        "access_rules": [
          "actor"
        ],
        "parameters": {
          "inputs": {
            "class": "Enumerable",
            "non_blank": true
          },
          "inputs[][value]": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "The value of that input. Should be of the form 'text:my_value' or 'cred:MY_CRED' etc. This format is used for passing legacy 1.0-style Inputs. Will eventually be deprecated."
          },
          "inputs[][name]": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "The input name. This format is used for passing legacy 1.0-style Inputs. Will eventually be deprecated."
          },
          "inputs[*]": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "The format used for passing 2.0-style Inputs. The key is the name of the input, and the value is the value to assign to the input. For more details on 2.0-style inputs, please see Inputs#multi_update."
          },
          "api_behavior": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "When set to 'async', an instance resource will be returned immediately and processing will be handled in the background. Errors will not be returned and must be checked through the instance's audit entries. Default value is 'sync'",
            "valid_values": [
              "async",
              "sync"
            ]
          }
        },
        "route": "POST   /api/clouds/:cloud_id/instances/:id/launch(.:format)? {:action=>\"launch\", :controller=>\"instances\"}POST   /api/servers/:server_id/launch(.:format)? {:action=>\"launch\", :controller=>\"instances\"}POST   /api/server_arrays/:server_array_id/launch(.:format)? {:action=>\"launch\", :controller=>\"instances\"}",
        "description": "Launches an instance using the parameters that this instance has been configured with.\n\nNote that this action can only be performed in \"next\" instances, and not on instances that are already running."
      },
      "start": {
        "status_code": "204 No Content",
        "access_rules": [
          "actor"
        ],
        "parameters": {
        },
        "route": "POST   /api/clouds/:cloud_id/instances/:id/start(.:format)? {:action=>\"start\", :controller=>\"instances\"}",
        "description": "Starts an instance that has been stopped, resuming it to its previously saved volume state.\n\nAfter an instance is started, the reference to your instance will have a different id.\n\nThe new id can be found by performing an index query with the appropriate filters on the\nInstances resource, performing a show action on the Server resource for Server Instances, or\nperforming a current_instances action on the ServerArray resource for ServerArray Instances."
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer||instance"
        ],
        "filters": {
          "resource_uid": {
            "description": "Resource Unique IDentifier for the Instance to filter on."
          },
          "state": {
            "description": "The state of Instances to filter on.",
            "column": "      IF (`is_next`=1, \"inactive\", IF(`stranded_at`, CONCAT('stranded in ', IF(\n        IF(`agent_state` IS NULL, `state`, `agent_state`)='running' AND IF(`incarnator_id` IS NOT NULL AND (attached_at AND NOT detached_at), `incarnator_id`, NULL),\n        \"booting\",\n        IF(`agent_state` IS NULL, `state`, `agent_state`)\n      )), IF(\n        IF(`agent_state` IS NULL, `state`, `agent_state`)='running' AND IF(`incarnator_id` IS NOT NULL AND (attached_at AND NOT detached_at), `incarnator_id`, NULL),\n        \"booting\",\n        IF(`agent_state` IS NULL, `state`, `agent_state`)\n      )))\n"
          },
          "datacenter_href": {
            "include": "launch_setting",
            "description": "The href of the datacenter to filter on.",
            "column": "launch_settings.datacenter_rsid"
          },
          "name": {
            "partial_match": true,
            "description": "Name of the Instance to filter on.",
            "column": "instances.name"
          },
          "parent_href": {
            "polymorphic": true,
            "description": "The href of the parent to filter on.",
            "column": "incarnator_id"
          },
          "server_template_href": {
            "description": "The href of the ServerTemplate to filter on."
          },
          "placement_group_href": {
            "include": "launch_setting",
            "description": "The href of the placement group to filter on.",
            "column": "launch_settings.placement_group_rsid"
          },
          "public_dns_name": {
            "partial_match": true,
            "description": "The public dns name to filter on.",
            "column": "public_dns_names"
          },
          "os_platform": {
            "partial_match": true,
            "description": "The OS platform to filter on."
          },
          "public_ip_address": {
            "partial_match": true,
            "description": "The public ip address to filter on.",
            "column": "public_ip_addresses"
          },
          "private_ip_address": {
            "partial_match": true,
            "description": "The private ip address to filter on.",
            "column": "private_ip_addresses"
          },
          "private_dns_name": {
            "partial_match": true,
            "description": "The private dns name to filter on.",
            "column": "private_dns_names"
          },
          "deployment_href": {
            "description": "The href of the deployment to filter on."
          }
        },
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default",
              "extended",
              "full",
              "full_inputs_2_0",
              "tiny"
            ]
          },
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "route": "GET    /api/clouds/:cloud_id/instances(.:format)? {:action=>\"index\", :controller=>\"instances\"}GET    /api/clouds/:cloud_id/instances(.:format)? {:action=>\"index\", :controller=>\"instances\"}GET    /api/server_arrays/:server_array_id/current_instances(.:format)? {:action=>\"index\", :controller=>\"instances\"}",
        "description": "Lists instances of a given cloud, server array.\n\nUsing the available filters, it is possible to craft powerful queries about which instances to retrieve.\nFor example, one can easily list:\n\n\ninstances that have names that contain \"app\"\nall instances of a given deployment\ninstances belonging to a given server array (i.e., have the same parent_url)\n\n\nTo see the instances of a server array including the next_instance, use the URL \"/api/clouds/:cloud_id/instances\" with the filter \"parent_href==/api/server_arrays/XX\". To list only the running\ninstances of a server array, use the URL \"/api/server_arrays/:server_array_id/current_instances\"\n\nThe 'full_inputs_2_0' view is for retrieving inputs in 2.0 serialization (for more\ndetails please see Inputs#index.)",
        "example_resource": {
          "locked": false,
          "actions": [
            {
              "rel": "terminate"
            },
            {
              "rel": "reboot"
            },
            {
              "rel": "run_executable"
            },
            {
              "rel": "lock"
            },
            {
              "rel": "unlock"
            }
          ],
          "state": "operational",
          "cloud_specific_attributes": {
          },
          "public_ip_addresses": [
            "212.203.214.172"
          ],
          "resource_uid": "RESOURCE_1013526198",
          "created_at": "2015/01/13 00:02:48 +0000",
          "links": [
            {"rel":"self","href":"/api/clouds/888/instances/RESOURCE_1013526198;RAND"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"deployment","href":"/api/deployments/16"},
            {"rel":"server_template","href":"/api/server_templates/9"},
            {"rel":"multi_cloud_image","href":"/api/multi_cloud_images/4","inherited_source":"server_template"},
            {"rel":"parent","href":"/api/servers/5"},
            {"rel":"volume_attachments","href":"/api/clouds/888/instances/RESOURCE_1013526198;RAND/volume_attachments"},
            {"rel":"inputs","href":"/api/clouds/888/instances/RESOURCE_1013526198;RAND/inputs"},
            {"rel":"monitoring_metrics","href":"/api/clouds/888/instances/RESOURCE_1013526198;RAND/monitoring_metrics"},
            {"rel":"alerts","href":"/api/clouds/888/instances/RESOURCE_1013526198;RAND/alerts"}
          ],
          "name": "NAME_3968638303",
          "private_ip_addresses": [
            "7.3.7.8"
          ],
          "pricing_type": "fixed",
          "associate_public_ip_address": true,
          "updated_at": "2015/01/13 00:02:48 +0000"
        }
      },
      "reboot": {
        "status_code": "204 No Content",
        "access_rules": [
          "actor"
        ],
        "parameters": {
        },
        "route": "POST   /api/clouds/:cloud_id/instances/:id/reboot(.:format)? {:action=>\"reboot\", :controller=>\"instances\"}POST   /api/servers/:server_id/reboot(.:format)? {:action=>\"reboot\", :controller=>\"instances\"}",
        "description": "Reboot a running instance.\n\nNote that this action can only succeed if the instance is running. One cannot reboot instances of type \"next\"."
      },
      "run_executable": {
        "status_code": "202 Accepted",
        "access_rules": [
          "actor"
        ],
        "parameters": {
          "inputs": {
            "class": "Enumerable",
            "non_blank": true
          },
          "recipe_name": {
            "class": "String",
            "non_blank": true,
            "description": "The name of the recipe to run."
          },
          "right_script_href": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the RightScript to run. Should be of the form '/api/right_scripts/:id'."
          },
          "inputs[][value]": {
            "class": "String",
            "non_blank": true,
            "description": "The value of these inputs. Should be of the form 'text:my_value' or 'cred:MY_CRED' etc. This format is used for passing legacy 1.0-style Inputs. Will eventually be deprecated.",
            "mandatory": false
          },
          "inputs[][name]": {
            "class": "String",
            "non_blank": true,
            "description": "The name of inputs needed. This format is used for passing legacy 1.0-style Inputs. Will eventually be deprecated.",
            "mandatory": false
          },
          "inputs[*]": {
            "class": "String",
            "non_blank": true,
            "description": "The format used for passing 2.0-style Inputs. The key is the name of the input, and the value is the value to assign to the input. For more details on 2.0-style inputs, please see Inputs#multi_update.",
            "mandatory": false
          },
          "ignore_lock": {
            "class": "String",
            "non_blank": true,
            "description": "Specifies the ability to ignore the lock on the Instance.",
            "valid_values": [
              "true",
              "false"
            ]
          }
        },
        "route": "POST   /api/clouds/:cloud_id/instances/:id/run_executable(.:format)? {:action=>\"run_executable\", :controller=>\"instances\"}",
        "description": "Runs a script or a recipe in the running instance.\n\nThis is an asynchronous function, which returns immediately after queuing the executable for execution.\nStatus of the execution can be tracked at the URL returned in the \"Location\" header.\nNote that this can only be performed on running instances.\n\nFUTURE: we plan to support flexible callbacks for this action, where the client can be notified upon completion (success or error)"
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer||instance"
        ],
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default",
              "extended",
              "full",
              "full_inputs_2_0",
              "tiny"
            ]
          }
        },
        "route": "GET    /api/clouds/:cloud_id/instances/:id(.:format)? {:action=>\"show\", :controller=>\"instances\"}",
        "description": "Shows attributes of a single instance.\n\nThe 'full_inputs_2_0' view is for retrieving inputs in 2.0 serialization (for more\ndetails please see Inputs#index.)",
        "example_resource": {
          "locked": false,
          "actions": [
            {
              "rel": "terminate"
            },
            {
              "rel": "reboot"
            },
            {
              "rel": "run_executable"
            },
            {
              "rel": "lock"
            },
            {
              "rel": "unlock"
            }
          ],
          "state": "operational",
          "cloud_specific_attributes": {
          },
          "public_ip_addresses": [
            "212.203.214.172"
          ],
          "resource_uid": "RESOURCE_1013526198",
          "created_at": "2015/01/13 00:02:48 +0000",
          "links": [
            {"rel":"self","href":"/api/clouds/888/instances/RESOURCE_1013526198;RAND"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"deployment","href":"/api/deployments/16"},
            {"rel":"server_template","href":"/api/server_templates/9"},
            {"rel":"multi_cloud_image","href":"/api/multi_cloud_images/4","inherited_source":"server_template"},
            {"rel":"parent","href":"/api/servers/5"},
            {"rel":"volume_attachments","href":"/api/clouds/888/instances/RESOURCE_1013526198;RAND/volume_attachments"},
            {"rel":"inputs","href":"/api/clouds/888/instances/RESOURCE_1013526198;RAND/inputs"},
            {"rel":"monitoring_metrics","href":"/api/clouds/888/instances/RESOURCE_1013526198;RAND/monitoring_metrics"},
            {"rel":"alerts","href":"/api/clouds/888/instances/RESOURCE_1013526198;RAND/alerts"}
          ],
          "name": "NAME_3968638303",
          "private_ip_addresses": [
            "7.3.7.8"
          ],
          "pricing_type": "fixed",
          "associate_public_ip_address": true,
          "updated_at": "2015/01/13 00:02:48 +0000"
        }
      },
      "terminate": {
        "status_code": "204 No Content",
        "access_rules": [
          "actor"
        ],
        "parameters": {
        },
        "route": "POST   /api/clouds/:cloud_id/instances/:id/terminate(.:format)? {:action=>\"terminate\", :controller=>\"instances\"}POST   /api/servers/:server_id/terminate(.:format)? {:action=>\"terminate\", :controller=>\"instances\"}",
        "description": "Terminates a running instance.\n\nNote that this action can succeed only if the instance is running. One cannot terminate instances of type \"next\"."
      },
      "update": {
        "status_code": "204 No Content",
        "access_rules": [
          "actor"
        ],
        "parameters": {
          "instance[cloud_specific_attributes][automatic_instance_store_mapping]": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "A flag indicating whether instance store mapping should be enabled. Not supported in all Clouds.",
            "valid_values": [
              "true",
              "false"
            ]
          },
          "instance[subnet_hrefs]": {
            "class": "Array",
            "non_blank": true,
            "description": "The hrefs of the updated subnets."
          },
          "instance[cloud_specific_attributes][root_volume_performance]": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "The number of IOPS (I/O Operations Per Second) this root volume should support. Only available on clouds supporting performance provisioning."
          },
          "instance[multi_cloud_image_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the updated MultiCloudImage for the Instance."
          },
          "instance[cloud_specific_attributes][iam_instance_profile]": {
            "class": "String",
            "non_blank": false,
            "mandatory": false,
            "description": "The name or ARN of the IAM Instance Profile (IIP) to associate with the instance (Amazon only)"
          },
          "instance[name]": {
            "class": "String",
            "non_blank": true,
            "description": "The updated name to give the Instance."
          },
          "instance[server_template_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the updated ServerTemplate for the Instance."
          },
          "instance[cloud_specific_attributes][root_volume_type_uid]": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "The type of root volume for instance. Only available on clouds supporting root volume type."
          },
          "instance": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "instance[security_group_hrefs]": {
            "class": "Array",
            "non_blank": true,
            "description": "The hrefs of the updated security groups."
          },
          "instance[user_data]": {
            "class": "String",
            "non_blank": true,
            "description": "User data that RightScale automatically passes to your instance at boot time."
          },
          "instance[cloud_specific_attributes]": {
            "class": "Hash",
            "non_blank": true,
            "description": "Cloud specific attributes that have no generic rightscale abstraction"
          },
          "instance[cloud_specific_attributes][root_volume_size]": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "The size for root disk. Not supported in all Clouds."
          },
          "instance[deployment_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the updated Deployment for the Instance. This is only supported for Instances that are not associated with a Server or ServerArray."
          },
          "instance[datacenter_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the updated Datacenter / Zone for the Instance."
          },
          "instance[associate_public_ip_address]": {
            "class": "String",
            "non_blank": true,
            "description": "Specify whether or not you want a public IP assigned when this Instance is launched. Only applies to Network-enabled Instances. If this is not specified, it will default to true.",
            "mandatory": false,
            "valid_values": [
              "true",
              "false"
            ]
          },
          "instance[ramdisk_image_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the updated ramdisk image for the Instance."
          },
          "instance[instance_type_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the updated Instance Type."
          },
          "instance[image_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the updated Image for the Instance."
          },
          "instance[ip_forwarding_enabled]": {
            "class": "String",
            "non_blank": true,
            "description": "Allows this Instance to send and receive network traffic when the source and destination IP addresses do not match the IP address of this Instance.",
            "mandatory": false,
            "valid_values": [
              "true",
              "false"
            ]
          },
          "instance[ssh_key_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the updated SSH key for the Instance."
          },
          "instance[kernel_image_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the updated kernel image for the Instance."
          }
        },
        "route": "PUT    /api/clouds/:cloud_id/instances/:id(.:format)? {:action=>\"update\", :controller=>\"instances\"}",
        "description": "Updates attributes of a single instance."
      }
    },
    "media_type": {
      "links": {
        "monitoring_metrics": "Associated monitoring metrics",
        "inputs": "List of configuration inputs",
        "self": "Href of itself",
        "ssh_key": "Associated ssh key",
        "deployment": "Associated Deployment",
        "lock_user": "Href of the user who has locked this instance",
        "kernel_image": "Associated kernel image",
        "ramdisk_image": "Associated ramdisk image",
        "parent": "Parent Object (Server/ServerArray)",
        "placement_group": "Associated placement group",
        "multi_cloud_image": "Associated multi cloud image",
        "cloud": "Associated Cloud",
        "alerts": "Associated alerts",
        "datacenter": "Associated datacenter",
        "instance_type": "Associated instance type",
        "volume_attachments": "Associated volume attachments",
        "image": "Associated image",
        "server_template": "Associated ServerTemplate"
      },
      "attributes": {
        "locked": "",
        "security_groups": "",
        "public_dns_names": "",
        "ip_forwarding_enabled": "",
        "actions": "",
        "user_data": "",
        "monitoring_id": "",
        "monitoring_server": "",
        "private_dns_names": "",
        "state": "",
        "cloud_specific_attributes": "",
        "inherited_sources": "",
        "subnets": "",
        "inputs": "",
        "public_ip_addresses": "",
        "resource_uid": "",
        "created_at": "",
        "links": "",
        "os_platform": "",
        "terminated_at": "",
        "description": "",
        "name": "",
        "pricing_type": "",
        "private_ip_addresses": "",
        "associate_public_ip_address": "",
        "updated_at": ""
      },
      "description": "Instances represent an entity that is runnable in the cloud.\n\nAn instance of type \"next\" is a container of information that expresses how to configure a future instance when we decide\n  to launch or start it.\n  A \"next\" instance generally only exists in the RightScale realm, and usually doesn't have any corresponding representation\n  existing in the cloud. However, if an instance is not of type \"next\", it will generally represent an existing running\n  (or provisioned) virtual machine existing in the cloud.",
      "content_types": [
        "application/vnd.rightscale.instance"
      ]
    },
    "description": "Instances represent an entity that is runnable in the cloud.\n\nAn instance of type \"next\" is a container of information that expresses how to configure a future instance when we decide\nto launch or start it.\nA \"next\" instance generally only exists in the RightScale realm, and usually doesn't have any corresponding representation\nexisting in the cloud. However, if an instance is not of type \"next\", it will generally represent an existing running\n(or provisioned) virtual machine existing in the cloud."
  },
  "Accounts": {
    "methods": {
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
        },
        "route": "GET    /api/accounts/:id(.:format)?             {:action=>\"show\", :controller=>\"accounts\"}",
        "description": "Show information about a single Account.",
        "example_resource": {
          "created_at": "2015/01/13 00:02:47 +0000",
          "links": [
            {"rel":"self","href":"/api/accounts/367396534"},
            {"rel":"owner","href":"/api/users/888"},
            {"rel":"cluster","href":"/api/clusters/9"}
          ],
          "name": "SPEC_ACCOUNT",
          "updated_at": "2015/01/13 00:02:47 +0000"
        }
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself",
        "cluster": "Href of the cluster the account belongs to",
        "owner": "Href of the owner"
      },
      "attributes": {
        "products": "",
        "permissions": "",
        "created_at": "",
        "links": "",
        "name": "",
        "updated_at": ""
      },
      "description": null,
      "content_types": [
        "application/vnd.rightscale.account"
      ]
    },
    "description": null
  },
  "RightScripts": {
    "methods": {
      "update_source": {
        "status_code": "204 No Content",
        "access_rules": [
          "designer"
        ],
        "parameters": {
        },
        "route": "PUT    /api/right_scripts/:id/source(.:format)? {:action=>\"update_source\", :controller=>\"right_scripts\"}",
        "description": "Updates the source of the given RightScript"
      },
      "show_source": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
        },
        "route": "GET    /api/right_scripts/:id/source(.:format)? {:action=>\"show_source\", :controller=>\"right_scripts\"}",
        "description": "Returns the script source for a RightScript"
      },
      "commit": {
        "status_code": "201 Created",
        "access_rules": [
          "designer"
        ],
        "parameters": {
          "right_script[commit_message]": {
            "class": "String",
            "non_blank": true,
            "description": "The message to be included with the requested commit",
            "mandatory": true
          },
          "right_script": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          }
        },
        "route": "POST   /api/right_scripts/:id/commit(.:format)? {:action=>\"commit\", :controller=>\"right_scripts\"}",
        "description": "Commits the given RightScript. Only HEAD revisions (revision 0) can be committed."
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "filters": {
          "name": {
            "partial_match": true,
            "description": "Name of the RightScript to filter on."
          },
          "lineage": {
            "partial_match": false,
            "description": "Lineage of the RightScript to filter on (this attribute is simply a string and not a working URL).",
            "column": "lineage_uid"
          }
        },
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default"
            ]
          },
          "filter": {
            "class": "Array",
            "non_blank": true
          },
          "latest_only": {
            "class": "String",
            "non_blank": true,
            "description": "Whether or not to return only the latest version for each lineage.",
            "valid_values": [
              "true",
              "false"
            ]
          }
        },
        "route": "GET    /api/right_scripts(.:format)?            {:action=>\"index\", :controller=>\"right_scripts\"}",
        "description": "Lists RightScripts.",
        "example_resource": {
          "lineage": "https://testscale_1/api/acct/367396534/right_scripts/6",
          "revision": 0,
          "created_at": "2015/01/13 00:03:03 +0000",
          "description": "DESCRIPTION_2325115",
          "name": "NAME_2140802529",
          "links": [
            {"rel":"self","href":"/api/right_scripts/6"},
            {"rel":"source","href":"/api/right_scripts/6/source"}
          ],
          "id": "6",
          "updated_at": "2015/01/13 00:03:03 +0000"
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
        },
        "route": "GET    /api/right_scripts/:id(.:format)?        {:action=>\"show\", :controller=>\"right_scripts\"}",
        "description": "Displays information about a single RightScript.",
        "example_resource": {
          "lineage": "https://testscale_1/api/acct/367396534/right_scripts/6",
          "revision": 0,
          "created_at": "2015/01/13 00:03:03 +0000",
          "description": "DESCRIPTION_2325115",
          "name": "NAME_2140802529",
          "links": [
            {"rel":"self","href":"/api/right_scripts/6"},
            {"rel":"source","href":"/api/right_scripts/6/source"}
          ],
          "id": "6",
          "updated_at": "2015/01/13 00:03:03 +0000"
        }
      },
      "update": {
        "status_code": "204 No Content",
        "access_rules": [
          "designer"
        ],
        "parameters": {
          "right_script[description]": {
            "class": "String",
            "non_blank": true,
            "description": "The new description for the RightScript"
          },
          "right_script[name]": {
            "class": "String",
            "non_blank": true,
            "description": "The new name for the RightScript"
          },
          "right_script": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          }
        },
        "route": "PUT    /api/right_scripts/:id(.:format)?        {:action=>\"update\", :controller=>\"right_scripts\"}",
        "description": "Updates RightScript name/description"
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself",
        "source": "Returns the RightScript source"
      },
      "attributes": {
        "revision": "",
        "lineage": "",
        "created_at": "",
        "links": "",
        "description": "",
        "name": "",
        "source": "",
        "id": "",
        "updated_at": ""
      },
      "description": "A RightScript is an executable piece of code that can be run on a server\n  during the boot, operational, or decommission phases. A RightScript\n  consists of a script (typically written in Bash, Ruby, or Perl), a set of\n  binary-file attachments that are downloaded on demand from RightScale,\n  a set of package names that are installed using the system's package\n  manager before running the script, and a set of named input parameters\n  that are passed into the script as environment variables. All revisions of\n  a RightScript belong to a RightScript lineage that is exposed by the\n  \"lineage\" attribute (NOTE: This attribute is merely a string to locate\n  all revisions of a RightScript and NOT a working URL).",
      "content_types": [
        "application/vnd.rightscale.right_script"
      ]
    },
    "description": "A RightScript is an executable piece of code that can be run on a server\nduring the boot, operational, or decommission phases.\n\nAll revisions of\na RightScript belong to a RightScript lineage that is exposed by the\n\"lineage\" attribute (NOTE: This attribute is merely a string to locate\nall revisions of a RightScript and NOT a working URL)."
  },
  "Subnets": {
    "methods": {
      "create": {
        "status_code": "201 Created",
        "access_rules": [
          "security_manager"
        ],
        "parameters": {
          "subnet[datacenter_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The associated Datacenter."
          },
          "subnet[name]": {
            "class": "String",
            "non_blank": true,
            "description": "The name for the Subnet."
          },
          "subnet[cidr_block]": {
            "class": "String",
            "non_blank": true,
            "description": "The range of IP addresses for the Subnet.",
            "mandatory": true
          },
          "subnet[network_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The associated Network.",
            "mandatory": true
          },
          "subnet": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "subnet[description]": {
            "class": "String",
            "non_blank": true,
            "description": "The description for the Subnet."
          }
        },
        "route": "POST   /api/clouds/:cloud_id/instances/:instance_id/subnets(.:format)? {:action=>\"create\", :controller=>\"subnets\"}POST   /api/clouds/:cloud_id/subnets(.:format)? {:action=>\"create\", :controller=>\"subnets\"}",
        "description": "Creates a new subnet."
      },
      "destroy": {
        "status_code": "204 No Content",
        "access_rules": [
          "security_manager"
        ],
        "parameters": {
        },
        "route": "DELETE /api/clouds/:cloud_id/instances/:instance_id/subnets/:id(.:format)? {:action=>\"destroy\", :controller=>\"subnets\"}DELETE /api/clouds/:cloud_id/subnets/:id(.:format)? {:action=>\"destroy\", :controller=>\"subnets\"}",
        "description": "Deletes the given subnet(s)."
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "filters": {
          "resource_uid": {
            "description": "Resource Unique IDentifier for the Subnet to filter on."
          },
          "datacenter_href": {
            "description": "The href of the datacenter to filter on.",
            "column": "subnets.datacenter_rsid"
          },
          "network_href": {
            "description": "The href of the network to filter on.",
            "column": "subnets.network_rsid"
          },
          "name": {
            "partial_match": true,
            "description": "Name of the Subnet to filter on.",
            "column": "subnets.name"
          },
          "instance_href": {
            "include": {
              "network_interfaces": "network_interface_attachments"
            },
            "description": "Returns Subnets that are associated with the specified Instance.",
            "column": "network_interface_attachments.instance_rsid"
          },
          "visibility": {
            "description": "Visibility of the subnet to filter by (private, shared, etc)."
          }
        },
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "route": "GET    /api/clouds/:cloud_id/instances/:instance_id/subnets(.:format)? {:action=>\"index\", :controller=>\"subnets\"}GET    /api/clouds/:cloud_id/subnets(.:format)? {:action=>\"index\", :controller=>\"subnets\"}",
        "description": "Lists subnets of a given cloud.",
        "example_resource": {
          "cidr_block": null,
          "visibility": "public",
          "is_default": false,
          "state": "pending",
          "resource_uid": "RESOURCE_2512163943",
          "links": [
            {"rel":"self","href":"/api/clouds/888/subnets/RESOURCE_2512163943;2816802793"},
            {"rel":"datacenter","href":"/api/clouds/888/datacenters/RESOURCE_3239719184;RAND"},
            {"rel":"route_table","href":"/api/route_tables/RESOURCE_2206747515;2790288065"},
            {"rel":"effective_route_table","href":"/api/route_tables/RESOURCE_2206747515;2790288065"}
          ],
          "description": "subnet233208158",
          "name": "NAME_177450143"
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
        },
        "route": "GET    /api/clouds/:cloud_id/instances/:instance_id/subnets/:id(.:format)? {:action=>\"show\", :controller=>\"subnets\"}GET    /api/clouds/:cloud_id/subnets/:id(.:format)? {:action=>\"show\", :controller=>\"subnets\"}",
        "description": "Shows attributes of a single subnet.",
        "example_resource": {
          "cidr_block": null,
          "visibility": "public",
          "is_default": false,
          "state": "pending",
          "resource_uid": "RESOURCE_2512163943",
          "links": [
            {"rel":"self","href":"/api/clouds/888/subnets/RESOURCE_2512163943;2816802793"},
            {"rel":"datacenter","href":"/api/clouds/888/datacenters/RESOURCE_3239719184;RAND"},
            {"rel":"route_table","href":"/api/route_tables/RESOURCE_2206747515;2790288065"},
            {"rel":"effective_route_table","href":"/api/route_tables/RESOURCE_2206747515;2790288065"}
          ],
          "description": "subnet233208158",
          "name": "NAME_177450143"
        }
      },
      "update": {
        "status_code": "204 No Content",
        "access_rules": [
          "security_manager"
        ],
        "parameters": {
          "subnet[name]": {
            "class": "String",
            "non_blank": false,
            "description": "The updated name for the Subnet."
          },
          "subnet[route_table_href]": {
            "class": "String",
            "non_blank": false,
            "description": "The RouteTable to associate/dissociate with this Subnet. Pass this parameter with an empty string to reset this Subnet to use the default RouteTable."
          },
          "subnet": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "subnet[description]": {
            "class": "String",
            "non_blank": false,
            "description": "The updated description for the Subnet."
          }
        },
        "route": "PUT    /api/clouds/:cloud_id/instances/:instance_id/subnets/:id(.:format)? {:action=>\"update\", :controller=>\"subnets\"}PUT    /api/clouds/:cloud_id/subnets/:id(.:format)? {:action=>\"update\", :controller=>\"subnets\"}",
        "description": "Updates name and description for the current subnet."
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself",
        "network": "Href of the Network the Subnet is in",
        "route_table": "Href of the RouteTable explicitly associated with the Subnet, if any.",
        "datacenter": "Href of the Datacenter the Subnet is in",
        "effective_route_table": "Href of the RouteTable associated with the Subnet (may be inherited)."
      },
      "attributes": {
        "cidr_block": "",
        "visibility": "",
        "is_default": "",
        "state": "",
        "resource_uid": "",
        "links": "",
        "description": "",
        "name": ""
      },
      "description": "A Subnet is a logical grouping of network devices. An Instance can have many\n  Subnets.",
      "content_types": [
        "application/vnd.rightscale.subnet"
      ]
    },
    "description": "A Subnet is a logical grouping of network devices. An Instance can have many\nSubnets."
  },
  "SshKeys": {
    "methods": {
      "create": {
        "status_code": "201 Created",
        "access_rules": [
          "actor"
        ],
        "parameters": {
          "ssh_key": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "ssh_key[name]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The name for the SSH key to be created."
          }
        },
        "route": "POST   /api/clouds/:cloud_id/ssh_keys(.:format)? {:action=>\"create\", :controller=>\"ssh_keys\"}",
        "description": "Creates a new ssh key."
      },
      "destroy": {
        "status_code": "204 No Content",
        "access_rules": [
          "actor"
        ],
        "parameters": {
        },
        "route": "DELETE /api/clouds/:cloud_id/ssh_keys/:id(.:format)? {:action=>\"destroy\", :controller=>\"ssh_keys\"}",
        "description": "Deletes a given ssh key."
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "filters": {
          "resource_uid": {
            "description": "Resource Unique IDentifier for the SSH key to filter on."
          }
        },
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default",
              "sensitive"
            ]
          },
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "route": "GET    /api/clouds/:cloud_id/ssh_keys(.:format)? {:action=>\"index\", :controller=>\"ssh_keys\"}",
        "description": "Lists ssh keys.",
        "example_resource": {
          "actions": [

          ],
          "resource_uid": "RESOURCE_3919245839",
          "links": [
            {"rel":"self","href":"/api/clouds/888/ssh_keys/ABC2721584358DEF"},
            {"rel":"cloud","href":"/api/clouds/888"}
          ]
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default",
              "sensitive"
            ]
          }
        },
        "route": "GET    /api/clouds/:cloud_id/ssh_keys/:id(.:format)? {:action=>\"show\", :controller=>\"ssh_keys\"}",
        "description": "Displays information about a single ssh key.",
        "example_resource": {
          "actions": [

          ],
          "resource_uid": "RESOURCE_3919245839",
          "links": [
            {"rel":"self","href":"/api/clouds/888/ssh_keys/ABC2721584358DEF"},
            {"rel":"cloud","href":"/api/clouds/888"}
          ]
        }
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself",
        "cloud": "Associated cloud"
      },
      "attributes": {
        "actions": "",
        "resource_uid": "",
        "links": "",
        "material": ""
      },
      "description": "Ssh Keys represent a created SSH Key that exists in the cloud.\n\nAn ssh key might also contain the private part of the key, and can be used to login to instances launched with it.",
      "content_types": [
        "application/vnd.rightscale.ssh_key"
      ]
    },
    "description": "Ssh Keys represent a created SSH Key that exists in the cloud.\n\nAn ssh key might also contain the private part of the key, and can be used to login to instances launched with it."
  },
  "Sessions": {
    "methods": {
      "create": {
        "status_code": "204 No Content",
        "access_rules": {
        },
        "parameters": {
          "account_href": {
            "regex": "/^\\/api\\/accounts\\/\\d+$/",
            "class": "String",
            "non_blank": true,
            "description": "The account href for which the session needs to be created.",
            "mandatory": true
          },
          "password": {
            "class": "String",
            "non_blank": true,
            "description": "The corresponding password.",
            "mandatory": true
          },
          "email": {
            "class": "String",
            "non_blank": true,
            "description": "The email to login with.",
            "mandatory": true
          }
        },
        "route": "POST   /api/sessions(.:format)?                 {:action=>\"create\", :controller=>\"sessions\"}POST   /api/session(.:format)?                  {:action=>\"create\", :controller=>\"sessions\"}POST   /api/sessions(.:format)?                 {:action=>\"create\", :controller=>\"sessions\"}POST   /api/session(.:format)?                  {:action=>\"create\", :controller=>\"sessions\"}",
        "description": "Creates API session scoped to a given account. (API login)\n\nThis call requires a form of authentication (user and password), as well as the account for which the session needs to be created.\nUpon successfully authenticating the credentials, the system will return a 204 code and set of two cookies that will serve as the credentials for the session. Both of these cookies\nmust be passed in any of the subsequent requests for this session.\nIf an 302 redirect code is returned, the client is responsible of re-issuing the POST request against the content of the received Location header, passing the exact same parameters again.\n\n\nExample Request using Curl:\ncurl -i -H X_API_VERSION:1.5 -c mycookies -X POST -d email='email@me.com' -d password='mypassword' -d account_href=/api/accounts/11 https://my.rightscale.com/api/sessions\n"
      },
      "create_instance_session": {
        "status_code": "204 No Content",
        "access_rules": {
        },
        "parameters": {
          "instance_token": {
            "class": "String",
            "non_blank": true,
            "description": "The instance token to login with.",
            "mandatory": true
          },
          "account_href": {
            "regex": "/^\\/api\\/accounts\\/\\d+$/",
            "class": "String",
            "non_blank": true,
            "description": "The account href for which the session needs to be created.",
            "mandatory": true
          }
        },
        "route": "POST   /api/sessions/instance(.:format)?        {:action=>\"create_instance_session\", :controller=>\"sessions\"}POST   /api/session/instance(.:format)?         {:action=>\"create_instance_session\", :controller=>\"sessions\"}",
        "description": "Creates API session scoped to a given account and instance.\n\nThis call requires a form of authentication (token), as well as the account for which the session needs to be created.\nUpon successfully authenticating the credentials, the system will return a 204 code and set of two cookies that will serve as the credentials for the session. Both of these cookies\nmust be passed in any of the subsequent requests for this session.\nIf an 302 redirect code is returned, the client is responsible of re-issuing the POST request against the content of the received Location header, passing the exact same parameters again.\n\n\nUsers can find their account ID and instance\\_token from their instance's user_data:\naccount ID regex: /RS_API_TOKEN=(\\d+):/\ninstance_token regex: /RS_API_TOKEN=(?:\\d+):(\\w+)&/\n\nExample Request using Curl:\ncurl -i -H X_API_VERSION:1.5 -c mycookies -X POST -d instance_token='randomtoken' -d account_href=/api/accounts/11 https://my.rightscale.com/api/sessions/instance\n"
      },
      "index_instance_session": {
        "status_code": "200 OK",
        "access_rules": [
          "instance"
        ],
        "parameters": {
        },
        "route": "GET    /api/sessions/instance(.:format)?        {:action=>\"index_instance_session\", :controller=>\"sessions\"}GET    /api/session/instance(.:format)?         {:action=>\"index_instance_session\", :controller=>\"sessions\"}",
        "description": "Shows the full attributes of the instance (that has the token used to log-in).\nThis call can be used by an instance to get it's own details.\n\n\nExample Request using Curl:\ncurl -i -H X_API_VERSION:1.5 -b mycookies -X GET https://my.rightscale.com/api/sessions/instance\n"
      },
      "accounts": {
        "status_code": "200 OK",
        "access_rules": {
        },
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "description": "Extended view shows account permissions and products",
            "mandatory": false,
            "valid_values": [
              "default",
              "extended"
            ]
          },
          "password": {
            "class": "String",
            "non_blank": true,
            "description": "The corresponding password.",
            "mandatory": false
          },
          "email": {
            "class": "String",
            "non_blank": true,
            "description": "The email to login with if not using existing session.",
            "mandatory": false
          }
        },
        "route": "GET    /api/sessions/accounts(.:format)?        {:action=>\"accounts\", :controller=>\"sessions\"}GET    /api/session/accounts(.:format)?         {:action=>\"accounts\", :controller=>\"sessions\"}",
        "description": "List all the accounts that a user has access to.\n\nThis call may be executed outside of an existing session. Doing so requires passing a username and password in the\nrequest body. The idea is that it should be possible to list accounts that can be used to create a session.\n\nUpon successfully authenticating the credentials, the system will return a 200 OK code and return the list of accounts.\nIf an 302 redirect code is returned, the client is responsible of re-issuing the GET request against the content of the received Location header, passing the exact same parameters again.\n\n\nExample Request using Curl (not using an existing session):\ncurl -i -H X_API_VERSION:1.5 -X GET -d email='email@me.com' -d password='mypassword' https://my.rightscale.com/api/sessions/accounts\n\nExample Request using Curl (using an existing session):\ncurl -i -H X_API_VERSION:1.5 -X GET -b mycookies https://my.rightscale.com/api/sessions/accounts\n"
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "filters": {
        },
        "parameters": {
        },
        "route": "GET    /api/sessions(.:format)?                 {:action=>\"index\", :controller=>\"sessions\"}GET    /api/session(.:format)?                  {:action=>\"index\", :controller=>\"sessions\"}",
        "description": "Returns a list of root resources so an authenticated session can use them as a starting point or a way to know what\nfeatures are available within its privileges.\n\n\nExample Request using Curl:\ncurl -i -H X_API_VERSION:1.5 -b mycookies -X GET https://my.rightscale.com/api/sessions\n",
        "example_resource": {
          "actions": [

          ],
          "message": "You have successfully logged into the RightScale API.",
          "links": [
            {"rel":"account_groups","href":"/api/account_groups"},
            {"rel":"accounts","href":"/api/accounts"},
            {"rel":"alert_specs","href":"/api/alert_specs"},
            {"rel":"alerts","href":"/api/alerts"},
            {"rel":"audit_entries","href":"/api/audit_entries"},
            {"rel":"backups","href":"/api/backups"},
            {"rel":"child_accounts","href":"/api/child_accounts"},
            {"rel":"cloud_accounts","href":"/api/cloud_accounts"},
            {"rel":"clouds","href":"/api/clouds"},
            {"rel":"cookbooks","href":"/api/cookbooks"},
            {"rel":"credentials","href":"/api/credentials"},
            {"rel":"deployments","href":"/api/deployments"},
            {"rel":"identity_providers","href":"/api/identity_providers"},
            {"rel":"multi_cloud_images","href":"/api/multi_cloud_images"},
            {"rel":"network_gateways","href":"/api/network_gateways"},
            {"rel":"network_option_group_attachments","href":"/api/network_option_group_attachments"},
            {"rel":"network_option_groups","href":"/api/network_option_groups"},
            {"rel":"networks","href":"/api/networks"},
            {"rel":"permissions","href":"/api/permissions"},
            {"rel":"placement_groups","href":"/api/placement_groups"},
            {"rel":"preferences","href":"/api/preferences"},
            {"rel":"publication_lineages","href":"/api/publication_lineages"},
            {"rel":"publications","href":"/api/publications"},
            {"rel":"repositories","href":"/api/repositories"},
            {"rel":"right_scripts","href":"/api/right_scripts"},
            {"rel":"route_tables","href":"/api/route_tables"},
            {"rel":"routes","href":"/api/routes"},
            {"rel":"security_group_rules","href":"/api/security_group_rules"},
            {"rel":"self","href":"/api/session"},
            {"rel":"server_arrays","href":"/api/server_arrays"},
            {"rel":"server_template_multi_cloud_images","href":"/api/server_template_multi_cloud_images"},
            {"rel":"server_templates","href":"/api/server_templates"},
            {"rel":"servers","href":"/api/servers"},
            {"rel":"tags","href":"/api/tags"},
            {"rel":"users","href":"/api/users"}
          ]
        }
      }
    },
    "media_type": {
      "links": {
        "tags": "Search for Tags",
        "self": "Href of itself",
        "repositories": "Available Repositories",
        "deployments": "Available Deployments",
        "server_template_multi_cloud_images": "Available ServerTemplateMultiCloudImages",
        "security_group_rules": "Available SecurityGroupRules",
        "cloud_accounts": "Available CloudAccounts",
        "users": "Available Users",
        "network_option_group_attachments": "Available NetworkOptionGroupAttachments",
        "cookbooks": "Available Cookbooks",
        "cloud_flow_processes": "Available Cloud Workflow processes",
        "routes": "Available Routes",
        "network_option_groups": "Available NetworkOptionGroups",
        "servers": "Available Servers",
        "child_accounts": "Available ChildAccounts",
        "account_groups": "Available AccountGroups",
        "server_templates": "Available ServerTemplates",
        "route_tables": "Available RouteTables",
        "publications": "Available Publications",
        "preferences": "Available Preferences",
        "backups": "Available Backups",
        "right_scripts": "Available RightScripts",
        "placement_groups": "Available PlacementGroups",
        "audit_entries": "Available AuditEntries",
        "alerts": "Available Alerts",
        "server_arrays": "Available ServerArrays",
        "networks": "Available Networks",
        "multi_cloud_images": "Available MultiCloudImages",
        "identity_providers": "Available IdentityProviders",
        "network_gateways": "Available NetworkGateways",
        "credentials": "Available Credentials",
        "accounts": "Available Accounts",
        "publication_lineages": "Available PublicationLineages",
        "permissions": "Available Permissions",
        "clouds": "Available Clouds",
        "alert_specs": "Available AlertSpecs"
      },
      "attributes": {
        "actions": "",
        "message": "",
        "links": ""
      },
      "description": "Session is the first resource that API users interact with, it has links to root resources.",
      "content_types": [
        "application/vnd.rightscale.session"
      ]
    },
    "description": "The sessions resource is in charge of creating API sessions that are bound to a given account. The sequence for login into the API is the following:\n\n\nPerform a POST request to /api/sessions ('create' action) to my.rightscale.com or to any more specific hosts saved from previous sessions.\nIf the targeted host is not appropriate for the specific account being accessed it will return a 302 http code with a URL with which the client must retry the same POST request.\nIf the targeted host is the right one and the login is successful, it will return a 204 http code, along with two cookies that will need to be saved and passed in any subsequent API request.\nIf there is an authentication or authorization problem with the POST request an error (typically 401 or 422 ) may be returned at any point in the above sequence.\nIf the session expires, it will return a 403 http code with a \"Session cookie is expired or invalid\" message.\n\n\n\nNote that all API calls irrespective of the resource it is acting on, should pass a header \"X_API_VERSION\" with the value \"1.5\".\n"
  },
  "ServerTemplates": {
    "methods": {
      "clone": {
        "status_code": "201 Created",
        "access_rules": [
          "designer"
        ],
        "parameters": {
          "server_template[name]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The name for the cloned ServerTemplate."
          },
          "server_template[description]": {
            "class": "String",
            "non_blank": true,
            "description": "The description for the cloned ServerTemplate."
          },
          "server_template": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true,
            "description": ""
          }
        },
        "route": "POST   /api/server_templates/:id/clone(.:format)? {:action=>\"clone\", :controller=>\"server_templates\"}",
        "description": "Clones a given ServerTemplate."
      },
      "create": {
        "status_code": "201 Created",
        "access_rules": [
          "designer"
        ],
        "parameters": {
          "server_template[name]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The name of the ServerTemplate to be created."
          },
          "server_template[description]": {
            "class": "String",
            "non_blank": false,
            "description": "The description of the ServerTemplate to be created."
          },
          "server_template": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          }
        },
        "route": "POST   /api/server_templates(.:format)?         {:action=>\"create\", :controller=>\"server_templates\"}",
        "description": "Creates a new ServerTemplate with the given parameters."
      },
      "swap_repository": {
        "status_code": "200 OK",
        "access_rules": [
          "designer"
        ],
        "parameters": {
          "target_repository_href": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The repository whose cookbook attachments are to be utilized."
          },
          "source_repository_href": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The repository whose cookbook attachments are to be replaced."
          }
        },
        "route": "POST   /api/server_templates/:id/swap_repository(.:format)? {:action=>\"swap_repository\", :controller=>\"server_templates\"}",
        "description": "In-place replacement of attached cookbooks from a given repository.\n\nFor each attached cookbook coming from the source repository, replace it by\nattaching a cookbook of identical name coming from the target repository.\n\nIn order for the operation to be successful, all attachments that came from the\nsource repository must exist in the target repository.\n\nIf multiple cookbooks of a given name exist in the target repository, preference\nis given by the following order (top most being the highest preference):\n\n\n  Name & Version Match / Primary Namespace\n  Name & Version Match / Alternate Namespace\n  Name Match / Primary Namespace\n  Name Match / Alternate Namespace\n\n\nIf multiple cookbooks still have the same preference for the replacement, the operation is\nindeterministic."
      },
      "publish": {
        "status_code": "201 Created",
        "access_rules": [
          "publisher"
        ],
        "parameters": {
          "descriptions": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "descriptions[notes]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "New Revision Notes."
          },
          "allow_comments": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "Allow users to leave comments on this ServerTemplate.",
            "valid_values": [
              "true",
              "false"
            ]
          },
          "categories": {
            "class": "Array",
            "non_blank": true,
            "mandatory": false,
            "description": "List of Categories."
          },
          "descriptions[long]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "Long Description."
          },
          "account_group_hrefs": {
            "class": "Array",
            "non_blank": true,
            "mandatory": true,
            "description": "List of hrefs of account groups to publish to."
          },
          "email_comments": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "Email me when a user comments on this ServerTemplate.",
            "valid_values": [
              "true",
              "false"
            ]
          },
          "descriptions[short]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "Short Description."
          }
        },
        "route": "POST   /api/server_templates/:id/publish(.:format)? {:action=>\"publish\", :controller=>\"server_templates\"}",
        "description": "Publishes a given ServerTemplate and its subordinates.\nOnly non-HEAD revisions that are owned by the account can be published."
      },
      "commit": {
        "status_code": "201 Created",
        "access_rules": [
          "designer"
        ],
        "parameters": {
          "freeze_repositories": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "Freeze the repositories.",
            "valid_values": [
              "true",
              "false"
            ]
          },
          "commit_head_dependencies": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "Commit all HEAD revisions (if any) of the associated MultiCloud Images, RightScripts and Chef repo sequences.",
            "valid_values": [
              "true",
              "false"
            ]
          },
          "commit_message": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The message associated with the commit."
          }
        },
        "route": "POST   /api/server_templates/:id/commit(.:format)? {:action=>\"commit\", :controller=>\"server_templates\"}",
        "description": "Commits a given ServerTemplate. Only HEAD revisions (revision 0) that are owned by the account can be committed."
      },
      "detect_changes_in_head": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
        },
        "route": "POST   /api/server_templates/:id/detect_changes_in_head(.:format)? {:action=>\"detect_changes_in_head\", :controller=>\"server_templates\"}",
        "description": "Identifies RightScripts attached to the resource that differ from their HEAD.\n\nIf the attached revision of the RightScript is the HEAD, then this will indicate\na difference between it and the latest committed revision in the same lineage."
      },
      "destroy": {
        "status_code": "204 No Content",
        "access_rules": [
          "designer"
        ],
        "parameters": {
        },
        "route": "DELETE /api/server_templates/:id(.:format)?     {:action=>\"destroy\", :controller=>\"server_templates\"}",
        "description": "Deletes a given ServerTemplate."
      },
      "resolve": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
        },
        "route": "POST   /api/server_templates/:id/resolve(.:format)? {:action=>\"resolve\", :controller=>\"server_templates\"}",
        "description": "Enumerates all attached cookbooks, missing dependencies and bound executables.\n\nVersion constraints on missing dependencies and the state of the Chef Recipes;\nwhether or not the cookbook or recipe itself could be found among the\nattachments, will also be reported."
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "filters": {
          "name": {
            "partial_match": true,
            "description": "The name of the ServerTemplate to filter on.",
            "column": "nickname"
          },
          "multi_cloud_image_href": {
            "description": "The MultiCloud Image used by the ServerTemplate to filter on.",
            "column": "server_template_multi_cloud_images.multi_cloud_image_id"
          },
          "revision": {
            "description": "The revision of the ServerTemplate to filter on.",
            "column": "version"
          },
          "lineage": {
            "description": "The ServerTemplate lineage to filter on (this attribute is simply a string and not a working URL).",
            "column": "lineage_uid"
          },
          "description": {
            "partial_match": true,
            "description": "The ServerTemplate description to filter on."
          }
        },
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default",
              "inputs",
              "inputs_2_0"
            ]
          },
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "route": "GET    /api/server_templates(.:format)?         {:action=>\"index\", :controller=>\"server_templates\"}",
        "description": "Lists the ServerTemplates available to this account. HEAD revisions have a revision of 0.\n\nThe 'inputs_2_0' view is for retrieving inputs in 2.0 serialization (for more\ndetails please see Inputs#index.)",
        "example_resource": {
          "lineage": "https://testscale_1/api/acct/367396534/ec2_server_templates/9",
          "revision": 0,
          "actions": [
            {
              "rel": "commit"
            },
            {
              "rel": "clone"
            },
            {
              "rel": "resolve"
            },
            {
              "rel": "swap_repository"
            },
            {
              "rel": "detect_changes_in_head"
            }
          ],
          "links": [
            {"rel":"self","href":"/api/server_templates/9"},
            {"rel":"multi_cloud_images","href":"/api/server_templates/9/multi_cloud_images"},
            {"rel":"default_multi_cloud_image","href":"/api/multi_cloud_images/4"},
            {"rel":"inputs","href":"/api/server_templates/9/inputs"},
            {"rel":"alert_specs","href":"/api/server_templates/9/alert_specs"},
            {"rel":"runnable_bindings","href":"/api/server_templates/9/runnable_bindings"},
            {"rel":"cookbook_attachments","href":"/api/server_templates/9/cookbook_attachments"}
          ],
          "description": "DESCRIPTION_2868523905",
          "name": "NICKNAME_765009940"
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default",
              "inputs",
              "inputs_2_0"
            ]
          }
        },
        "route": "GET    /api/server_templates/:id(.:format)?     {:action=>\"show\", :controller=>\"server_templates\"}",
        "description": "Show information about a single ServerTemplate. HEAD revisions have a revision of 0.\n\nThe 'inputs_2_0' view is for retrieving inputs in 2.0 serialization (for more\ndetails please see Inputs#index.)",
        "example_resource": {
          "lineage": "https://testscale_1/api/acct/367396534/ec2_server_templates/9",
          "revision": 0,
          "actions": [
            {
              "rel": "commit"
            },
            {
              "rel": "clone"
            },
            {
              "rel": "resolve"
            },
            {
              "rel": "swap_repository"
            },
            {
              "rel": "detect_changes_in_head"
            }
          ],
          "links": [
            {"rel":"self","href":"/api/server_templates/9"},
            {"rel":"multi_cloud_images","href":"/api/server_templates/9/multi_cloud_images"},
            {"rel":"default_multi_cloud_image","href":"/api/multi_cloud_images/4"},
            {"rel":"inputs","href":"/api/server_templates/9/inputs"},
            {"rel":"alert_specs","href":"/api/server_templates/9/alert_specs"},
            {"rel":"runnable_bindings","href":"/api/server_templates/9/runnable_bindings"},
            {"rel":"cookbook_attachments","href":"/api/server_templates/9/cookbook_attachments"}
          ],
          "description": "DESCRIPTION_2868523905",
          "name": "NICKNAME_765009940"
        }
      },
      "update": {
        "status_code": "204 No Content",
        "access_rules": [
          "designer"
        ],
        "parameters": {
          "server_template[name]": {
            "class": "String",
            "non_blank": true,
            "description": "The updated name for the ServerTemplate."
          },
          "server_template[description]": {
            "class": "String",
            "non_blank": false,
            "description": "The updated description for the ServerTemplate."
          },
          "server_template": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true,
            "description": ""
          }
        },
        "route": "PUT    /api/server_templates/:id(.:format)?     {:action=>\"update\", :controller=>\"server_templates\"}",
        "description": "Updates attributes of a given ServerTemplate. Only HEAD revisions can be updated (revision 0).\nCurrently, the attributes you can update are only the 'direct' attributes of a server template. To\nmanage multi cloud images of a ServerTemplate, please see the resource 'ServerTemplateMultiCloudImages'."
      }
    },
    "media_type": {
      "links": {
        "inputs": "List of configuration inputs",
        "self": "Href of itself",
        "cookbook_attachments": "Attached Chef Cookbooks",
        "publication": "Associated privately shared Publication",
        "multi_cloud_images": "Associated MultiCloud Images",
        "runnable_bindings": "Attached RightScripts and Chef Recipes",
        "default_multi_cloud_image": "The default MultiCloud Image",
        "alert_specs": "Associated AlertSpecs"
      },
      "attributes": {
        "lineage": "",
        "revision": "",
        "actions": "",
        "inputs": "",
        "links": "",
        "description": "",
        "name": ""
      },
      "description": "ServerTemplates allow you to pre-configure servers by starting from a base image and adding scripts that run during the boot,\n operational, and shutdown phases. A ServerTemplate is a description of how a new instance will be configured when it is\n provisioned by your cloud provider.\n All revisions of a ServerTemplate belong to a ServerTemplate lineage that is exposed by the \"lineage\" attribute.\n (NOTE: This attribute is merely a string to locate all revisions of a ServerTemplate and NOT a working URL)",
      "content_types": [
        "application/vnd.rightscale.server_template"
      ]
    },
    "description": "ServerTemplates allow you to pre-configure servers by starting from a base image and adding scripts that run during the boot,\noperational, and shutdown phases. A ServerTemplate is a description of how a new instance will be configured when it is\nprovisioned by your cloud provider.\n\nAll revisions of a ServerTemplate belong to a ServerTemplate lineage that is exposed by the \"lineage\" attribute.\n(NOTE: This attribute is merely a string to locate all revisions of a ServerTemplate and NOT a working URL)"
  },
  "RouteTables": {
    "methods": {
      "create": {
        "status_code": "201 Created",
        "access_rules": [
          "security_manager"
        ],
        "parameters": {
          "route_table[description]": {
            "class": "String",
            "non_blank": false,
            "description": "The description to be set on the RouteTable."
          },
          "route_table[network_href]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The Network to create the RouteTable in."
          },
          "route_table[cloud_href]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The cloud to create the RouteTable in."
          },
          "route_table[name]": {
            "class": "String",
            "non_blank": false,
            "mandatory": true,
            "description": "The name to be set on the RouteTable."
          },
          "route_table": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          }
        },
        "route": "POST   /api/route_tables(.:format)?             {:action=>\"create\", :controller=>\"route_tables\"}",
        "description": "Create a new RouteTable."
      },
      "destroy": {
        "status_code": "204 No Content",
        "access_rules": [
          "security_manager"
        ],
        "parameters": {
        },
        "route": "DELETE /api/route_tables/:id(.:format)?         {:action=>\"destroy\", :controller=>\"route_tables\"}",
        "description": "Delete an existing RouteTable."
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "filters": {
          "network_href": {
            "description": "Returns RouteTables attached to the specified network",
            "column": "network_rsid"
          },
          "name": {
            "partial_match": true,
            "description": "The name of the RouteTable to filter on."
          },
          "cloud_href": {
            "description": "Returns RouteTables in the specified cloud"
          }
        },
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default",
              "extended"
            ]
          },
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "route": "GET    /api/route_tables(.:format)?             {:action=>\"index\", :controller=>\"route_tables\"}",
        "description": "List RouteTables available in this account.",
        "example_resource": {
          "created_at": "2015/01/13 00:03:03 +0000",
          "resource_uid": "RESOURCE_3526654001",
          "links": [
            {"rel":"self","href":"/api/route_tables/RESOURCE_3526654001;3193583704"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"network","href":"/api/networks/RESOURCE_1500345408;3114453805"},
            {"rel":"routes","href":"/api/route_tables/RESOURCE_3526654001;3193583704/routes"}
          ],
          "description": "DESCRIPTION_1285008468",
          "name": "NAME_3246324381",
          "updated_at": "2015/01/13 00:03:03 +0000"
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default",
              "extended"
            ]
          }
        },
        "route": "GET    /api/route_tables/:id(.:format)?         {:action=>\"show\", :controller=>\"route_tables\"}",
        "description": "Show information about a single RouteTable.",
        "example_resource": {
          "created_at": "2015/01/13 00:03:03 +0000",
          "resource_uid": "RESOURCE_3526654001",
          "links": [
            {"rel":"self","href":"/api/route_tables/RESOURCE_3526654001;3193583704"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"network","href":"/api/networks/RESOURCE_1500345408;3114453805"},
            {"rel":"routes","href":"/api/route_tables/RESOURCE_3526654001;3193583704/routes"}
          ],
          "description": "DESCRIPTION_1285008468",
          "name": "NAME_3246324381",
          "updated_at": "2015/01/13 00:03:03 +0000"
        }
      },
      "update": {
        "status_code": "204 No Content",
        "access_rules": [
          "security_manager"
        ],
        "parameters": {
          "route_table[description]": {
            "class": "String",
            "non_blank": false,
            "mandatory": false,
            "description": "The description to be set on the RouteTable."
          },
          "route_table[name]": {
            "class": "String",
            "non_blank": false,
            "mandatory": false,
            "description": "The name to be set on the RouteTable."
          },
          "route_table": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          }
        },
        "route": "PUT    /api/route_tables/:id(.:format)?         {:action=>\"update\", :controller=>\"route_tables\"}",
        "description": "Update an existing RouteTable."
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself",
        "routes": "Associated Routes",
        "network": "Associated Network",
        "cloud": "Associated Cloud"
      },
      "attributes": {
        "actions": "",
        "routes": "",
        "created_at": "",
        "resource_uid": "",
        "links": "",
        "description": "",
        "name": "",
        "updated_at": ""
      },
      "description": "Grouped listing of Routes",
      "content_types": [
        "application/vnd.rightscale.route_table"
      ]
    },
    "description": "Grouped listing of Routes"
  },
  "Networks": {
    "methods": {
      "create": {
        "status_code": "201 Created",
        "access_rules": [
          "security_manager"
        ],
        "parameters": {
          "network[name]": {
            "class": "String",
            "non_blank": true,
            "description": "The name for the Network."
          },
          "network[cidr_block]": {
            "class": "String",
            "non_blank": true,
            "description": "The range of IP addresses for the Network. This parameter is required for Amazon clouds."
          },
          "network[cloud_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The Cloud to create the Network in",
            "mandatory": true
          },
          "network[description]": {
            "class": "String",
            "non_blank": true,
            "description": "The description for the Network."
          },
          "network": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "network[instance_tenancy]": {
            "class": "String",
            "non_blank": true,
            "description": "The launch policy for AWS instances in the Network. Specify 'default' to allow instances to decide their own launch policy. Specify 'dedicated' to force all instances to be launched as 'dedicated'."
          }
        },
        "route": "POST   /api/networks(.:format)?                 {:action=>\"create\", :controller=>\"networks\"}",
        "description": "Creates a new network."
      },
      "destroy": {
        "status_code": "204 No Content",
        "access_rules": [
          "security_manager"
        ],
        "parameters": {
        },
        "route": "DELETE /api/networks/:id(.:format)?             {:action=>\"destroy\", :controller=>\"networks\"}",
        "description": "Deletes the given network(s)."
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "filters": {
          "resource_uid": {
            "description": "Resource Unique Identifier for the Network to filter on."
          },
          "name": {
            "partial_match": true,
            "description": "Name of the Network to filter on.",
            "column": "name"
          },
          "cloud_href": {
            "description": "Cloud href to filter on."
          },
          "cidr_block": {
            "description": "Network's CIDR to filter on."
          }
        },
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "route": "GET    /api/networks(.:format)?                 {:action=>\"index\", :controller=>\"networks\"}",
        "description": "Lists networks in this account.",
        "example_resource": {
          "cidr_block": "10.0.0.0/32",
          "is_default": false,
          "instance_tenancy": "INSTANCE_TENANCY_1564072918",
          "resource_uid": "RESOURCE_1500345408",
          "links": [
            {"rel":"self","href":"/api/networks/RESOURCE_1500345408;3114453805"},
            {"rel":"cloud","href":"/api/clouds/888"}
          ],
          "description": "DESCRIPTION_2498136175",
          "name": "NAME_2522192592"
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
        },
        "route": "GET    /api/networks/:id(.:format)?             {:action=>\"show\", :controller=>\"networks\"}",
        "description": "Shows attributes of a single network.",
        "example_resource": {
          "cidr_block": "10.0.0.0/32",
          "is_default": false,
          "instance_tenancy": "INSTANCE_TENANCY_1564072918",
          "resource_uid": "RESOURCE_1500345408",
          "links": [
            {"rel":"self","href":"/api/networks/RESOURCE_1500345408;3114453805"},
            {"rel":"cloud","href":"/api/clouds/888"}
          ],
          "description": "DESCRIPTION_2498136175",
          "name": "NAME_2522192592"
        }
      },
      "update": {
        "status_code": "204 No Content",
        "access_rules": [
          "security_manager"
        ],
        "parameters": {
          "network[name]": {
            "class": "String",
            "non_blank": true,
            "description": "The updated name for the Network."
          },
          "network[route_table_href]": {
            "class": "String",
            "non_blank": true,
            "description": "Sets the default RouteTable for this Network."
          },
          "network[description]": {
            "class": "String",
            "non_blank": true,
            "description": "The updated description for the Network."
          },
          "network": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          }
        },
        "route": "PUT    /api/networks/:id(.:format)?             {:action=>\"update\", :controller=>\"networks\"}",
        "description": "Updates the given network."
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself",
        "cloud": "Href of the Cloud the network is in",
        "default_route_table": "The href of the RouteTable that is currently active"
      },
      "attributes": {
        "cidr_block": "",
        "actions": "",
        "is_default": "",
        "instance_tenancy": "",
        "resource_uid": "",
        "links": "",
        "description": "",
        "name": ""
      },
      "description": "A Network is a logical grouping of network devices.",
      "content_types": [
        "application/vnd.rightscale.network"
      ]
    },
    "description": "A Network is a logical grouping of network devices."
  },
  "MultiCloudImageSettings": {
    "methods": {
      "create": {
        "status_code": "201 Created",
        "access_rules": [
          "designer"
        ],
        "parameters": {
          "multi_cloud_image_setting[instance_type_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the instance type. Mandatory if specifying cloud_href."
          },
          "multi_cloud_image_setting[cloud_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the Cloud to use."
          },
          "multi_cloud_image_setting[image_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the Image to use. Mandatory if specifying cloud_href."
          },
          "multi_cloud_image_setting[kernel_image_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the kernel image. Optional if specifying cloud_href."
          },
          "multi_cloud_image_setting[user_data]": {
            "class": "String",
            "non_blank": true,
            "description": "User data that RightScale automatically passes to your instance at boot time."
          },
          "multi_cloud_image_setting[ramdisk_image_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the ramdisk image. Optional if specifying cloud_href."
          },
          "multi_cloud_image_setting": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          }
        },
        "route": "POST   /api/multi_cloud_images/:multi_cloud_image_id/settings(.:format)? {:action=>\"create\", :controller=>\"multi_cloud_image_settings\"}",
        "description": "Creates a new setting for an existing MultiCloudImage."
      },
      "destroy": {
        "status_code": "204 No Content",
        "access_rules": [
          "designer"
        ],
        "parameters": {
        },
        "route": "DELETE /api/multi_cloud_images/:multi_cloud_image_id/settings/:id(.:format)? {:action=>\"destroy\", :controller=>\"multi_cloud_image_settings\"}",
        "description": "Deletes a MultiCloudImage setting."
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "filters": {
          "multi_cloud_image_href": {
            "description": "The MultiCloudImage href to filter on.",
            "column": "multi_cloud_image_id"
          },
          "cloud_href": {
            "description": "The Cloud href to filter on.",
            "column": "cloud_id"
          }
        },
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "route": "GET    /api/multi_cloud_images/:multi_cloud_image_id/settings(.:format)? {:action=>\"index\", :controller=>\"multi_cloud_image_settings\"}",
        "description": "Lists the MultiCloudImage settings.",
        "example_resource": {
          "actions": [

          ],
          "links": [
            {"rel":"self","href":"/api/multi_cloud_images/4/settings/3"},
            {"rel":"image","href":"/api/clouds/888/images/RS_ID_3221952765"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"instance_type","href":"/api/clouds/888/instance_types/RESOURCE_2803499902;RAND"},
            {"rel":"multi_cloud_image","href":"/api/multi_cloud_images/4"}
          ]
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
        },
        "route": "GET    /api/multi_cloud_images/:multi_cloud_image_id/settings/:id(.:format)? {:action=>\"show\", :controller=>\"multi_cloud_image_settings\"}",
        "description": "Show information about a single MultiCloudImage setting.",
        "example_resource": {
          "actions": [

          ],
          "links": [
            {"rel":"self","href":"/api/multi_cloud_images/4/settings/3"},
            {"rel":"image","href":"/api/clouds/888/images/RS_ID_3221952765"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"instance_type","href":"/api/clouds/888/instance_types/RESOURCE_2803499902;RAND"},
            {"rel":"multi_cloud_image","href":"/api/multi_cloud_images/4"}
          ]
        }
      },
      "update": {
        "status_code": "204 No Content",
        "access_rules": [
          "designer"
        ],
        "parameters": {
          "multi_cloud_image_setting[instance_type_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the instance type."
          },
          "multi_cloud_image_setting[cloud_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the Cloud to use."
          },
          "multi_cloud_image_setting[image_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the Image to use."
          },
          "multi_cloud_image_setting[kernel_image_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the kernel image."
          },
          "multi_cloud_image_setting[user_data]": {
            "class": "String",
            "non_blank": true,
            "description": "User data that RightScale automatically passes to your instance at boot time."
          },
          "multi_cloud_image_setting[ramdisk_image_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the ramdisk image."
          },
          "multi_cloud_image_setting": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          }
        },
        "route": "PUT    /api/multi_cloud_images/:multi_cloud_image_id/settings/:id(.:format)? {:action=>\"update\", :controller=>\"multi_cloud_image_settings\"}",
        "description": "Updates a settings for a MultiCLoudImage."
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself",
        "multi_cloud_image": "Associated multi cloud image",
        "cloud": "Associated cloud",
        "instance_type": "Associated instance type",
        "image": "Associated image"
      },
      "attributes": {
        "actions": "",
        "links": ""
      },
      "description": "A MultiCloudImageSetting defines which\n settings should be used when a server is launched in a cloud.",
      "content_types": [
        "application/vnd.rightscale.multi_cloud_image_setting"
      ]
    },
    "description": "A MultiCloudImageSetting defines which\nsettings should be used when a server is launched in a cloud."
  },
  "InstanceTypes": {
    "methods": {
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "filters": {
          "resource_uid": {
            "description": "Resource Unique IDentifier for the Instance Type to filter on."
          },
          "name": {
            "partial_match": true,
            "description": "Name of the Instance Type to filter on."
          },
          "cpu_architecture": {
            "partial_match": true,
            "description": "The CPU architecture of the Instance Type to filter on."
          },
          "description": {
            "partial_match": true,
            "description": "The Instance Type description to filter on."
          }
        },
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default"
            ]
          },
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "route": "GET    /api/clouds/:cloud_id/instance_types(.:format)? {:action=>\"index\", :controller=>\"instance_types\"}",
        "description": "Lists instance types.",
        "example_resource": {
          "actions": [

          ],
          "local_disk_size": null,
          "memory": null,
          "resource_uid": "RESOURCE_2674034120",
          "links": [
            {"rel":"self","href":"/api/clouds/888/instance_types/ABC1880079293DEF"},
            {"rel":"cloud","href":"/api/clouds/888"}
          ],
          "local_disks": null,
          "cpu_speed": null,
          "description": "description_2308695524",
          "name": "NAME_3581453380",
          "cpu_count": null,
          "cpu_architecture": null
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default"
            ]
          }
        },
        "route": "GET    /api/clouds/:cloud_id/instance_types/:id(.:format)? {:action=>\"show\", :controller=>\"instance_types\"}",
        "description": "Displays information about a single Instance type.",
        "example_resource": {
          "actions": [

          ],
          "local_disk_size": null,
          "memory": null,
          "resource_uid": "RESOURCE_2674034120",
          "links": [
            {"rel":"self","href":"/api/clouds/888/instance_types/ABC1880079293DEF"},
            {"rel":"cloud","href":"/api/clouds/888"}
          ],
          "local_disks": null,
          "cpu_speed": null,
          "description": "description_2308695524",
          "name": "NAME_3581453380",
          "cpu_count": null,
          "cpu_architecture": null
        }
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself",
        "cloud": "Associated cloud"
      },
      "attributes": {
        "actions": "",
        "local_disk_size": "",
        "memory": "",
        "resource_uid": "",
        "links": "",
        "local_disks": "",
        "cpu_speed": "",
        "description": "",
        "name": "",
        "cpu_count": "",
        "cpu_architecture": ""
      },
      "description": "An InstanceType represents a basic hardware configuration for an Instance.\n\nCombining all possible configurations of hardware into a smaller, well-known set of options makes instances easier to manage, and allows better allocation efficiency into physical hosts.",
      "content_types": [
        "application/vnd.rightscale.instance_type"
      ]
    },
    "description": null
  },
  "Inputs": {
    "methods": {
      "multi_update": {
        "status_code": "204 No Content",
        "access_rules": [
          "actor"
        ],
        "parameters": {
          "inputs": {
            "class": "Enumerable",
            "non_blank": true,
            "mandatory": true
          },
          "inputs[][value]": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "The value to be updated with. Should be of the form 'text:my_value' or 'cred:MY_CRED' etc."
          },
          "inputs[][name]": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "The name of the input to be updated."
          },
          "inputs[*]": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "The format used for passing 2.0-style Inputs. The key is the name of the input, and the value is the value to assign to the input."
          }
        },
        "route": "PUT    /api/clouds/:cloud_id/instances/:instance_id/inputs/multi_update(.:format)? {:action=>\"multi_update\", :controller=>\"inputs\"}PUT    /api/deployments/:deployment_id/inputs/multi_update(.:format)? {:action=>\"multi_update\", :controller=>\"inputs\"}PUT    /api/server_templates/:server_template_id/inputs/multi_update(.:format)? {:action=>\"multi_update\", :controller=>\"inputs\"}",
        "description": "Performs a bulk update of inputs on the specified resource.\n\nIf an input exists with the same name, its value will be updated. If an input does not\nexist with a specified name, it will be ignored.\n\nInput values are represented as strings.\n\nThere are two notations for inputs:\n\n1.0 notation - The deprecated notation used in API 1.0 and in 1.5\n    2.0 notation - The new notation that is partially supported in API 1.5, and will\n        be the only notation supported in 2.0\n\nAlthough the two notations are similar, they have a few important differences, in particular:\n\n\n  With 2.0 notation, values MUST begin with a prefix identifying their type, followed\n  by a colon (example: \"text:foo\"). With 1.0 notation, unprefixed values are generally\n  taken to be text-type.\n  With 2.0 notation, a sentinel value \"inherit\" is used to express that an input\n  should use an inherited value. With 1.0 notation the empty string was used to express\n  the same thing. (Due to requirement 1, empty string is no longer a valid input.)\n  With 2.0 notation, each element of an array is an entire input value; arrays can\n  contain cred, env, or even other arrays. With 1.0 notation, array elements are\n  implicitly text values and there is no way to specify anything else.Note that the UI\n  does not support complex-valued arrays; please use this feature with caution!\n\n\nThe following types of inputs are supported:\n\n\n\nType\nFormat\n1.0 Example(s)\n2.0 Example(s)\n\n\nText string\n&lt;value&gt; (1.0 only)text:&lt;value&gt;\nfootext:footext:multi word value\ntext:footext:multi word value\n\n\nBlank string(input is present but its value is empty-string)\ntext:blank (2.0 only)\ntext:\nblank\n\n\nIgnore (input is not present)\nignore$ignore (1.0 only)ignore:$ignore (1.0 only)\nignore$ignoreignore:$ignore\nignore\n\n\nDynamically-substituted environment value\nenv:&lt;value&gt;env:&lt;component&gt;:&lt;value&gt;\nenv:MY_ENV_VARenv:my_server:MY_ENV_VAR\nenv:MY_ENV_VARenv:my_server:MY_ENV_VAR\n\n\nCredential value\ncred:&lt;value&gt;\ncred:abcd1234wxyz\ncred:abcd1234wxyz\n\n\nPrivate SSH key\nkey:&lt;value&gt;key:&lt;value&gt;:&lt;cloud_id&gt;\nkey:1234abcd5678key:1234abcd5678:1\nkey:1234abcd5678key:1234abcd5678:1\n\n\nArray of values\narray:&lt;value&gt;,... (1.0 only)array:[\"&lt;type&gt;:&lt;value&gt;\",...] (2.0 only)\narray:x,y(NOTE: 1.0 only supports text inputs for arrays)\narray:[\"text:v1\",\"text:v2\"]array:[\"text:x\",\"env:server_x:MY_VAR\"]\n\n\n\nThe legacy format for providing inputs is as an array of name-value pairs\n(ex: -d inputs[][name]=\"MY_INPUT\" -d inputs[][value]=\"text:foobar\"), however\nthe new format is supported for inputs provided as a hash\n(ex: -d inputs[MY_INPUT]=\"text:foobar\").\n\nIf the old format is used, the input is parsed using 1.0 semantics.\nIf the new format is used, the input is parsed using the new 2.0 semantics."
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "filters": {
        },
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default",
              "inputs_2_0"
            ]
          }
        },
        "route": "GET    /api/clouds/:cloud_id/instances/:instance_id/inputs(.:format)? {:action=>\"index\", :controller=>\"inputs\"}GET    /api/deployments/:deployment_id/inputs(.:format)? {:action=>\"index\", :controller=>\"inputs\"}GET    /api/server_templates/:server_template_id/inputs(.:format)? {:action=>\"index\", :controller=>\"inputs\"}",
        "description": "Retrieves the full list of existing inputs of the specified resource.",
        "example_resource": {
          "value": "text:",
          "name": "input_definition_2810368142"
        }
      }
    },
    "media_type": {
      "links": {
      },
      "attributes": {
        "value": "",
        "name": ""
      },
      "description": "Inputs help extract dynamic information, usually specified at runtime, from repeatable configuration operations that can be codified.\n  Inputs are variables defined in and used by RightScripts/Recipes. The two main attributes of an input are 'name' and 'value'. The 'name'\n  identifies the input and the 'value', although a string encodes what type it is. It could be a text encoded as 'text:myvalue' or a credential\n  encoded as 'cred:MY_CRED' or a key etc. Please see support.rightscale.com for more info on input hierarchies and their different types.",
      "content_types": [
        "application/vnd.rightscale.input"
      ]
    },
    "description": "Inputs help extract dynamic information, usually specified at runtime, from repeatable configuration operations that can be codified.\nInputs are variables defined in and used by RightScripts/Recipes. The two main attributes of an input are 'name' and 'value'. The 'name'\nidentifies the input and the 'value', although a string encodes what type it is. It could be a text encoded as 'text:myvalue' or a credential\nencoded as 'cred:MY_CRED' or a key etc. Please see support.rightscale.com for more info on input hierarchies and their different types."
  },
  "HealthCheck": {
    "methods": {
      "index": {
        "status_code": "200 OK",
        "access_rules": {
        },
        "filters": {
        },
        "parameters": {
        },
        "route": "GET    /api/health-check/                       {:action=>\"index\", :controller=>\"health_check\"}",
        "description": "Check health of RightApi controllers"
      }
    },
    "media_type": null,
    "description": null
  },
  "Credentials": {
    "methods": {
      "create": {
        "status_code": "201 Created",
        "access_rules": [
          "actor"
        ],
        "parameters": {
          "credential[description]": {
            "class": "String",
            "non_blank": false,
            "description": "The description of the Credential to be created."
          },
          "credential[name]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The name of the Credential to be created."
          },
          "credential[value]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The value of the Credential to be created."
          },
          "credential": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          }
        },
        "route": "POST   /api/credentials(.:format)?              {:action=>\"create\", :controller=>\"credentials\"}",
        "description": "Creates a new Credential with the given parameters."
      },
      "destroy": {
        "status_code": "204 No Content",
        "access_rules": [
          "actor"
        ],
        "parameters": {
        },
        "route": "DELETE /api/credentials/:id(.:format)?          {:action=>\"destroy\", :controller=>\"credentials\"}",
        "description": "Deletes a Credential."
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "filters": {
          "name": {
            "partial_match": true,
            "description": "Name of the Credentials to filter on.",
            "column": "name"
          },
          "description": {
            "partial_match": true,
            "description": "Description of the Credentials to filter on.",
            "column": "description"
          }
        },
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default",
              "sensitive"
            ]
          },
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "route": "GET    /api/credentials(.:format)?              {:action=>\"index\", :controller=>\"credentials\"}",
        "description": "Lists the Credentials available to this account.",
        "example_resource": {
          "created_at": "2015/01/13 00:03:03 +0000",
          "links": [
            {"rel":"self","href":"/api/credentials/3"}
          ],
          "description": null,
          "name": "CREDENTIAL_1529092446",
          "updated_at": "2015/01/13 00:03:03 +0000"
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default",
              "sensitive"
            ]
          }
        },
        "route": "GET    /api/credentials/:id(.:format)?          {:action=>\"show\", :controller=>\"credentials\"}",
        "description": "Show information about a single Credential. NOTE: Credential values may be updated through the API, but values cannot be retrieved via the API.",
        "example_resource": {
          "created_at": "2015/01/13 00:03:03 +0000",
          "links": [
            {"rel":"self","href":"/api/credentials/3"}
          ],
          "description": null,
          "name": "CREDENTIAL_1529092446",
          "updated_at": "2015/01/13 00:03:03 +0000"
        }
      },
      "update": {
        "status_code": "204 No Content",
        "access_rules": [
          "actor"
        ],
        "parameters": {
          "credential[description]": {
            "class": "String",
            "non_blank": false,
            "description": "The updated description of the Credential."
          },
          "credential[name]": {
            "class": "String",
            "non_blank": true,
            "description": "The updated name of the Credential."
          },
          "credential[value]": {
            "class": "String",
            "non_blank": true,
            "description": "The updated value of the Credential."
          },
          "credential": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          }
        },
        "route": "PUT    /api/credentials/:id(.:format)?          {:action=>\"update\", :controller=>\"credentials\"}",
        "description": "Updates attributes of a Credential."
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself"
      },
      "attributes": {
        "value": "",
        "created_at": "",
        "links": "",
        "description": "",
        "name": "",
        "updated_at": ""
      },
      "description": "A Credential provides an abstraction for sensitive textual information,\n  such as passphrases or cloud credentials, whose value should be encrypted\n  when stored in the database and not generally shown in the UI or through the\n  API. Credentials may then be used as inputs of type \"Cred\" in RightScripts\n  or Chef recipes. NOTE: Credential values may be updated through the API, but\n  values cannot be retrieved via the API.",
      "content_types": [
        "application/vnd.rightscale.credential"
      ]
    },
    "description": "A Credential provides an abstraction for sensitive textual information,\nsuch as passphrases or cloud credentials, whose value should be encrypted\nwhen stored in the database and not generally shown in the UI or through the\nAPI. Credentials may then be used as inputs of type \"Cred\" in RightScripts\nor Chef recipes. NOTE: Credential values may be updated through the API, but\nvalues cannot be retrieved via the API."
  },
  "Tasks": {
    "methods": {
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer||instance"
        ],
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default",
              "extended"
            ]
          }
        },
        "route": "GET    /api/clouds/:cloud_id/instances/:instance_id/live/tasks/:id(.:format)? {:action=>\"show\", :controller=>\"tasks\"}",
        "description": "Displays information of a given task within the context of an instance. \n\nFUTURE: In addition to the generic \"summary\" and \"detail\" fields, we are planning to add specific lifecycle attributes that clearly\ndefine the current state of the task (i.e., queued, executing...). ",
        "example_resource": {
          "actions": [

          ],
          "summary": "test summary",
          "links": [
            {"rel":"self","href":"/api/clouds/888/instances/RESOURCE_1013526198;RAND/live/tasks/ae-7"}
          ]
        }
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself"
      },
      "attributes": {
        "actions": "",
        "detail": "",
        "summary": "",
        "links": ""
      },
      "description": "Tasks represent processes that happen (or have happened) asynchronously within the context of an Instance.\n\nAn example of a type of task is an operational script that runs in an instance.\n\nTask resources can be returned by certain API calls, such as Instances.run_executable, Backups.restore, and others.",
      "content_types": [
        "application/vnd.rightscale.task"
      ]
    },
    "description": "Tasks represent processes that happen (or have happened) asynchronously within the context of an Instance.\n\nAn example of a type of task is an operational script that runs in an instance.\n\nTask resources can be returned by certain API calls, such as Instances.run_executable, Backups.restore, and others."
  },
  "Servers": {
    "methods": {
      "clone": {
        "status_code": "201 Created",
        "access_rules": [
          "actor"
        ],
        "parameters": {
        },
        "route": "POST   /api/servers/:id/clone(.:format)?        {:action=>\"clone\", :controller=>\"servers\"}",
        "description": "Clones a given server."
      },
      "create": {
        "status_code": "201 Created",
        "access_rules": [
          "actor"
        ],
        "parameters": {
          "server[instance][cloud_specific_attributes][root_volume_type_uid]": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "The type of root volume for instance. Only available on clouds supporting root volume type."
          },
          "server[instance][cloud_specific_attributes][automatic_instance_store_mapping]": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "A flag indicating whether instance store mapping should be enabled. Not supported in all Clouds.",
            "valid_values": [
              "true",
              "false"
            ]
          },
          "server[instance][image_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the Image to use."
          },
          "server[instance][security_group_hrefs]": {
            "class": "Array",
            "non_blank": true,
            "description": "The hrefs of the security groups."
          },
          "server[instance][associate_public_ip_address]": {
            "class": "String",
            "non_blank": true,
            "description": "Specify whether or not you want a public IP assigned when this Instance is launched. Only applies to Network-enabled Instances. If this is not specified, it will default to true.",
            "mandatory": false,
            "valid_values": [
              "true",
              "false"
            ]
          },
          "server[instance][cloud_specific_attributes]": {
            "class": "Hash",
            "non_blank": true,
            "description": "Cloud specific attributes that have no generic rightscale abstraction"
          },
          "server[instance][datacenter_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the Datacenter / Zone."
          },
          "server[instance][inputs]": {
            "class": "Enumerable",
            "non_blank": true
          },
          "server": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "server[name]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The name of the Server."
          },
          "server[deployment_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the deployment to which the Server will be added."
          },
          "server[optimized]": {
            "class": "String",
            "non_blank": true,
            "description": "A flag indicating whether Instances of this Server should be optimized for high-performance volumes (e.g. Volumes supporting a specified number of IOPS). Not supported in all Clouds.",
            "valid_values": [
              "true",
              "false"
            ]
          },
          "server[instance]": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "server[instance][server_template_href]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The href of the Server Template."
          },
          "server[instance][multi_cloud_image_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the Multi Cloud Image to use."
          },
          "server[instance][subnet_hrefs]": {
            "class": "Array",
            "non_blank": true,
            "description": "The hrefs of the updated subnets."
          },
          "server[instance][instance_type_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the Instance Type."
          },
          "server[instance][placement_group_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the Placement Group."
          },
          "server[instance][cloud_specific_attributes][root_volume_size]": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "The size for root disk. Not supported in all Clouds."
          },
          "server[instance][cloud_specific_attributes][iam_instance_profile]": {
            "class": "String",
            "non_blank": false,
            "mandatory": false,
            "description": "The name or ARN of the IAM Instance Profile (IIP) to associate with the instance (Amazon only)"
          },
          "server[instance][inputs][*]": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "The format used for passing 2.0-style Inputs. The key is the name of the Input, and the value is the value to assign to the Input. For more details on 2.0-style Inputs, please see Inputs#multi_update."
          },
          "server[instance][ip_forwarding_enabled]": {
            "class": "String",
            "non_blank": true,
            "description": "Allows this Instance to send and receive network traffic when the source and destination IP addresses do not match the IP address of this Instance.",
            "mandatory": false,
            "valid_values": [
              "true",
              "false"
            ]
          },
          "server[instance][cloud_href]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The href of the cloud that the Server should be added to."
          },
          "server[instance][kernel_image_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the Kernel Image."
          },
          "server[instance][inputs][][value]": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "The value of that Input. Should be of the form 'text:my_value' or 'cred:MY_CRED' etc. This format is used for passing legacy 1.0-style Inputs. Will eventually be deprecated."
          },
          "server[instance][inputs][][name]": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "The Input name. This format is used for passing legacy 1.0-style Inputs. Will eventually be deprecated."
          },
          "server[instance][cloud_specific_attributes][root_volume_performance]": {
            "class": "String",
            "non_blank": true,
            "mandatory": false,
            "description": "The number of IOPS (I/O Operations Per Second) this root volume should support. Only available on clouds supporting performance provisioning."
          },
          "server[description]": {
            "class": "String",
            "non_blank": true,
            "description": "The Server description."
          },
          "server[instance][ssh_key_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the SSH key to use."
          },
          "server[instance][ramdisk_image_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the Ramdisk Image."
          },
          "server[instance][user_data]": {
            "class": "String",
            "non_blank": true,
            "description": "User data that RightScale automatically passes to your instance at boot time."
          }
        },
        "route": "POST   /api/servers(.:format)?                  {:action=>\"create\", :controller=>\"servers\"}POST   /api/deployments/:deployment_id/servers(.:format)? {:action=>\"create\", :controller=>\"servers\"}",
        "description": "Creates a new server, and configures its corresponding \"next\" instance with the received parameters."
      },
      "wrap_instance": {
        "status_code": "201 Created",
        "access_rules": [
          "actor"
        ],
        "parameters": {
          "server[instance][inputs]": {
            "class": "Enumerable",
            "non_blank": true
          },
          "server[instance][server_template_href]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The href of the Server Template."
          },
          "server[instance]": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "server[deployment_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the deployment to which the Server will be added."
          },
          "server[name]": {
            "class": "String",
            "non_blank": true,
            "description": "The name of the Server."
          },
          "server": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "server[instance][multi_cloud_image_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The href of the Multi Cloud Image to use."
          },
          "server[instance][href]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The href of the Instance around which the server should be created."
          },
          "server[instance][inputs][*]": {
            "class": "String",
            "non_blank": true,
            "description": "The format used for passing 2.0-style Inputs. The key is the name of the Input, and the value is the value to assign to the Input. For more details on 2.0-style Inputs, please see Inputs#multi_update."
          },
          "server[description]": {
            "class": "String",
            "non_blank": true,
            "description": "The Server description."
          }
        },
        "route": "POST   /api/servers/wrap_instance(.:format)?    {:action=>\"wrap_instance\", :controller=>\"servers\"}POST   /api/deployments/:deployment_id/servers/wrap_instance(.:format)? {:action=>\"wrap_instance\", :controller=>\"servers\"}",
        "description": "Wrap an existing instance and set current instance for new server"
      },
      "launch": {
        "status_code": null,
        "access_rules": {
        },
        "parameters": {
        },
        "route": "",
        "description": "Launches the \"next\" instance of this server. This function is equivalent to invoking the launch action on the\nURL of this servers next_instance. See Instances#launch for details."
      },
      "destroy": {
        "status_code": "204 No Content",
        "access_rules": [
          "actor"
        ],
        "parameters": {
        },
        "route": "DELETE /api/servers/:id(.:format)?              {:action=>\"destroy\", :controller=>\"servers\"}DELETE /api/deployments/:deployment_id/servers/:id(.:format)? {:action=>\"destroy\", :controller=>\"servers\"}",
        "description": "Deletes a given server."
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "filters": {
          "name": {
            "partial_match": true,
            "description": "The name of the Server to filter on.",
            "column": "servers.nickname"
          },
          "cloud_href": {
            "description": "The href of the Cloud to filter on."
          },
          "deployment_href": {
            "description": "The href of the Deployment to filter on."
          }
        },
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default",
              "instance_detail"
            ]
          },
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "route": "GET    /api/servers(.:format)?                  {:action=>\"index\", :controller=>\"servers\"}GET    /api/deployments/:deployment_id/servers(.:format)? {:action=>\"index\", :controller=>\"servers\"}",
        "description": "Lists servers.\n\nBy using the available filters, it is possible to retrieve servers that have common characteristics.\nFor example, one can list:\n\n\nservers that have names that contain \"app_server\"\nall servers of a given deployment\n\n\nFor more filters, please see the 'index' action on 'Instances' resource as most of the attributes belong to\na 'current_instance' than to a server.",
        "example_resource": {
          "actions": [
            {
              "rel": "terminate"
            },
            {
              "rel": "clone"
            }
          ],
          "state": "operational",
          "created_at": "2015/01/13 00:02:47 +0000",
          "links": [
            {"rel":"self","href":"/api/servers/5"},
            {"rel":"deployment","href":"/api/deployments/16"},
            {"rel":"current_instance","href":"/api/clouds/888/instances/RESOURCE_1013526198;RAND"},
            {"rel":"next_instance","href":"/api/clouds/888/instances/ERT8BGN199025"},
            {"rel":"alert_specs","href":"/api/servers/5/alert_specs"},
            {"rel":"alerts","href":"/api/servers/5/alerts"}
          ],
          "description": "description_108867085",
          "name": "nickname-3964222768",
          "updated_at": "2015/01/13 00:02:48 +0000"
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default",
              "instance_detail"
            ]
          }
        },
        "route": "GET    /api/servers/:id(.:format)?              {:action=>\"show\", :controller=>\"servers\"}GET    /api/deployments/:deployment_id/servers/:id(.:format)? {:action=>\"show\", :controller=>\"servers\"}",
        "description": "Shows the information of a single server.",
        "example_resource": {
          "actions": [
            {
              "rel": "terminate"
            },
            {
              "rel": "clone"
            }
          ],
          "state": "operational",
          "created_at": "2015/01/13 00:02:47 +0000",
          "links": [
            {"rel":"self","href":"/api/servers/5"},
            {"rel":"deployment","href":"/api/deployments/16"},
            {"rel":"current_instance","href":"/api/clouds/888/instances/RESOURCE_1013526198;RAND"},
            {"rel":"next_instance","href":"/api/clouds/888/instances/ERT8BGN199025"},
            {"rel":"alert_specs","href":"/api/servers/5/alert_specs"},
            {"rel":"alerts","href":"/api/servers/5/alerts"}
          ],
          "description": "description_108867085",
          "name": "nickname-3964222768",
          "updated_at": "2015/01/13 00:02:48 +0000"
        }
      },
      "update": {
        "status_code": "204 No Content",
        "access_rules": [
          "actor"
        ],
        "parameters": {
          "server[root_volume_size]": {
            "class": "String",
            "non_blank": true,
            "description": "The size for root disk. Not supported in all Clouds."
          },
          "server[automatic_instance_store_mapping]": {
            "class": "String",
            "non_blank": true,
            "description": "A flag indicating whether instance store mapping should be enabled. Not supported in all Clouds.",
            "valid_values": [
              "true",
              "false"
            ]
          },
          "server[optimized]": {
            "class": "String",
            "non_blank": true,
            "description": "A flag indicating whether Instances of this Server should be optimized for high-performance volumes (e.g. Volumes supporting a specified number of IOPS). Not supported in all Clouds.",
            "valid_values": [
              "true",
              "false"
            ]
          },
          "server[name]": {
            "class": "String",
            "non_blank": true,
            "description": "The updated server name."
          },
          "server": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "server[description]": {
            "class": "String",
            "non_blank": true,
            "description": "The updated description for the server."
          }
        },
        "route": "PUT    /api/servers/:id(.:format)?              {:action=>\"update\", :controller=>\"servers\"}PUT    /api/deployments/:deployment_id/servers/:id(.:format)? {:action=>\"update\", :controller=>\"servers\"}",
        "description": "Updates attributes of a single server."
      },
      "terminate": {
        "status_code": null,
        "access_rules": {
        },
        "parameters": {
        },
        "route": "",
        "description": "Terminates the current instance of this server. This function is equivalent to invoking the terminate action on the\nURL of this servers current_instance. See Instances#terminate for details."
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself",
        "deployment": "Associated deployment",
        "next_instance": "Associated next instance",
        "current_instance": "Associated current instance",
        "alerts": "Associated Alerts",
        "alert_specs": "Associated AlertSpecs"
      },
      "attributes": {
        "actions": "",
        "next_instance": "",
        "optimized": "",
        "state": "",
        "created_at": "",
        "current_instance": "",
        "links": "",
        "description": "",
        "name": "",
        "updated_at": ""
      },
      "description": "Servers represent the notion of a server/machine from the RightScale's perspective. A Server, does not always\n  have a corresponding VM running or provisioned in a cloud. Some clouds use the word \"servers\" to refer to created VM's. These allocated VM's\n  are not called Servers in the RightScale API, they are called Instances.\n\nA Server always has a next_instance association, which will define the configuration to apply to a new instance when\n  the server is launched or started (starting servers is not yet supported through this API).\n  Once a Server is launched/started a current_instance relationship will exist. \n  Accessing the current_instance of a server results in immediate runtime modification of this running server. \n  Changes to the next_instance association prepares the\n  configuration for the next instance launch/start (therefore they have no effect until such operation is performed).",
      "content_types": [
        "application/vnd.rightscale.server"
      ]
    },
    "description": "Servers represent the notion of a server/machine from the RightScale's perspective. A Server, does not always\nhave a corresponding VM running or provisioned in a cloud. Some clouds use the word \"servers\" to refer to created VM's. These allocated VM's\nare not called Servers in the RightScale API, they are called Instances.\n\nA Server always has a next_instance association, which will define the configuration to apply to a new instance when\nthe server is launched or started (starting servers is not yet supported through this API).\nOnce a Server is launched/started a current_instance relationship will exist.\nAccessing the current_instance of a server results in immediate runtime modification of this running server.\nChanges to the next_instance association prepares the\nconfiguration for the next instance launch/start (therefore they have no effect until such operation is performed)."
  },
  "Publications": {
    "methods": {
      "import": {
        "status_code": "201 Created",
        "access_rules": [
          "designer"
        ],
        "parameters": {
        },
        "route": "POST   /api/publications/:id/import(.:format)?  {:action=>\"import\", :controller=>\"publications\"}",
        "description": "Imports the given publication and its subordinates to this account.\nOnly non-HEAD revisions that are shared with the account can be imported."
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "filters": {
          "name": {
            "partial_match": true,
            "description": "The name to filter on."
          },
          "revision": {
            "description": "The revision to filter on.",
            "column": "version"
          },
          "publisher": {
            "partial_match": true,
            "description": "The publisher to filter on."
          },
          "description": {
            "partial_match": true,
            "description": "The description to filter on."
          }
        },
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default"
            ]
          },
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "route": "GET    /api/publications(.:format)?             {:action=>\"index\", :controller=>\"publications\"}",
        "description": "Lists the publications available to this account. Only non-HEAD revisions are possible.",
        "example_resource": {
          "revision": 5,
          "actions": [
            {
              "rel": "import"
            }
          ],
          "content_type": "ServerTemplate",
          "revision_notes": "REVISION_NOTES 3566979068",
          "publisher": "org_3350765616",
          "commit_message": "A committed revision",
          "created_at": 1421107369,
          "links": [
            {"rel":"self","href":"/api/publications/1"},
            {"rel":"lineage","href":"/api/publication_lineages/1"}
          ],
          "description": "DESCRIPTION_2715680741",
          "name": "NAME_1754995774",
          "updated_at": 1421107369
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default"
            ]
          }
        },
        "route": "GET    /api/publications/:id(.:format)?         {:action=>\"show\", :controller=>\"publications\"}",
        "description": "Show information about a single publication. Only non-HEAD revisions are possible.",
        "example_resource": {
          "revision": 5,
          "actions": [
            {
              "rel": "import"
            }
          ],
          "content_type": "ServerTemplate",
          "revision_notes": "REVISION_NOTES 3566979068",
          "publisher": "org_3350765616",
          "commit_message": "A committed revision",
          "created_at": 1421107369,
          "links": [
            {"rel":"self","href":"/api/publications/1"},
            {"rel":"lineage","href":"/api/publication_lineages/1"}
          ],
          "description": "DESCRIPTION_2715680741",
          "name": "NAME_1754995774",
          "updated_at": 1421107369
        }
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself",
        "lineage": "Href of Publication Lineage"
      },
      "attributes": {
        "revision": "",
        "actions": "",
        "content_type": "",
        "revision_notes": "",
        "publisher": "",
        "commit_message": "",
        "created_at": "",
        "links": "",
        "description": "",
        "name": "",
        "updated_at": ""
      },
      "description": "A Publication is a revisioned component shared with a set of Account Groups.\n  If shared with your account, it can be imported in to your account.",
      "content_types": [
        "application/vnd.rightscale.publication"
      ]
    },
    "description": "A Publication is a revisioned component shared with a set of Account Groups.\nIf shared with your account, it can be imported in to your account."
  },
  "Alerts": {
    "methods": {
      "disable": {
        "status_code": "204 No Content",
        "access_rules": [
          "actor||instance"
        ],
        "parameters": {
        },
        "route": "POST   /api/clouds/:cloud_id/instances/:instance_id/alerts/:id/disable(.:format)? {:action=>\"disable\", :controller=>\"alerts\"}POST   /api/servers/:server_id/alerts/:id/disable(.:format)? {:action=>\"disable\", :controller=>\"alerts\"}POST   /api/server_arrays/:server_array_id/alerts/:id/disable(.:format)? {:action=>\"disable\", :controller=>\"alerts\"}POST   /api/deployments/:deployment_id/alerts/:id/disable(.:format)? {:action=>\"disable\", :controller=>\"alerts\"}POST   /api/alerts/:id/disable(.:format)?       {:action=>\"disable\", :controller=>\"alerts\"}",
        "description": "Disables the Alert indefinitely. Idempotent."
      },
      "quench": {
        "status_code": "204 No Content",
        "access_rules": [
          "actor||instance"
        ],
        "parameters": {
          "duration": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The time period in seconds to suppress Alert from being triggered."
          }
        },
        "route": "POST   /api/clouds/:cloud_id/instances/:instance_id/alerts/:id/quench(.:format)? {:action=>\"quench\", :controller=>\"alerts\"}POST   /api/servers/:server_id/alerts/:id/quench(.:format)? {:action=>\"quench\", :controller=>\"alerts\"}POST   /api/server_arrays/:server_array_id/alerts/:id/quench(.:format)? {:action=>\"quench\", :controller=>\"alerts\"}POST   /api/deployments/:deployment_id/alerts/:id/quench(.:format)? {:action=>\"quench\", :controller=>\"alerts\"}POST   /api/alerts/:id/quench(.:format)?        {:action=>\"quench\", :controller=>\"alerts\"}",
        "description": "Suppresses the Alert from being triggered for a given time period. Idempotent."
      },
      "enable": {
        "status_code": "204 No Content",
        "access_rules": [
          "actor||instance"
        ],
        "parameters": {
        },
        "route": "POST   /api/clouds/:cloud_id/instances/:instance_id/alerts/:id/enable(.:format)? {:action=>\"enable\", :controller=>\"alerts\"}POST   /api/servers/:server_id/alerts/:id/enable(.:format)? {:action=>\"enable\", :controller=>\"alerts\"}POST   /api/server_arrays/:server_array_id/alerts/:id/enable(.:format)? {:action=>\"enable\", :controller=>\"alerts\"}POST   /api/deployments/:deployment_id/alerts/:id/enable(.:format)? {:action=>\"enable\", :controller=>\"alerts\"}POST   /api/alerts/:id/enable(.:format)?        {:action=>\"enable\", :controller=>\"alerts\"}",
        "description": "Enables the Alert indefinitely. Idempotent."
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer||instance"
        ],
        "filters": {
          "alert_spec_href": {
            "description": "The href of the AlertSpec to filter on."
          },
          "status": {
            "include": "denorm_server_alert",
            "description": "The status to filter on. The status is case-sensitive and must be one of: 'enabled', 'disabled', 'quenched', or 'triggered'."
          }
        },
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default"
            ]
          },
          "filter": {
            "class": "Array",
            "non_blank": true,
            "mandatory": false
          }
        },
        "route": "GET    /api/clouds/:cloud_id/instances/:instance_id/alerts(.:format)? {:action=>\"index\", :controller=>\"alerts\"}GET    /api/servers/:server_id/alerts(.:format)? {:action=>\"index\", :controller=>\"alerts\"}GET    /api/server_arrays/:server_array_id/alerts(.:format)? {:action=>\"index\", :controller=>\"alerts\"}GET    /api/deployments/:deployment_id/alerts(.:format)? {:action=>\"index\", :controller=>\"alerts\"}GET    /api/alerts(.:format)?                   {:action=>\"index\", :controller=>\"alerts\"}",
        "description": "Lists all Alerts.",
        "example_resource": {
          "actions": [
            {
              "rel": "quench"
            },
            {
              "rel": "disable"
            }
          ],
          "status": "enabled",
          "created_at": "2015/01/13 00:02:49 +0000",
          "links": [
            {"rel":"self","href":"/api/alerts/3"},
            {"rel":"instance","href":"/api/clouds/888/instances/RESOURCE_1013526198;RAND"},
            {"rel":"alert_spec","href":"/api/alert_specs/3"}
          ],
          "updated_at": "2015/01/13 00:02:49 +0000"
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer||instance"
        ],
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default"
            ]
          }
        },
        "route": "GET    /api/clouds/:cloud_id/instances/:instance_id/alerts/:id(.:format)? {:action=>\"show\", :controller=>\"alerts\"}GET    /api/servers/:server_id/alerts/:id(.:format)? {:action=>\"show\", :controller=>\"alerts\"}GET    /api/server_arrays/:server_array_id/alerts/:id(.:format)? {:action=>\"show\", :controller=>\"alerts\"}GET    /api/deployments/:deployment_id/alerts/:id(.:format)? {:action=>\"show\", :controller=>\"alerts\"}GET    /api/alerts/:id(.:format)?               {:action=>\"show\", :controller=>\"alerts\"}",
        "description": "Shows the attributes of a specified Alert.",
        "example_resource": {
          "actions": [
            {
              "rel": "quench"
            },
            {
              "rel": "disable"
            }
          ],
          "status": "enabled",
          "created_at": "2015/01/13 00:02:49 +0000",
          "links": [
            {"rel":"self","href":"/api/alerts/3"},
            {"rel":"instance","href":"/api/clouds/888/instances/RESOURCE_1013526198;RAND"},
            {"rel":"alert_spec","href":"/api/alert_specs/3"}
          ],
          "updated_at": "2015/01/13 00:02:49 +0000"
        }
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself",
        "instance": "Associated running Instance",
        "alert_spec": "Associated AlertSpec"
      },
      "attributes": {
        "actions": "",
        "quenched_until": "",
        "status": "",
        "created_at": "",
        "links": "",
        "triggered_at": "",
        "updated_at": ""
      },
      "description": "An Alert represents an AlertSpec bound to a running Instance.",
      "content_types": [
        "application/vnd.rightscale.alert"
      ]
    },
    "description": "An Alert represents an AlertSpec bound to a running Instance."
  },
  "RunnableBindings": {
    "methods": {
      "create": {
        "status_code": "201 Created",
        "access_rules": [
          "designer"
        ],
        "parameters": {
          "runnable_binding[recipe]": {
            "class": "String",
            "non_blank": true,
            "description": "The Chef recipe name. Note: right_script_href cannot be specified when this param is given."
          },
          "runnable_binding[position]": {
            "class": "String",
            "non_blank": true,
            "description": "The position of the executable in the execution order. If not specified, will be added to the end. If specified, will be inserted in that location and cause all others to move down."
          },
          "runnable_binding[sequence]": {
            "class": "String",
            "non_blank": true,
            "description": "The sequence at which this executable should be run. Default is 'operational'.",
            "valid_values": [
              "boot",
              "decommission",
              "operational"
            ]
          },
          "runnable_binding[right_script_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The RightScript href. Note: recipe cannot be specified when this param is given."
          },
          "runnable_binding": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          }
        },
        "route": "POST   /api/server_templates/:server_template_id/runnable_bindings(.:format)? {:action=>\"create\", :controller=>\"runnable_bindings\"}",
        "description": "Bind an executable to the given ServerTemplate.\n\nAn executable may be either a RightScript or Chef Recipe.\n\nThe resource must be editable."
      },
      "multi_update": {
        "status_code": "204 No Content",
        "access_rules": [
          "designer"
        ],
        "parameters": {
          "runnable_bindings[][right_script_href]": {
            "class": "String",
            "non_blank": true,
            "description": "The updated RightScript href. Note: recipe cannot be specified when this param is given."
          },
          "runnable_bindings[][id]": {
            "regex": "/^\\d*$/",
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The ID of the RunnableBinding to update."
          },
          "runnable_bindings[][position]": {
            "class": "String",
            "non_blank": true,
            "description": "The updated position of the RunnableBinding in the execution order. If specified, will be inserted in that location and cause all others to move down."
          },
          "runnable_bindings[][recipe]": {
            "class": "String",
            "non_blank": true,
            "description": "The updated Chef recipe name. Note: right_script_href cannot be specified when this param is given."
          },
          "runnable_bindings[][sequence]": {
            "class": "String",
            "non_blank": true,
            "description": "The sequence at which this executable should be run.  Default is 'operational'.",
            "valid_values": [
              "boot",
              "decommission",
              "operational"
            ]
          },
          "runnable_bindings": {
            "class": "Array",
            "non_blank": true,
            "mandatory": true
          }
        },
        "route": "PUT    /api/server_templates/:server_template_id/runnable_bindings/multi_update(.:format)? {:action=>\"multi_update\", :controller=>\"runnable_bindings\"}",
        "description": "Update attributes for multiple bound executables.\n\nThe resource must be editable."
      },
      "destroy": {
        "status_code": "204 No Content",
        "access_rules": [
          "designer"
        ],
        "parameters": {
        },
        "route": "DELETE /api/server_templates/:server_template_id/runnable_bindings/:id(.:format)? {:action=>\"destroy\", :controller=>\"runnable_bindings\"}",
        "description": "Unbind an executable from the given resource.\n\nThe resource must be editable."
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "filters": {
        },
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default"
            ]
          }
        },
        "route": "GET    /api/server_templates/:server_template_id/runnable_bindings(.:format)? {:action=>\"index\", :controller=>\"runnable_bindings\"}",
        "description": "Lists the executables bound to the ServerTemplate.\n\nAn excutable may be either a RightScript or Chef Recipe.",
        "example_resource": {
          "actions": [

          ],
          "right_script": {
            "lineage": "https://testscale_1/api/acct/367396534/right_scripts/6",
            "revision": 0,
            "name": "NAME_2140802529",
            "id": "6"
          },
          "position": 2,
          "links": [
            {"rel":"self","href":"/api/server_templates/9/runnable_bindings/6"},
            {"rel":"server_template","href":"/api/server_templates/9"},
            {"rel":"right_script","href":"/api/right_scripts/6"}
          ],
          "sequence": "boot",
          "id": "6"
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default"
            ]
          }
        },
        "route": "GET    /api/server_templates/:server_template_id/runnable_bindings/:id(.:format)? {:action=>\"show\", :controller=>\"runnable_bindings\"}",
        "description": "Show information about a single executable binding.\n\nAn excutable may be either a RightScript or Chef Recipe.",
        "example_resource": {
          "actions": [

          ],
          "right_script": {
            "lineage": "https://testscale_1/api/acct/367396534/right_scripts/6",
            "revision": 0,
            "name": "NAME_2140802529",
            "id": "6"
          },
          "position": 2,
          "links": [
            {"rel":"self","href":"/api/server_templates/9/runnable_bindings/6"},
            {"rel":"server_template","href":"/api/server_templates/9"},
            {"rel":"right_script","href":"/api/right_scripts/6"}
          ],
          "sequence": "boot",
          "id": "6"
        }
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself",
        "right_script": "Href of associated RightScript (only returned if RightScript executable)",
        "server_template": "Href of associated ServerTemplate"
      },
      "attributes": {
        "actions": "",
        "recipe": "",
        "right_script": "",
        "position": "",
        "links": "",
        "sequence": "",
        "id": ""
      },
      "description": "A RunnableBinding represents an item in a runlist of a ServerTemplate. These items could be\n  RightScript or Chef recipes, and could be associated with any one of the three runlists of a \n  ServerTemplate (boot, operational, decommission).",
      "content_types": [
        "application/vnd.rightscale.runnable_binding"
      ]
    },
    "description": "A RunnableBinding represents an item in a runlist of a ServerTemplate. These items could be\nRightScript or Chef recipes, and could be associated with any one of the three runlists of a \nServerTemplate (boot, operational, decommission)."
  },
  "RecurringVolumeAttachments": {
    "methods": {
      "create": {
        "status_code": "201 Created",
        "access_rules": [
          "actor"
        ],
        "parameters": {
          "recurring_volume_attachment[storage_href]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The href of the volume or volume snapshot to be attached on launch of a next instance."
          },
          "recurring_volume_attachment[device]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The device location where the volume or volume snapshot will be mounted. Value must be of format /dev/xvd[bcefghij]. This is not reliable and will be deprecated."
          },
          "recurring_volume_attachment": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "recurring_volume_attachment[runnable_href]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The href of the server or server array to attach to."
          }
        },
        "route": "POST   /api/clouds/:cloud_id/recurring_volume_attachments(.:format)? {:action=>\"create\", :controller=>\"recurring_volume_attachments\"}POST   /api/clouds/:cloud_id/volumes/:volume_id/recurring_volume_attachments(.:format)? {:action=>\"create\", :controller=>\"recurring_volume_attachments\"}POST   /api/clouds/:cloud_id/volume_snapshots/:volume_snapshot_id/recurring_volume_attachments(.:format)? {:action=>\"create\", :controller=>\"recurring_volume_attachments\"}",
        "description": "Creates a new recurring volume attachment."
      },
      "destroy": {
        "status_code": "204 No Content",
        "access_rules": [
          "actor"
        ],
        "parameters": {
        },
        "route": "DELETE /api/clouds/:cloud_id/recurring_volume_attachments/:id(.:format)? {:action=>\"destroy\", :controller=>\"recurring_volume_attachments\"}DELETE /api/clouds/:cloud_id/volumes/:volume_id/recurring_volume_attachments/:id(.:format)? {:action=>\"destroy\", :controller=>\"recurring_volume_attachments\"}DELETE /api/clouds/:cloud_id/volume_snapshots/:volume_snapshot_id/recurring_volume_attachments/:id(.:format)? {:action=>\"destroy\", :controller=>\"recurring_volume_attachments\"}",
        "description": "Deletes a given recurring volume attachment."
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "filters": {
          "storage_href": {
            "polymorphic": true,
            "description": "The href of the volume or volume snapshot to filter on.",
            "column": "storage_rsid"
          },
          "runnable_href": {
            "polymorphic": true,
            "description": "The href of the server or server array to filter on."
          }
        },
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default"
            ]
          },
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "route": "GET    /api/clouds/:cloud_id/recurring_volume_attachments(.:format)? {:action=>\"index\", :controller=>\"recurring_volume_attachments\"}GET    /api/clouds/:cloud_id/volumes/:volume_id/recurring_volume_attachments(.:format)? {:action=>\"index\", :controller=>\"recurring_volume_attachments\"}GET    /api/clouds/:cloud_id/volume_snapshots/:volume_snapshot_id/recurring_volume_attachments(.:format)? {:action=>\"index\", :controller=>\"recurring_volume_attachments\"}",
        "description": "Lists all recurring volume attachments.",
        "example_resource": {
          "actions": [

          ],
          "status": "attached",
          "storage_type": "Volume",
          "runnable_type": "Server",
          "device_id": "device_id:9",
          "size": "1 GB",
          "created_at": "2015/01/13 00:02:48 +0000",
          "links": [
            {"rel":"self","href":"/api/clouds/888/recurring_volume_attachments/3"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"runnable","href":"/api/servers/5"},
            {"rel":"storage","href":"/api/clouds/888/volumes/RESOURCE_3296092522;3736693868"}
          ],
          "device": "/dev/xvdj",
          "name": "Recurring Volume Attachment between nickname-3964222768 and NAME_722035879",
          "updated_at": "2015/01/13 00:02:48 +0000"
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default"
            ]
          }
        },
        "route": "GET    /api/clouds/:cloud_id/recurring_volume_attachments/:id(.:format)? {:action=>\"show\", :controller=>\"recurring_volume_attachments\"}GET    /api/clouds/:cloud_id/volumes/:volume_id/recurring_volume_attachments/:id(.:format)? {:action=>\"show\", :controller=>\"recurring_volume_attachments\"}GET    /api/clouds/:cloud_id/volume_snapshots/:volume_snapshot_id/recurring_volume_attachments/:id(.:format)? {:action=>\"show\", :controller=>\"recurring_volume_attachments\"}",
        "description": "Displays information about a single recurring volume attachment.",
        "example_resource": {
          "actions": [

          ],
          "status": "attached",
          "storage_type": "Volume",
          "runnable_type": "Server",
          "device_id": "device_id:9",
          "size": "1 GB",
          "created_at": "2015/01/13 00:02:48 +0000",
          "links": [
            {"rel":"self","href":"/api/clouds/888/recurring_volume_attachments/3"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"runnable","href":"/api/servers/5"},
            {"rel":"storage","href":"/api/clouds/888/volumes/RESOURCE_3296092522;3736693868"}
          ],
          "device": "/dev/xvdj",
          "name": "Recurring Volume Attachment between nickname-3964222768 and NAME_722035879",
          "updated_at": "2015/01/13 00:02:48 +0000"
        }
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself",
        "storage": "Associated Volume/VolumeSnapshot",
        "cloud": "Associated cloud",
        "runnable": "Associated Server/ServerArray"
      },
      "attributes": {
        "actions": "",
        "status": "",
        "storage_type": "",
        "runnable_type": "",
        "device_id": "",
        "size": "",
        "created_at": "",
        "links": "",
        "device": "",
        "name": "",
        "updated_at": ""
      },
      "description": "A RecurringVolumeAttachment specifies a Volume/VolumeSnapshot to attach to a Server/ServerArray the next time an instance is launched.",
      "content_types": [
        "application/vnd.rightscale.recurring_volume_attachment"
      ]
    },
    "description": "A RecurringVolumeAttachment specifies a Volume/VolumeSnapshot to attach to a Server/ServerArray the next time an instance is launched."
  },
  "Preferences": {
    "methods": {
      "destroy": {
        "status_code": "204 No Content",
        "access_rules": [
          "observer"
        ],
        "parameters": {
        },
        "route": "DELETE /api/preferences/:id(.:format)?          {:action=>\"destroy\", :controller=>\"preferences\"}",
        "description": "Deletes the given preference."
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "filters": {
        },
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "route": "GET    /api/preferences(.:format)?              {:action=>\"index\", :controller=>\"preferences\"}",
        "description": "Lists all preferences.",
        "example_resource": {
          "contents": "my custom string",
          "created_at": "2015/01/13 00:03:03 +0000",
          "links": [
            {"rel":"self","href":"/api/preferences/my:custom:scope:custom_id"}
          ],
          "updated_at": "2015/01/13 00:03:03 +0000"
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
        },
        "route": "GET    /api/preferences/:id(.:format)?          {:action=>\"show\", :controller=>\"preferences\"}",
        "description": "Shows a single preference.",
        "example_resource": {
          "contents": "my custom string",
          "created_at": "2015/01/13 00:03:03 +0000",
          "links": [
            {"rel":"self","href":"/api/preferences/my:custom:scope:custom_id"}
          ],
          "updated_at": "2015/01/13 00:03:03 +0000"
        }
      },
      "update": {
        "status_code": "204 No Content",
        "access_rules": [
          "observer"
        ],
        "parameters": {
          "preference": {
            "class": "Hash",
            "non_blank": true,
            "mandatory": true
          },
          "preference[contents]": {
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The updated contents for the Preference."
          }
        },
        "route": "PUT    /api/preferences/:id(.:format)?          {:action=>\"update\", :controller=>\"preferences\"}",
        "description": "If 'id' is known, updates preference with given contents.\nOtherwise, creates new preference.\nNote: If create, will return '201 Created' and the location of the new preference."
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself"
      },
      "attributes": {
        "actions": "",
        "contents": "",
        "created_at": "",
        "links": "",
        "updated_at": ""
      },
      "description": "A Preference is a user and account-specific setting. Preferences are used in many part of the RightScale platform and can be used for custom purposes if desired.",
      "content_types": [
        "application/vnd.rightscale.preference"
      ]
    },
    "description": "A Preference is a user and account-specific setting. Preferences are used in many part of the RightScale platform and can be used for custom purposes if desired."
  },
  "InstanceCustomLodgements": {
    "methods": {
      "create": {
        "status_code": "201 Created",
        "access_rules": [
          "actor||instance"
        ],
        "parameters": {
          "quantity[][name]": {
            "class": "String",
            "non_blank": true,
            "description": "The name of the quantity. A customer-specific string, e.g. \"MB/s\" or \"GB/Month\"."
          },
          "quantity[][value]": {
            "regex": "/^-?\\d+$/",
            "class": "String",
            "non_blank": true,
            "description": "The value of the quantity. Should be a positive integer."
          },
          "timeframe": {
            "regex": "/^\\d{4}_\\d{2}(_\\d{2})?$/",
            "class": "String",
            "non_blank": true,
            "mandatory": true,
            "description": "The time-frame (either a month \"YYYY_MM\" or a single day \"YYYY_MM_DD\") for which the quantity value is valid (currently for the PDT timezone only)."
          },
          "quantity": {
            "class": "Array",
            "non_blank": true,
            "mandatory": true,
            "description": "At least one name/value pair must be specified. Currently, a maximum of 2 name/value pairs is supported."
          }
        },
        "route": "POST   /api/clouds/:cloud_id/instances/:instance_id/instance_custom_lodgements(.:format)? {:action=>\"create\", :controller=>\"instance_custom_lodgements\"}",
        "description": "Create a lodgement with the quantity and timeframe specified."
      },
      "destroy": {
        "status_code": "204 No Content",
        "access_rules": [
          "actor||instance"
        ],
        "parameters": {
        },
        "route": "DELETE /api/clouds/:cloud_id/instances/:instance_id/instance_custom_lodgements/:id(.:format)? {:action=>\"destroy\", :controller=>\"instance_custom_lodgements\"}",
        "description": "Destroy the specified lodgement."
      },
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer||instance"
        ],
        "filters": {
          "timeframe": {
            "description": "The timeframe (either a month \"YYYY_MM\" or a single day \"YYYY_MM_DD\") of the Lodgement to filter on."
          }
        },
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default"
            ]
          }
        },
        "route": "GET    /api/clouds/:cloud_id/instances/:instance_id/instance_custom_lodgements(.:format)? {:action=>\"index\", :controller=>\"instance_custom_lodgements\"}",
        "description": "List InstanceCustomLodgements of a given cloud and instance."
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer||instance"
        ],
        "parameters": {
        },
        "route": "GET    /api/clouds/:cloud_id/instances/:instance_id/instance_custom_lodgements/:id(.:format)? {:action=>\"show\", :controller=>\"instance_custom_lodgements\"}",
        "description": "Show the specified lodgement."
      },
      "update": {
        "status_code": "204 No Content",
        "access_rules": [
          "actor||instance"
        ],
        "parameters": {
          "quantity[][name]": {
            "class": "String",
            "non_blank": true,
            "description": "The name of the quantity. A customer-specific string, e.g. \"MB/s\" or \"GB/Month\"."
          },
          "quantity[][value]": {
            "regex": "/^-?\\d+$/",
            "class": "String",
            "non_blank": true,
            "description": "The value of the quantity. Should be a positive integer."
          },
          "quantity": {
            "class": "Array",
            "non_blank": true,
            "mandatory": true,
            "description": "At least one name/value pair must be specified. Currently, a maximum of 2 name/value pairs is supported."
          }
        },
        "route": "PUT    /api/clouds/:cloud_id/instances/:instance_id/instance_custom_lodgements/:id(.:format)? {:action=>\"update\", :controller=>\"instance_custom_lodgements\"}",
        "description": "Update a lodgement with the quantity specified."
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself",
        "deployment": "Associated deployment",
        "instance": "Associated instance",
        "cloud": "Associated cloud",
        "account": "Associated account",
        "server_template": "Associated server template"
      },
      "attributes": {
        "resource_template_library_href": "",
        "actions": "",
        "resource_billing_end_at": "",
        "end_at": "",
        "resource_template_published_by_account_id": "",
        "quantity": "",
        "resource_launched_by": "",
        "resource_instance_type": "",
        "resource_uid": "",
        "links": "",
        "account_owner": "",
        "resource_template_name": "",
        "start_at": "",
        "resource_billing_start_at": ""
      },
      "description": "An InstanceCustomLodgement represents a way to create custom reports about a specific instance with a user defined quantity.  Replaces the legacy Instances#setcustomlodgement interface.",
      "content_types": [
        "application/vnd.rightscale.instance_custom_lodgement"
      ]
    },
    "description": "An InstanceCustomLodgement represents a way to create custom reports about a specific instance with a user defined quantity.  Replaces the legacy Instances#setcustomlodgement interface."
  },
  "Datacenters": {
    "methods": {
      "index": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "filters": {
          "resource_uid": {
            "description": "Resource Unique IDentifier for the Datacenter / Zone to filter on."
          },
          "name": {
            "partial_match": true,
            "description": "Name of the Datacenter / Zone to filter on."
          }
        },
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default"
            ]
          },
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "route": "GET    /api/clouds/:cloud_id/datacenters(.:format)? {:action=>\"index\", :controller=>\"datacenters\"}",
        "description": "Lists all Datacenters for a particular cloud.",
        "example_resource": {
          "actions": [

          ],
          "resource_uid": "RESOURCE_2638412472",
          "links": [
            {"rel":"self","href":"/api/clouds/888/datacenters/ABC3016412800DEF"},
            {"rel":"cloud","href":"/api/clouds/888"}
          ],
          "description": null,
          "name": "NAME_1281292591"
        }
      },
      "show": {
        "status_code": "200 OK",
        "access_rules": [
          "observer"
        ],
        "parameters": {
          "view": {
            "class": "String",
            "non_blank": true,
            "valid_values": [
              "default"
            ]
          }
        },
        "route": "GET    /api/clouds/:cloud_id/datacenters/:id(.:format)? {:action=>\"show\", :controller=>\"datacenters\"}",
        "description": "Displays information about a single Datacenter.",
        "example_resource": {
          "actions": [

          ],
          "resource_uid": "RESOURCE_2638412472",
          "links": [
            {"rel":"self","href":"/api/clouds/888/datacenters/ABC3016412800DEF"},
            {"rel":"cloud","href":"/api/clouds/888"}
          ],
          "description": null,
          "name": "NAME_1281292591"
        }
      }
    },
    "media_type": {
      "links": {
        "self": "Href of itself",
        "cloud": "Associated cloud"
      },
      "attributes": {
        "actions": "",
        "resource_uid": "",
        "links": "",
        "description": "",
        "name": ""
      },
      "description": "Datacenters represent isolated facilities within a cloud. The level and type of isolation is cloud dependent. \n While Datacenters in large public clouds might correspond to different physical buildings, with different power, \n internet links...etc., Datacenters within the context of a private cloud might simply correspond to having different network providers.\n\nSpreading servers across distinct Datacenters helps minimize outages.",
      "content_types": [
        "application/vnd.rightscale.datacenter"
      ]
    },
    "description": "Datacenters represent isolated facilities within a cloud. The level and type of isolation is cloud dependent. \nWhile Datacenters in large public clouds might correspond to different physical buildings, with different power, \ninternet links...etc., Datacenters within the context of a private cloud might simply correspond to having different network providers.\n\nSpreading servers across distinct Datacenters helps minimize outages."
  }
}